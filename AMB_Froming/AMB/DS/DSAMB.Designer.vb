'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DSAMB"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DSAMB
    Inherits Global.System.Data.DataSet
    
    Private tabletbl_Pro_Article As tbl_Pro_ArticleDataTable
    
    Private tabletbl_Pro_Article_D As tbl_Pro_Article_DDataTable
    
    Private tabletbl_Inv_Tran_Date As tbl_Inv_Tran_DateDataTable
    
    Private tabletbl_PC_AMB_Hours_Tran As tbl_PC_AMB_Hours_TranDataTable
    
    Private tableView_POD As View_PODDataTable
    
    Private tableView_PO As View_PODataTable
    
    Private tableView_AMb_Forming As View_AMb_FormingDataTable
    
    Private tableView_Daily_Sum As View_Daily_SumDataTable
    
    Private tableView_AMb_Article_Wise_Sum As View_AMb_Article_Wise_SumDataTable
    
    Private tabletbl_PC_AMB_Line As tbl_PC_AMB_LineDataTable
    
    Private tableView_max_Froming As View_max_FromingDataTable
    
    Private tableView_AMB_Incentive_RFT As View_AMB_Incentive_RFTDataTable
    
    Private tableView_AMb_Repair As View_AMb_RepairDataTable
    
    Private tableView_AMb_RepairPAss As View_AMb_RepairPAssDataTable
    
    Private tableFroming_Hourlly As Froming_HourllyDataTable
    
    Private tableView_Repair_Qty As View_Repair_QtyDataTable
    
    Private tableView_Article_Wise_Fail As View_Article_Wise_FailDataTable
    
    Private tableView_AMb_Forming_Repair As View_AMb_Forming_RepairDataTable
    
    Private tableView_AMb_Fresh_Pass As View_AMb_Fresh_PassDataTable
    
    Private tableView_AMb_Article_Wise_Fresh As View_AMb_Article_Wise_FreshDataTable
    
    Private tabletbl_PC_AMB_Line1 As tbl_PC_AMB_Line1DataTable
    
    Private tabletbl_Pro_Amb_Article As tbl_Pro_Amb_ArticleDataTable
    
    Private relationtbl_Pro_Article_tbl_Pro_Article_D As Global.System.Data.DataRelation
    
    Private relationView_PO_View_POD As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("tbl_Pro_Article")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_Pro_ArticleDataTable(ds.Tables("tbl_Pro_Article")))
            End If
            If (Not (ds.Tables("tbl_Pro_Article_D")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_Pro_Article_DDataTable(ds.Tables("tbl_Pro_Article_D")))
            End If
            If (Not (ds.Tables("tbl_Inv_Tran_Date")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_Inv_Tran_DateDataTable(ds.Tables("tbl_Inv_Tran_Date")))
            End If
            If (Not (ds.Tables("tbl_PC_AMB_Hours_Tran")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_PC_AMB_Hours_TranDataTable(ds.Tables("tbl_PC_AMB_Hours_Tran")))
            End If
            If (Not (ds.Tables("View_POD")) Is Nothing) Then
                MyBase.Tables.Add(New View_PODDataTable(ds.Tables("View_POD")))
            End If
            If (Not (ds.Tables("View_PO")) Is Nothing) Then
                MyBase.Tables.Add(New View_PODataTable(ds.Tables("View_PO")))
            End If
            If (Not (ds.Tables("View_AMb_Forming")) Is Nothing) Then
                MyBase.Tables.Add(New View_AMb_FormingDataTable(ds.Tables("View_AMb_Forming")))
            End If
            If (Not (ds.Tables("View_Daily_Sum")) Is Nothing) Then
                MyBase.Tables.Add(New View_Daily_SumDataTable(ds.Tables("View_Daily_Sum")))
            End If
            If (Not (ds.Tables("View_AMb_Article Wise_Sum")) Is Nothing) Then
                MyBase.Tables.Add(New View_AMb_Article_Wise_SumDataTable(ds.Tables("View_AMb_Article Wise_Sum")))
            End If
            If (Not (ds.Tables("tbl_PC_AMB_Line")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_PC_AMB_LineDataTable(ds.Tables("tbl_PC_AMB_Line")))
            End If
            If (Not (ds.Tables("View_max_Froming")) Is Nothing) Then
                MyBase.Tables.Add(New View_max_FromingDataTable(ds.Tables("View_max_Froming")))
            End If
            If (Not (ds.Tables("View_AMB_Incentive_RFT")) Is Nothing) Then
                MyBase.Tables.Add(New View_AMB_Incentive_RFTDataTable(ds.Tables("View_AMB_Incentive_RFT")))
            End If
            If (Not (ds.Tables("View_AMb_Repair")) Is Nothing) Then
                MyBase.Tables.Add(New View_AMb_RepairDataTable(ds.Tables("View_AMb_Repair")))
            End If
            If (Not (ds.Tables("View_AMb_RepairPAss")) Is Nothing) Then
                MyBase.Tables.Add(New View_AMb_RepairPAssDataTable(ds.Tables("View_AMb_RepairPAss")))
            End If
            If (Not (ds.Tables("Froming_Hourlly")) Is Nothing) Then
                MyBase.Tables.Add(New Froming_HourllyDataTable(ds.Tables("Froming_Hourlly")))
            End If
            If (Not (ds.Tables("View_Repair_Qty")) Is Nothing) Then
                MyBase.Tables.Add(New View_Repair_QtyDataTable(ds.Tables("View_Repair_Qty")))
            End If
            If (Not (ds.Tables("View_Article_Wise_Fail")) Is Nothing) Then
                MyBase.Tables.Add(New View_Article_Wise_FailDataTable(ds.Tables("View_Article_Wise_Fail")))
            End If
            If (Not (ds.Tables("View_AMb_Forming_Repair")) Is Nothing) Then
                MyBase.Tables.Add(New View_AMb_Forming_RepairDataTable(ds.Tables("View_AMb_Forming_Repair")))
            End If
            If (Not (ds.Tables("View_AMb_Fresh_Pass")) Is Nothing) Then
                MyBase.Tables.Add(New View_AMb_Fresh_PassDataTable(ds.Tables("View_AMb_Fresh_Pass")))
            End If
            If (Not (ds.Tables("View_AMb_Article Wise_Fresh")) Is Nothing) Then
                MyBase.Tables.Add(New View_AMb_Article_Wise_FreshDataTable(ds.Tables("View_AMb_Article Wise_Fresh")))
            End If
            If (Not (ds.Tables("tbl_PC_AMB_Line1")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_PC_AMB_Line1DataTable(ds.Tables("tbl_PC_AMB_Line1")))
            End If
            If (Not (ds.Tables("tbl_Pro_Amb_Article")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_Pro_Amb_ArticleDataTable(ds.Tables("tbl_Pro_Amb_Article")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_Pro_Article() As tbl_Pro_ArticleDataTable
        Get
            Return Me.tabletbl_Pro_Article
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_Pro_Article_D() As tbl_Pro_Article_DDataTable
        Get
            Return Me.tabletbl_Pro_Article_D
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_Inv_Tran_Date() As tbl_Inv_Tran_DateDataTable
        Get
            Return Me.tabletbl_Inv_Tran_Date
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_PC_AMB_Hours_Tran() As tbl_PC_AMB_Hours_TranDataTable
        Get
            Return Me.tabletbl_PC_AMB_Hours_Tran
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property View_POD() As View_PODDataTable
        Get
            Return Me.tableView_POD
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property View_PO() As View_PODataTable
        Get
            Return Me.tableView_PO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property View_AMb_Forming() As View_AMb_FormingDataTable
        Get
            Return Me.tableView_AMb_Forming
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property View_Daily_Sum() As View_Daily_SumDataTable
        Get
            Return Me.tableView_Daily_Sum
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property View_AMb_Article_Wise_Sum() As View_AMb_Article_Wise_SumDataTable
        Get
            Return Me.tableView_AMb_Article_Wise_Sum
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_PC_AMB_Line() As tbl_PC_AMB_LineDataTable
        Get
            Return Me.tabletbl_PC_AMB_Line
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property View_max_Froming() As View_max_FromingDataTable
        Get
            Return Me.tableView_max_Froming
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property View_AMB_Incentive_RFT() As View_AMB_Incentive_RFTDataTable
        Get
            Return Me.tableView_AMB_Incentive_RFT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property View_AMb_Repair() As View_AMb_RepairDataTable
        Get
            Return Me.tableView_AMb_Repair
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property View_AMb_RepairPAss() As View_AMb_RepairPAssDataTable
        Get
            Return Me.tableView_AMb_RepairPAss
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Froming_Hourlly() As Froming_HourllyDataTable
        Get
            Return Me.tableFroming_Hourlly
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property View_Repair_Qty() As View_Repair_QtyDataTable
        Get
            Return Me.tableView_Repair_Qty
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property View_Article_Wise_Fail() As View_Article_Wise_FailDataTable
        Get
            Return Me.tableView_Article_Wise_Fail
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property View_AMb_Forming_Repair() As View_AMb_Forming_RepairDataTable
        Get
            Return Me.tableView_AMb_Forming_Repair
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property View_AMb_Fresh_Pass() As View_AMb_Fresh_PassDataTable
        Get
            Return Me.tableView_AMb_Fresh_Pass
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property View_AMb_Article_Wise_Fresh() As View_AMb_Article_Wise_FreshDataTable
        Get
            Return Me.tableView_AMb_Article_Wise_Fresh
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_PC_AMB_Line1() As tbl_PC_AMB_Line1DataTable
        Get
            Return Me.tabletbl_PC_AMB_Line1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_Pro_Amb_Article() As tbl_Pro_Amb_ArticleDataTable
        Get
            Return Me.tabletbl_Pro_Amb_Article
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DSAMB = CType(MyBase.Clone,DSAMB)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("tbl_Pro_Article")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_Pro_ArticleDataTable(ds.Tables("tbl_Pro_Article")))
            End If
            If (Not (ds.Tables("tbl_Pro_Article_D")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_Pro_Article_DDataTable(ds.Tables("tbl_Pro_Article_D")))
            End If
            If (Not (ds.Tables("tbl_Inv_Tran_Date")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_Inv_Tran_DateDataTable(ds.Tables("tbl_Inv_Tran_Date")))
            End If
            If (Not (ds.Tables("tbl_PC_AMB_Hours_Tran")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_PC_AMB_Hours_TranDataTable(ds.Tables("tbl_PC_AMB_Hours_Tran")))
            End If
            If (Not (ds.Tables("View_POD")) Is Nothing) Then
                MyBase.Tables.Add(New View_PODDataTable(ds.Tables("View_POD")))
            End If
            If (Not (ds.Tables("View_PO")) Is Nothing) Then
                MyBase.Tables.Add(New View_PODataTable(ds.Tables("View_PO")))
            End If
            If (Not (ds.Tables("View_AMb_Forming")) Is Nothing) Then
                MyBase.Tables.Add(New View_AMb_FormingDataTable(ds.Tables("View_AMb_Forming")))
            End If
            If (Not (ds.Tables("View_Daily_Sum")) Is Nothing) Then
                MyBase.Tables.Add(New View_Daily_SumDataTable(ds.Tables("View_Daily_Sum")))
            End If
            If (Not (ds.Tables("View_AMb_Article Wise_Sum")) Is Nothing) Then
                MyBase.Tables.Add(New View_AMb_Article_Wise_SumDataTable(ds.Tables("View_AMb_Article Wise_Sum")))
            End If
            If (Not (ds.Tables("tbl_PC_AMB_Line")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_PC_AMB_LineDataTable(ds.Tables("tbl_PC_AMB_Line")))
            End If
            If (Not (ds.Tables("View_max_Froming")) Is Nothing) Then
                MyBase.Tables.Add(New View_max_FromingDataTable(ds.Tables("View_max_Froming")))
            End If
            If (Not (ds.Tables("View_AMB_Incentive_RFT")) Is Nothing) Then
                MyBase.Tables.Add(New View_AMB_Incentive_RFTDataTable(ds.Tables("View_AMB_Incentive_RFT")))
            End If
            If (Not (ds.Tables("View_AMb_Repair")) Is Nothing) Then
                MyBase.Tables.Add(New View_AMb_RepairDataTable(ds.Tables("View_AMb_Repair")))
            End If
            If (Not (ds.Tables("View_AMb_RepairPAss")) Is Nothing) Then
                MyBase.Tables.Add(New View_AMb_RepairPAssDataTable(ds.Tables("View_AMb_RepairPAss")))
            End If
            If (Not (ds.Tables("Froming_Hourlly")) Is Nothing) Then
                MyBase.Tables.Add(New Froming_HourllyDataTable(ds.Tables("Froming_Hourlly")))
            End If
            If (Not (ds.Tables("View_Repair_Qty")) Is Nothing) Then
                MyBase.Tables.Add(New View_Repair_QtyDataTable(ds.Tables("View_Repair_Qty")))
            End If
            If (Not (ds.Tables("View_Article_Wise_Fail")) Is Nothing) Then
                MyBase.Tables.Add(New View_Article_Wise_FailDataTable(ds.Tables("View_Article_Wise_Fail")))
            End If
            If (Not (ds.Tables("View_AMb_Forming_Repair")) Is Nothing) Then
                MyBase.Tables.Add(New View_AMb_Forming_RepairDataTable(ds.Tables("View_AMb_Forming_Repair")))
            End If
            If (Not (ds.Tables("View_AMb_Fresh_Pass")) Is Nothing) Then
                MyBase.Tables.Add(New View_AMb_Fresh_PassDataTable(ds.Tables("View_AMb_Fresh_Pass")))
            End If
            If (Not (ds.Tables("View_AMb_Article Wise_Fresh")) Is Nothing) Then
                MyBase.Tables.Add(New View_AMb_Article_Wise_FreshDataTable(ds.Tables("View_AMb_Article Wise_Fresh")))
            End If
            If (Not (ds.Tables("tbl_PC_AMB_Line1")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_PC_AMB_Line1DataTable(ds.Tables("tbl_PC_AMB_Line1")))
            End If
            If (Not (ds.Tables("tbl_Pro_Amb_Article")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_Pro_Amb_ArticleDataTable(ds.Tables("tbl_Pro_Amb_Article")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tabletbl_Pro_Article = CType(MyBase.Tables("tbl_Pro_Article"),tbl_Pro_ArticleDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_Pro_Article) Is Nothing) Then
                Me.tabletbl_Pro_Article.InitVars
            End If
        End If
        Me.tabletbl_Pro_Article_D = CType(MyBase.Tables("tbl_Pro_Article_D"),tbl_Pro_Article_DDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_Pro_Article_D) Is Nothing) Then
                Me.tabletbl_Pro_Article_D.InitVars
            End If
        End If
        Me.tabletbl_Inv_Tran_Date = CType(MyBase.Tables("tbl_Inv_Tran_Date"),tbl_Inv_Tran_DateDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_Inv_Tran_Date) Is Nothing) Then
                Me.tabletbl_Inv_Tran_Date.InitVars
            End If
        End If
        Me.tabletbl_PC_AMB_Hours_Tran = CType(MyBase.Tables("tbl_PC_AMB_Hours_Tran"),tbl_PC_AMB_Hours_TranDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_PC_AMB_Hours_Tran) Is Nothing) Then
                Me.tabletbl_PC_AMB_Hours_Tran.InitVars
            End If
        End If
        Me.tableView_POD = CType(MyBase.Tables("View_POD"),View_PODDataTable)
        If (initTable = true) Then
            If (Not (Me.tableView_POD) Is Nothing) Then
                Me.tableView_POD.InitVars
            End If
        End If
        Me.tableView_PO = CType(MyBase.Tables("View_PO"),View_PODataTable)
        If (initTable = true) Then
            If (Not (Me.tableView_PO) Is Nothing) Then
                Me.tableView_PO.InitVars
            End If
        End If
        Me.tableView_AMb_Forming = CType(MyBase.Tables("View_AMb_Forming"),View_AMb_FormingDataTable)
        If (initTable = true) Then
            If (Not (Me.tableView_AMb_Forming) Is Nothing) Then
                Me.tableView_AMb_Forming.InitVars
            End If
        End If
        Me.tableView_Daily_Sum = CType(MyBase.Tables("View_Daily_Sum"),View_Daily_SumDataTable)
        If (initTable = true) Then
            If (Not (Me.tableView_Daily_Sum) Is Nothing) Then
                Me.tableView_Daily_Sum.InitVars
            End If
        End If
        Me.tableView_AMb_Article_Wise_Sum = CType(MyBase.Tables("View_AMb_Article Wise_Sum"),View_AMb_Article_Wise_SumDataTable)
        If (initTable = true) Then
            If (Not (Me.tableView_AMb_Article_Wise_Sum) Is Nothing) Then
                Me.tableView_AMb_Article_Wise_Sum.InitVars
            End If
        End If
        Me.tabletbl_PC_AMB_Line = CType(MyBase.Tables("tbl_PC_AMB_Line"),tbl_PC_AMB_LineDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_PC_AMB_Line) Is Nothing) Then
                Me.tabletbl_PC_AMB_Line.InitVars
            End If
        End If
        Me.tableView_max_Froming = CType(MyBase.Tables("View_max_Froming"),View_max_FromingDataTable)
        If (initTable = true) Then
            If (Not (Me.tableView_max_Froming) Is Nothing) Then
                Me.tableView_max_Froming.InitVars
            End If
        End If
        Me.tableView_AMB_Incentive_RFT = CType(MyBase.Tables("View_AMB_Incentive_RFT"),View_AMB_Incentive_RFTDataTable)
        If (initTable = true) Then
            If (Not (Me.tableView_AMB_Incentive_RFT) Is Nothing) Then
                Me.tableView_AMB_Incentive_RFT.InitVars
            End If
        End If
        Me.tableView_AMb_Repair = CType(MyBase.Tables("View_AMb_Repair"),View_AMb_RepairDataTable)
        If (initTable = true) Then
            If (Not (Me.tableView_AMb_Repair) Is Nothing) Then
                Me.tableView_AMb_Repair.InitVars
            End If
        End If
        Me.tableView_AMb_RepairPAss = CType(MyBase.Tables("View_AMb_RepairPAss"),View_AMb_RepairPAssDataTable)
        If (initTable = true) Then
            If (Not (Me.tableView_AMb_RepairPAss) Is Nothing) Then
                Me.tableView_AMb_RepairPAss.InitVars
            End If
        End If
        Me.tableFroming_Hourlly = CType(MyBase.Tables("Froming_Hourlly"),Froming_HourllyDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFroming_Hourlly) Is Nothing) Then
                Me.tableFroming_Hourlly.InitVars
            End If
        End If
        Me.tableView_Repair_Qty = CType(MyBase.Tables("View_Repair_Qty"),View_Repair_QtyDataTable)
        If (initTable = true) Then
            If (Not (Me.tableView_Repair_Qty) Is Nothing) Then
                Me.tableView_Repair_Qty.InitVars
            End If
        End If
        Me.tableView_Article_Wise_Fail = CType(MyBase.Tables("View_Article_Wise_Fail"),View_Article_Wise_FailDataTable)
        If (initTable = true) Then
            If (Not (Me.tableView_Article_Wise_Fail) Is Nothing) Then
                Me.tableView_Article_Wise_Fail.InitVars
            End If
        End If
        Me.tableView_AMb_Forming_Repair = CType(MyBase.Tables("View_AMb_Forming_Repair"),View_AMb_Forming_RepairDataTable)
        If (initTable = true) Then
            If (Not (Me.tableView_AMb_Forming_Repair) Is Nothing) Then
                Me.tableView_AMb_Forming_Repair.InitVars
            End If
        End If
        Me.tableView_AMb_Fresh_Pass = CType(MyBase.Tables("View_AMb_Fresh_Pass"),View_AMb_Fresh_PassDataTable)
        If (initTable = true) Then
            If (Not (Me.tableView_AMb_Fresh_Pass) Is Nothing) Then
                Me.tableView_AMb_Fresh_Pass.InitVars
            End If
        End If
        Me.tableView_AMb_Article_Wise_Fresh = CType(MyBase.Tables("View_AMb_Article Wise_Fresh"),View_AMb_Article_Wise_FreshDataTable)
        If (initTable = true) Then
            If (Not (Me.tableView_AMb_Article_Wise_Fresh) Is Nothing) Then
                Me.tableView_AMb_Article_Wise_Fresh.InitVars
            End If
        End If
        Me.tabletbl_PC_AMB_Line1 = CType(MyBase.Tables("tbl_PC_AMB_Line1"),tbl_PC_AMB_Line1DataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_PC_AMB_Line1) Is Nothing) Then
                Me.tabletbl_PC_AMB_Line1.InitVars
            End If
        End If
        Me.tabletbl_Pro_Amb_Article = CType(MyBase.Tables("tbl_Pro_Amb_Article"),tbl_Pro_Amb_ArticleDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_Pro_Amb_Article) Is Nothing) Then
                Me.tabletbl_Pro_Amb_Article.InitVars
            End If
        End If
        Me.relationtbl_Pro_Article_tbl_Pro_Article_D = Me.Relations("tbl_Pro_Article_tbl_Pro_Article_D")
        Me.relationView_PO_View_POD = Me.Relations("View_PO_View_POD")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DSAMB"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DSAMB.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tabletbl_Pro_Article = New tbl_Pro_ArticleDataTable()
        MyBase.Tables.Add(Me.tabletbl_Pro_Article)
        Me.tabletbl_Pro_Article_D = New tbl_Pro_Article_DDataTable()
        MyBase.Tables.Add(Me.tabletbl_Pro_Article_D)
        Me.tabletbl_Inv_Tran_Date = New tbl_Inv_Tran_DateDataTable()
        MyBase.Tables.Add(Me.tabletbl_Inv_Tran_Date)
        Me.tabletbl_PC_AMB_Hours_Tran = New tbl_PC_AMB_Hours_TranDataTable()
        MyBase.Tables.Add(Me.tabletbl_PC_AMB_Hours_Tran)
        Me.tableView_POD = New View_PODDataTable()
        MyBase.Tables.Add(Me.tableView_POD)
        Me.tableView_PO = New View_PODataTable()
        MyBase.Tables.Add(Me.tableView_PO)
        Me.tableView_AMb_Forming = New View_AMb_FormingDataTable()
        MyBase.Tables.Add(Me.tableView_AMb_Forming)
        Me.tableView_Daily_Sum = New View_Daily_SumDataTable()
        MyBase.Tables.Add(Me.tableView_Daily_Sum)
        Me.tableView_AMb_Article_Wise_Sum = New View_AMb_Article_Wise_SumDataTable()
        MyBase.Tables.Add(Me.tableView_AMb_Article_Wise_Sum)
        Me.tabletbl_PC_AMB_Line = New tbl_PC_AMB_LineDataTable()
        MyBase.Tables.Add(Me.tabletbl_PC_AMB_Line)
        Me.tableView_max_Froming = New View_max_FromingDataTable()
        MyBase.Tables.Add(Me.tableView_max_Froming)
        Me.tableView_AMB_Incentive_RFT = New View_AMB_Incentive_RFTDataTable()
        MyBase.Tables.Add(Me.tableView_AMB_Incentive_RFT)
        Me.tableView_AMb_Repair = New View_AMb_RepairDataTable()
        MyBase.Tables.Add(Me.tableView_AMb_Repair)
        Me.tableView_AMb_RepairPAss = New View_AMb_RepairPAssDataTable()
        MyBase.Tables.Add(Me.tableView_AMb_RepairPAss)
        Me.tableFroming_Hourlly = New Froming_HourllyDataTable()
        MyBase.Tables.Add(Me.tableFroming_Hourlly)
        Me.tableView_Repair_Qty = New View_Repair_QtyDataTable()
        MyBase.Tables.Add(Me.tableView_Repair_Qty)
        Me.tableView_Article_Wise_Fail = New View_Article_Wise_FailDataTable()
        MyBase.Tables.Add(Me.tableView_Article_Wise_Fail)
        Me.tableView_AMb_Forming_Repair = New View_AMb_Forming_RepairDataTable()
        MyBase.Tables.Add(Me.tableView_AMb_Forming_Repair)
        Me.tableView_AMb_Fresh_Pass = New View_AMb_Fresh_PassDataTable()
        MyBase.Tables.Add(Me.tableView_AMb_Fresh_Pass)
        Me.tableView_AMb_Article_Wise_Fresh = New View_AMb_Article_Wise_FreshDataTable()
        MyBase.Tables.Add(Me.tableView_AMb_Article_Wise_Fresh)
        Me.tabletbl_PC_AMB_Line1 = New tbl_PC_AMB_Line1DataTable()
        MyBase.Tables.Add(Me.tabletbl_PC_AMB_Line1)
        Me.tabletbl_Pro_Amb_Article = New tbl_Pro_Amb_ArticleDataTable()
        MyBase.Tables.Add(Me.tabletbl_Pro_Amb_Article)
        Me.relationtbl_Pro_Article_tbl_Pro_Article_D = New Global.System.Data.DataRelation("tbl_Pro_Article_tbl_Pro_Article_D", New Global.System.Data.DataColumn() {Me.tabletbl_Pro_Article.ClientIDColumn, Me.tabletbl_Pro_Article.ModelIDColumn, Me.tabletbl_Pro_Article.ArtIDColumn}, New Global.System.Data.DataColumn() {Me.tabletbl_Pro_Article_D.ClientIDColumn, Me.tabletbl_Pro_Article_D.ModelIDColumn, Me.tabletbl_Pro_Article_D.ArtIDColumn}, false)
        Me.Relations.Add(Me.relationtbl_Pro_Article_tbl_Pro_Article_D)
        Me.relationView_PO_View_POD = New Global.System.Data.DataRelation("View_PO_View_POD", New Global.System.Data.DataColumn() {Me.tableView_PO.POColumn}, New Global.System.Data.DataColumn() {Me.tableView_POD.POColumn}, false)
        Me.Relations.Add(Me.relationView_PO_View_POD)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializetbl_Pro_Article() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializetbl_Pro_Article_D() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializetbl_Inv_Tran_Date() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializetbl_PC_AMB_Hours_Tran() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeView_POD() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeView_PO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeView_AMb_Forming() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeView_Daily_Sum() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeView_AMb_Article_Wise_Sum() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializetbl_PC_AMB_Line() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeView_max_Froming() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeView_AMB_Incentive_RFT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeView_AMb_Repair() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeView_AMb_RepairPAss() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeFroming_Hourlly() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeView_Repair_Qty() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeView_Article_Wise_Fail() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeView_AMb_Forming_Repair() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeView_AMb_Fresh_Pass() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeView_AMb_Article_Wise_Fresh() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializetbl_PC_AMB_Line1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializetbl_Pro_Amb_Article() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DSAMB = New DSAMB()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub tbl_Pro_ArticleRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_Pro_ArticleRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub tbl_Pro_Article_DRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_Pro_Article_DRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub tbl_Inv_Tran_DateRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_Inv_Tran_DateRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub tbl_PC_AMB_Hours_TranRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_PC_AMB_Hours_TranRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub View_PODRowChangeEventHandler(ByVal sender As Object, ByVal e As View_PODRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub View_PORowChangeEventHandler(ByVal sender As Object, ByVal e As View_PORowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub View_AMb_FormingRowChangeEventHandler(ByVal sender As Object, ByVal e As View_AMb_FormingRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub View_Daily_SumRowChangeEventHandler(ByVal sender As Object, ByVal e As View_Daily_SumRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub View_AMb_Article_Wise_SumRowChangeEventHandler(ByVal sender As Object, ByVal e As View_AMb_Article_Wise_SumRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub tbl_PC_AMB_LineRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_PC_AMB_LineRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub View_max_FromingRowChangeEventHandler(ByVal sender As Object, ByVal e As View_max_FromingRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub View_AMB_Incentive_RFTRowChangeEventHandler(ByVal sender As Object, ByVal e As View_AMB_Incentive_RFTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub View_AMb_RepairRowChangeEventHandler(ByVal sender As Object, ByVal e As View_AMb_RepairRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub View_AMb_RepairPAssRowChangeEventHandler(ByVal sender As Object, ByVal e As View_AMb_RepairPAssRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub Froming_HourllyRowChangeEventHandler(ByVal sender As Object, ByVal e As Froming_HourllyRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub View_Repair_QtyRowChangeEventHandler(ByVal sender As Object, ByVal e As View_Repair_QtyRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub View_Article_Wise_FailRowChangeEventHandler(ByVal sender As Object, ByVal e As View_Article_Wise_FailRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub View_AMb_Forming_RepairRowChangeEventHandler(ByVal sender As Object, ByVal e As View_AMb_Forming_RepairRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub View_AMb_Fresh_PassRowChangeEventHandler(ByVal sender As Object, ByVal e As View_AMb_Fresh_PassRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub View_AMb_Article_Wise_FreshRowChangeEventHandler(ByVal sender As Object, ByVal e As View_AMb_Article_Wise_FreshRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub tbl_PC_AMB_Line1RowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_PC_AMB_Line1RowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub tbl_Pro_Amb_ArticleRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_Pro_Amb_ArticleRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_Pro_ArticleDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_Pro_ArticleRow)
        
        Private columnClientID As Global.System.Data.DataColumn
        
        Private columnModelID As Global.System.Data.DataColumn
        
        Private columnArtID As Global.System.Data.DataColumn
        
        Private columnArtCode As Global.System.Data.DataColumn
        
        Private columnTarget As Global.System.Data.DataColumn
        
        Private columnSAMForming As Global.System.Data.DataColumn
        
        Private columnSAMPacking As Global.System.Data.DataColumn
        
        Private columnTargetPacking As Global.System.Data.DataColumn
        
        Private columnModelNo As Global.System.Data.DataColumn
        
        Private columnModelName As Global.System.Data.DataColumn
        
        Private columnFactoryCode As Global.System.Data.DataColumn
        
        Private columnClientName As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_Pro_Article"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ClientIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ModelIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModelID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ArtIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArtID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ArtCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArtCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TargetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarget
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SAMFormingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSAMForming
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SAMPackingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSAMPacking
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TargetPackingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTargetPacking
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ModelNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModelNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ModelNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModelName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FactoryCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFactoryCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ClientNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_Pro_ArticleRow
            Get
                Return CType(Me.Rows(index),tbl_Pro_ArticleRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event tbl_Pro_ArticleRowChanging As tbl_Pro_ArticleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event tbl_Pro_ArticleRowChanged As tbl_Pro_ArticleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event tbl_Pro_ArticleRowDeleting As tbl_Pro_ArticleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event tbl_Pro_ArticleRowDeleted As tbl_Pro_ArticleRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub Addtbl_Pro_ArticleRow(ByVal row As tbl_Pro_ArticleRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function Addtbl_Pro_ArticleRow(ByVal ClientID As Integer, ByVal ModelID As Integer, ByVal ArtID As Integer, ByVal ArtCode As String, ByVal Target As Decimal, ByVal SAMForming As Decimal, ByVal SAMPacking As Decimal, ByVal TargetPacking As Decimal, ByVal ModelNo As String, ByVal ModelName As String, ByVal FactoryCode As String, ByVal ClientName As String) As tbl_Pro_ArticleRow
            Dim rowtbl_Pro_ArticleRow As tbl_Pro_ArticleRow = CType(Me.NewRow,tbl_Pro_ArticleRow)
            Dim columnValuesArray() As Object = New Object() {ClientID, ModelID, ArtID, ArtCode, Target, SAMForming, SAMPacking, TargetPacking, ModelNo, ModelName, FactoryCode, ClientName}
            rowtbl_Pro_ArticleRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_Pro_ArticleRow)
            Return rowtbl_Pro_ArticleRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByClientIDModelIDArtID(ByVal ClientID As Integer, ByVal ModelID As Integer, ByVal ArtID As Integer) As tbl_Pro_ArticleRow
            Return CType(Me.Rows.Find(New Object() {ClientID, ModelID, ArtID}),tbl_Pro_ArticleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_Pro_ArticleDataTable = CType(MyBase.Clone,tbl_Pro_ArticleDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_Pro_ArticleDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnClientID = MyBase.Columns("ClientID")
            Me.columnModelID = MyBase.Columns("ModelID")
            Me.columnArtID = MyBase.Columns("ArtID")
            Me.columnArtCode = MyBase.Columns("ArtCode")
            Me.columnTarget = MyBase.Columns("Target")
            Me.columnSAMForming = MyBase.Columns("SAMForming")
            Me.columnSAMPacking = MyBase.Columns("SAMPacking")
            Me.columnTargetPacking = MyBase.Columns("TargetPacking")
            Me.columnModelNo = MyBase.Columns("ModelNo")
            Me.columnModelName = MyBase.Columns("ModelName")
            Me.columnFactoryCode = MyBase.Columns("FactoryCode")
            Me.columnClientName = MyBase.Columns("ClientName")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnClientID = New Global.System.Data.DataColumn("ClientID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientID)
            Me.columnModelID = New Global.System.Data.DataColumn("ModelID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModelID)
            Me.columnArtID = New Global.System.Data.DataColumn("ArtID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArtID)
            Me.columnArtCode = New Global.System.Data.DataColumn("ArtCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArtCode)
            Me.columnTarget = New Global.System.Data.DataColumn("Target", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarget)
            Me.columnSAMForming = New Global.System.Data.DataColumn("SAMForming", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSAMForming)
            Me.columnSAMPacking = New Global.System.Data.DataColumn("SAMPacking", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSAMPacking)
            Me.columnTargetPacking = New Global.System.Data.DataColumn("TargetPacking", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTargetPacking)
            Me.columnModelNo = New Global.System.Data.DataColumn("ModelNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModelNo)
            Me.columnModelName = New Global.System.Data.DataColumn("ModelName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModelName)
            Me.columnFactoryCode = New Global.System.Data.DataColumn("FactoryCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFactoryCode)
            Me.columnClientName = New Global.System.Data.DataColumn("ClientName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientName)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnClientID, Me.columnModelID, Me.columnArtID}, true))
            Me.columnClientID.AllowDBNull = false
            Me.columnModelID.AllowDBNull = false
            Me.columnArtID.AllowDBNull = false
            Me.columnArtCode.AllowDBNull = false
            Me.columnArtCode.MaxLength = 50
            Me.columnModelNo.AllowDBNull = false
            Me.columnModelNo.MaxLength = 50
            Me.columnModelName.AllowDBNull = false
            Me.columnModelName.MaxLength = 100
            Me.columnFactoryCode.MaxLength = 10
            Me.columnClientName.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Newtbl_Pro_ArticleRow() As tbl_Pro_ArticleRow
            Return CType(Me.NewRow,tbl_Pro_ArticleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_Pro_ArticleRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_Pro_ArticleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_Pro_ArticleRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_Pro_ArticleRowChanged(Me, New tbl_Pro_ArticleRowChangeEvent(CType(e.Row,tbl_Pro_ArticleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_Pro_ArticleRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_Pro_ArticleRowChanging(Me, New tbl_Pro_ArticleRowChangeEvent(CType(e.Row,tbl_Pro_ArticleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_Pro_ArticleRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_Pro_ArticleRowDeleted(Me, New tbl_Pro_ArticleRowChangeEvent(CType(e.Row,tbl_Pro_ArticleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_Pro_ArticleRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_Pro_ArticleRowDeleting(Me, New tbl_Pro_ArticleRowChangeEvent(CType(e.Row,tbl_Pro_ArticleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Removetbl_Pro_ArticleRow(ByVal row As tbl_Pro_ArticleRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSAMB = New DSAMB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_Pro_ArticleDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_Pro_Article_DDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_Pro_Article_DRow)
        
        Private columnClientID As Global.System.Data.DataColumn
        
        Private columnModelID As Global.System.Data.DataColumn
        
        Private columnArtID As Global.System.Data.DataColumn
        
        Private columnModelNo As Global.System.Data.DataColumn
        
        Private columnModelName As Global.System.Data.DataColumn
        
        Private columnFactoryCode As Global.System.Data.DataColumn
        
        Private columnArtSize As Global.System.Data.DataColumn
        
        Private columnUnitID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_Pro_Article_D"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ClientIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ModelIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModelID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ArtIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArtID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ModelNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModelNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ModelNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModelName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FactoryCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFactoryCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ArtSizeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArtSize
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property UnitIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnitID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_Pro_Article_DRow
            Get
                Return CType(Me.Rows(index),tbl_Pro_Article_DRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event tbl_Pro_Article_DRowChanging As tbl_Pro_Article_DRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event tbl_Pro_Article_DRowChanged As tbl_Pro_Article_DRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event tbl_Pro_Article_DRowDeleting As tbl_Pro_Article_DRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event tbl_Pro_Article_DRowDeleted As tbl_Pro_Article_DRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub Addtbl_Pro_Article_DRow(ByVal row As tbl_Pro_Article_DRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function Addtbl_Pro_Article_DRow(ByVal ClientID As Integer, ByVal ModelID As Integer, ByVal ArtID As Integer, ByVal ModelNo As String, ByVal ModelName As String, ByVal FactoryCode As String, ByVal ArtSize As String, ByVal UnitID As Integer) As tbl_Pro_Article_DRow
            Dim rowtbl_Pro_Article_DRow As tbl_Pro_Article_DRow = CType(Me.NewRow,tbl_Pro_Article_DRow)
            Dim columnValuesArray() As Object = New Object() {ClientID, ModelID, ArtID, ModelNo, ModelName, FactoryCode, ArtSize, UnitID}
            rowtbl_Pro_Article_DRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_Pro_Article_DRow)
            Return rowtbl_Pro_Article_DRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByClientIDModelIDArtIDArtSize(ByVal ClientID As Integer, ByVal ModelID As Integer, ByVal ArtID As Integer, ByVal ArtSize As String) As tbl_Pro_Article_DRow
            Return CType(Me.Rows.Find(New Object() {ClientID, ModelID, ArtID, ArtSize}),tbl_Pro_Article_DRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_Pro_Article_DDataTable = CType(MyBase.Clone,tbl_Pro_Article_DDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_Pro_Article_DDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnClientID = MyBase.Columns("ClientID")
            Me.columnModelID = MyBase.Columns("ModelID")
            Me.columnArtID = MyBase.Columns("ArtID")
            Me.columnModelNo = MyBase.Columns("ModelNo")
            Me.columnModelName = MyBase.Columns("ModelName")
            Me.columnFactoryCode = MyBase.Columns("FactoryCode")
            Me.columnArtSize = MyBase.Columns("ArtSize")
            Me.columnUnitID = MyBase.Columns("UnitID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnClientID = New Global.System.Data.DataColumn("ClientID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientID)
            Me.columnModelID = New Global.System.Data.DataColumn("ModelID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModelID)
            Me.columnArtID = New Global.System.Data.DataColumn("ArtID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArtID)
            Me.columnModelNo = New Global.System.Data.DataColumn("ModelNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModelNo)
            Me.columnModelName = New Global.System.Data.DataColumn("ModelName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModelName)
            Me.columnFactoryCode = New Global.System.Data.DataColumn("FactoryCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFactoryCode)
            Me.columnArtSize = New Global.System.Data.DataColumn("ArtSize", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArtSize)
            Me.columnUnitID = New Global.System.Data.DataColumn("UnitID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnitID)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnClientID, Me.columnModelID, Me.columnArtID, Me.columnArtSize}, true))
            Me.columnClientID.AllowDBNull = false
            Me.columnModelID.AllowDBNull = false
            Me.columnArtID.AllowDBNull = false
            Me.columnModelNo.AllowDBNull = false
            Me.columnModelNo.MaxLength = 50
            Me.columnModelName.AllowDBNull = false
            Me.columnModelName.MaxLength = 100
            Me.columnFactoryCode.MaxLength = 10
            Me.columnArtSize.AllowDBNull = false
            Me.columnArtSize.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Newtbl_Pro_Article_DRow() As tbl_Pro_Article_DRow
            Return CType(Me.NewRow,tbl_Pro_Article_DRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_Pro_Article_DRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_Pro_Article_DRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_Pro_Article_DRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_Pro_Article_DRowChanged(Me, New tbl_Pro_Article_DRowChangeEvent(CType(e.Row,tbl_Pro_Article_DRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_Pro_Article_DRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_Pro_Article_DRowChanging(Me, New tbl_Pro_Article_DRowChangeEvent(CType(e.Row,tbl_Pro_Article_DRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_Pro_Article_DRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_Pro_Article_DRowDeleted(Me, New tbl_Pro_Article_DRowChangeEvent(CType(e.Row,tbl_Pro_Article_DRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_Pro_Article_DRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_Pro_Article_DRowDeleting(Me, New tbl_Pro_Article_DRowChangeEvent(CType(e.Row,tbl_Pro_Article_DRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Removetbl_Pro_Article_DRow(ByVal row As tbl_Pro_Article_DRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSAMB = New DSAMB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_Pro_Article_DDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_Inv_Tran_DateDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_Inv_Tran_DateRow)
        
        Private columnDayNo As Global.System.Data.DataColumn
        
        Private columnDateName As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_Inv_Tran_Date"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DayNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDayNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DateNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_Inv_Tran_DateRow
            Get
                Return CType(Me.Rows(index),tbl_Inv_Tran_DateRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event tbl_Inv_Tran_DateRowChanging As tbl_Inv_Tran_DateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event tbl_Inv_Tran_DateRowChanged As tbl_Inv_Tran_DateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event tbl_Inv_Tran_DateRowDeleting As tbl_Inv_Tran_DateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event tbl_Inv_Tran_DateRowDeleted As tbl_Inv_Tran_DateRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub Addtbl_Inv_Tran_DateRow(ByVal row As tbl_Inv_Tran_DateRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function Addtbl_Inv_Tran_DateRow(ByVal DateName As Date) As tbl_Inv_Tran_DateRow
            Dim rowtbl_Inv_Tran_DateRow As tbl_Inv_Tran_DateRow = CType(Me.NewRow,tbl_Inv_Tran_DateRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, DateName}
            rowtbl_Inv_Tran_DateRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_Inv_Tran_DateRow)
            Return rowtbl_Inv_Tran_DateRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByDayNo(ByVal DayNo As Integer) As tbl_Inv_Tran_DateRow
            Return CType(Me.Rows.Find(New Object() {DayNo}),tbl_Inv_Tran_DateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_Inv_Tran_DateDataTable = CType(MyBase.Clone,tbl_Inv_Tran_DateDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_Inv_Tran_DateDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDayNo = MyBase.Columns("DayNo")
            Me.columnDateName = MyBase.Columns("DateName")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDayNo = New Global.System.Data.DataColumn("DayNo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDayNo)
            Me.columnDateName = New Global.System.Data.DataColumn("DateName", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateName)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnDayNo}, true))
            Me.columnDayNo.AutoIncrement = true
            Me.columnDayNo.AutoIncrementSeed = -1
            Me.columnDayNo.AutoIncrementStep = -1
            Me.columnDayNo.AllowDBNull = false
            Me.columnDayNo.ReadOnly = true
            Me.columnDayNo.Unique = true
            Me.columnDateName.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Newtbl_Inv_Tran_DateRow() As tbl_Inv_Tran_DateRow
            Return CType(Me.NewRow,tbl_Inv_Tran_DateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_Inv_Tran_DateRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_Inv_Tran_DateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_Inv_Tran_DateRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_Inv_Tran_DateRowChanged(Me, New tbl_Inv_Tran_DateRowChangeEvent(CType(e.Row,tbl_Inv_Tran_DateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_Inv_Tran_DateRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_Inv_Tran_DateRowChanging(Me, New tbl_Inv_Tran_DateRowChangeEvent(CType(e.Row,tbl_Inv_Tran_DateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_Inv_Tran_DateRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_Inv_Tran_DateRowDeleted(Me, New tbl_Inv_Tran_DateRowChangeEvent(CType(e.Row,tbl_Inv_Tran_DateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_Inv_Tran_DateRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_Inv_Tran_DateRowDeleting(Me, New tbl_Inv_Tran_DateRowChangeEvent(CType(e.Row,tbl_Inv_Tran_DateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Removetbl_Inv_Tran_DateRow(ByVal row As tbl_Inv_Tran_DateRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSAMB = New DSAMB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_Inv_Tran_DateDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_PC_AMB_Hours_TranDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_PC_AMB_Hours_TranRow)
        
        Private columnTranID As Global.System.Data.DataColumn
        
        Private columnPO As Global.System.Data.DataColumn
        
        Private columnPOM As Global.System.Data.DataColumn
        
        Private columnPOD As Global.System.Data.DataColumn
        
        Private columnArtSize As Global.System.Data.DataColumn
        
        Private columnDayID As Global.System.Data.DataColumn
        
        Private columnHourID As Global.System.Data.DataColumn
        
        Private columnLineID As Global.System.Data.DataColumn
        
        Private columnProcessID As Global.System.Data.DataColumn
        
        Private columnStrength As Global.System.Data.DataColumn
        
        Private columnPresent As Global.System.Data.DataColumn
        
        Private columnPackingStrength As Global.System.Data.DataColumn
        
        Private columnPackingPresent As Global.System.Data.DataColumn
        
        Private columnArtTarget As Global.System.Data.DataColumn
        
        Private columnArtPackingTarget As Global.System.Data.DataColumn
        
        Private columnArtSAM As Global.System.Data.DataColumn
        
        Private columnArtPackingSAM As Global.System.Data.DataColumn
        
        Private columnInput As Global.System.Data.DataColumn
        
        Private columnOutPut As Global.System.Data.DataColumn
        
        Private columnRejection As Global.System.Data.DataColumn
        
        Private columnClientID As Global.System.Data.DataColumn
        
        Private columnModelID As Global.System.Data.DataColumn
        
        Private columnArtID As Global.System.Data.DataColumn
        
        Private columnSeamClosingGlue As Global.System.Data.DataColumn
        
        Private columnPUC As Global.System.Data.DataColumn
        
        Private columnCoreCavity As Global.System.Data.DataColumn
        
        Private columnTouching As Global.System.Data.DataColumn
        
        Private columnOtherPrintingIssue As Global.System.Data.DataColumn
        
        Private columnPanelCavity As Global.System.Data.DataColumn
        
        Private columnOpenSeam As Global.System.Data.DataColumn
        
        Private columnSingleOpenStrip As Global.System.Data.DataColumn
        
        Private columnUnbondedPanels As Global.System.Data.DataColumn
        
        Private columnArtWork As Global.System.Data.DataColumn
        
        Private columnWrinkle As Global.System.Data.DataColumn
        
        Private columnZigZagSeam As Global.System.Data.DataColumn
        
        Private columnOverLap As Global.System.Data.DataColumn
        
        Private columnPanelDMG As Global.System.Data.DataColumn
        
        Private columnBGrade As Global.System.Data.DataColumn
        
        Private columnMissAlligment As Global.System.Data.DataColumn
        
        Private columnDisColor As Global.System.Data.DataColumn
        
        Private columnLogoSmearing As Global.System.Data.DataColumn
        
        Private columnLogoDoubling As Global.System.Data.DataColumn
        
        Private columnBarcodeMissing As Global.System.Data.DataColumn
        
        Private columnLargerSpots As Global.System.Data.DataColumn
        
        Private columnSmearing As Global.System.Data.DataColumn
        
        Private columnHFMissAlignment As Global.System.Data.DataColumn
        
        Private columnBlurPrinting As Global.System.Data.DataColumn
        
        Private columnBallType As Global.System.Data.DataColumn
        
        Private columnunevenBallSurface As Global.System.Data.DataColumn
        
        Private columnunshapecut As Global.System.Data.DataColumn
        
        Private columnzigzagedge As Global.System.Data.DataColumn
        
        Private columncuttingpanel As Global.System.Data.DataColumn
        
        Private columnheavyprintdefects As Global.System.Data.DataColumn
        
        Private columnNewTouching As Global.System.Data.DataColumn
        
        Private columnprintmissallignament As Global.System.Data.DataColumn
        
        Private columnanymisprint As Global.System.Data.DataColumn
        
        Private columncolourShape As Global.System.Data.DataColumn
        
        Private columnwrongartwork As Global.System.Data.DataColumn
        
        Private columnmaterialdefects As Global.System.Data.DataColumn
        
        Private columnnewopenSeam As Global.System.Data.DataColumn
        
        Private columnseamoverlapping As Global.System.Data.DataColumn
        
        Private columnwrinkles As Global.System.Data.DataColumn
        
        Private columnexcussglue As Global.System.Data.DataColumn
        
        Private columnmissingglue As Global.System.Data.DataColumn
        
        Private columnpressoremark As Global.System.Data.DataColumn
        
        Private columnairbubble As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_PC_AMB_Hours_Tran"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TranIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTranID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PODColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ArtSizeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArtSize
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DayIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDayID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property HourIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHourID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LineIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLineID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ProcessIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProcessID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property StrengthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStrength
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PresentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresent
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PackingStrengthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPackingStrength
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PackingPresentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPackingPresent
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ArtTargetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArtTarget
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ArtPackingTargetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArtPackingTarget
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ArtSAMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArtSAM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ArtPackingSAMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArtPackingSAM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property InputColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInput
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OutPutColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOutPut
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RejectionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRejection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ClientIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ModelIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModelID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ArtIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArtID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SeamClosingGlueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSeamClosingGlue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PUCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPUC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CoreCavityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCoreCavity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TouchingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTouching
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OtherPrintingIssueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOtherPrintingIssue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PanelCavityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPanelCavity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OpenSeamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOpenSeam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SingleOpenStripColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSingleOpenStrip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property UnbondedPanelsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnbondedPanels
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ArtWorkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArtWork
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WrinkleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWrinkle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ZigZagSeamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZigZagSeam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OverLapColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOverLap
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PanelDMGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPanelDMG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BGradeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBGrade
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property MissAlligmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMissAlligment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DisColorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDisColor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LogoSmearingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogoSmearing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LogoDoublingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogoDoubling
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BarcodeMissingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBarcodeMissing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LargerSpotsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLargerSpots
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SmearingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSmearing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property HFMissAlignmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHFMissAlignment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BlurPrintingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlurPrinting
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BallTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBallType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property unevenBallSurfaceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnunevenBallSurface
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property unshapecutColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnunshapecut
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property zigzagedgeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnzigzagedge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property cuttingpanelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncuttingpanel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property heavyprintdefectsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnheavyprintdefects
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NewTouchingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNewTouching
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property printmissallignamentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprintmissallignament
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property anymisprintColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnanymisprint
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property colourShapeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncolourShape
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property wrongartworkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwrongartwork
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property materialdefectsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmaterialdefects
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property newopenSeamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnewopenSeam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property seamoverlappingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnseamoverlapping
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property wrinklesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwrinkles
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property excussglueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnexcussglue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property missingglueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmissingglue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property pressoremarkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpressoremark
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property airbubbleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnairbubble
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_PC_AMB_Hours_TranRow
            Get
                Return CType(Me.Rows(index),tbl_PC_AMB_Hours_TranRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event tbl_PC_AMB_Hours_TranRowChanging As tbl_PC_AMB_Hours_TranRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event tbl_PC_AMB_Hours_TranRowChanged As tbl_PC_AMB_Hours_TranRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event tbl_PC_AMB_Hours_TranRowDeleting As tbl_PC_AMB_Hours_TranRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event tbl_PC_AMB_Hours_TranRowDeleted As tbl_PC_AMB_Hours_TranRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub Addtbl_PC_AMB_Hours_TranRow(ByVal row As tbl_PC_AMB_Hours_TranRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function Addtbl_PC_AMB_Hours_TranRow( _
                    ByVal PO As Integer,  _
                    ByVal POM As Integer,  _
                    ByVal POD As Integer,  _
                    ByVal ArtSize As String,  _
                    ByVal DayID As Integer,  _
                    ByVal HourID As Integer,  _
                    ByVal LineID As Integer,  _
                    ByVal ProcessID As Integer,  _
                    ByVal Strength As Decimal,  _
                    ByVal Present As Decimal,  _
                    ByVal PackingStrength As Decimal,  _
                    ByVal PackingPresent As Decimal,  _
                    ByVal ArtTarget As Decimal,  _
                    ByVal ArtPackingTarget As Decimal,  _
                    ByVal ArtSAM As Decimal,  _
                    ByVal ArtPackingSAM As Decimal,  _
                    ByVal Input As Decimal,  _
                    ByVal OutPut As Decimal,  _
                    ByVal Rejection As Decimal,  _
                    ByVal ClientID As Integer,  _
                    ByVal ModelID As Integer,  _
                    ByVal ArtID As Integer,  _
                    ByVal SeamClosingGlue As Decimal,  _
                    ByVal PUC As Decimal,  _
                    ByVal CoreCavity As Decimal,  _
                    ByVal Touching As Decimal,  _
                    ByVal OtherPrintingIssue As Decimal,  _
                    ByVal PanelCavity As Decimal,  _
                    ByVal OpenSeam As Decimal,  _
                    ByVal SingleOpenStrip As Decimal,  _
                    ByVal UnbondedPanels As Decimal,  _
                    ByVal ArtWork As Decimal,  _
                    ByVal Wrinkle As Decimal,  _
                    ByVal ZigZagSeam As Decimal,  _
                    ByVal OverLap As Decimal,  _
                    ByVal PanelDMG As Decimal,  _
                    ByVal BGrade As Decimal,  _
                    ByVal MissAlligment As Decimal,  _
                    ByVal DisColor As Decimal,  _
                    ByVal LogoSmearing As Decimal,  _
                    ByVal LogoDoubling As Decimal,  _
                    ByVal BarcodeMissing As Decimal,  _
                    ByVal LargerSpots As Decimal,  _
                    ByVal Smearing As Decimal,  _
                    ByVal HFMissAlignment As Decimal,  _
                    ByVal BlurPrinting As Decimal,  _
                    ByVal BallType As String,  _
                    ByVal unevenBallSurface As Decimal,  _
                    ByVal unshapecut As Decimal,  _
                    ByVal zigzagedge As Decimal,  _
                    ByVal cuttingpanel As Decimal,  _
                    ByVal heavyprintdefects As Decimal,  _
                    ByVal NewTouching As Decimal,  _
                    ByVal printmissallignament As Decimal,  _
                    ByVal anymisprint As Decimal,  _
                    ByVal colourShape As Decimal,  _
                    ByVal wrongartwork As Decimal,  _
                    ByVal materialdefects As Decimal,  _
                    ByVal newopenSeam As Decimal,  _
                    ByVal seamoverlapping As Decimal,  _
                    ByVal wrinkles As Decimal,  _
                    ByVal excussglue As Decimal,  _
                    ByVal missingglue As Decimal,  _
                    ByVal pressoremark As Decimal,  _
                    ByVal airbubble As Decimal) As tbl_PC_AMB_Hours_TranRow
            Dim rowtbl_PC_AMB_Hours_TranRow As tbl_PC_AMB_Hours_TranRow = CType(Me.NewRow,tbl_PC_AMB_Hours_TranRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PO, POM, POD, ArtSize, DayID, HourID, LineID, ProcessID, Strength, Present, PackingStrength, PackingPresent, ArtTarget, ArtPackingTarget, ArtSAM, ArtPackingSAM, Input, OutPut, Rejection, ClientID, ModelID, ArtID, SeamClosingGlue, PUC, CoreCavity, Touching, OtherPrintingIssue, PanelCavity, OpenSeam, SingleOpenStrip, UnbondedPanels, ArtWork, Wrinkle, ZigZagSeam, OverLap, PanelDMG, BGrade, MissAlligment, DisColor, LogoSmearing, LogoDoubling, BarcodeMissing, LargerSpots, Smearing, HFMissAlignment, BlurPrinting, BallType, unevenBallSurface, unshapecut, zigzagedge, cuttingpanel, heavyprintdefects, NewTouching, printmissallignament, anymisprint, colourShape, wrongartwork, materialdefects, newopenSeam, seamoverlapping, wrinkles, excussglue, missingglue, pressoremark, airbubble}
            rowtbl_PC_AMB_Hours_TranRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_PC_AMB_Hours_TranRow)
            Return rowtbl_PC_AMB_Hours_TranRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByTranID(ByVal TranID As Integer) As tbl_PC_AMB_Hours_TranRow
            Return CType(Me.Rows.Find(New Object() {TranID}),tbl_PC_AMB_Hours_TranRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_PC_AMB_Hours_TranDataTable = CType(MyBase.Clone,tbl_PC_AMB_Hours_TranDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_PC_AMB_Hours_TranDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTranID = MyBase.Columns("TranID")
            Me.columnPO = MyBase.Columns("PO")
            Me.columnPOM = MyBase.Columns("POM")
            Me.columnPOD = MyBase.Columns("POD")
            Me.columnArtSize = MyBase.Columns("ArtSize")
            Me.columnDayID = MyBase.Columns("DayID")
            Me.columnHourID = MyBase.Columns("HourID")
            Me.columnLineID = MyBase.Columns("LineID")
            Me.columnProcessID = MyBase.Columns("ProcessID")
            Me.columnStrength = MyBase.Columns("Strength")
            Me.columnPresent = MyBase.Columns("Present")
            Me.columnPackingStrength = MyBase.Columns("PackingStrength")
            Me.columnPackingPresent = MyBase.Columns("PackingPresent")
            Me.columnArtTarget = MyBase.Columns("ArtTarget")
            Me.columnArtPackingTarget = MyBase.Columns("ArtPackingTarget")
            Me.columnArtSAM = MyBase.Columns("ArtSAM")
            Me.columnArtPackingSAM = MyBase.Columns("ArtPackingSAM")
            Me.columnInput = MyBase.Columns("Input")
            Me.columnOutPut = MyBase.Columns("OutPut")
            Me.columnRejection = MyBase.Columns("Rejection")
            Me.columnClientID = MyBase.Columns("ClientID")
            Me.columnModelID = MyBase.Columns("ModelID")
            Me.columnArtID = MyBase.Columns("ArtID")
            Me.columnSeamClosingGlue = MyBase.Columns("SeamClosingGlue")
            Me.columnPUC = MyBase.Columns("PUC")
            Me.columnCoreCavity = MyBase.Columns("CoreCavity")
            Me.columnTouching = MyBase.Columns("Touching")
            Me.columnOtherPrintingIssue = MyBase.Columns("OtherPrintingIssue")
            Me.columnPanelCavity = MyBase.Columns("PanelCavity")
            Me.columnOpenSeam = MyBase.Columns("OpenSeam")
            Me.columnSingleOpenStrip = MyBase.Columns("SingleOpenStrip")
            Me.columnUnbondedPanels = MyBase.Columns("UnbondedPanels")
            Me.columnArtWork = MyBase.Columns("ArtWork")
            Me.columnWrinkle = MyBase.Columns("Wrinkle")
            Me.columnZigZagSeam = MyBase.Columns("ZigZagSeam")
            Me.columnOverLap = MyBase.Columns("OverLap")
            Me.columnPanelDMG = MyBase.Columns("PanelDMG")
            Me.columnBGrade = MyBase.Columns("BGrade")
            Me.columnMissAlligment = MyBase.Columns("MissAlligment")
            Me.columnDisColor = MyBase.Columns("DisColor")
            Me.columnLogoSmearing = MyBase.Columns("LogoSmearing")
            Me.columnLogoDoubling = MyBase.Columns("LogoDoubling")
            Me.columnBarcodeMissing = MyBase.Columns("BarcodeMissing")
            Me.columnLargerSpots = MyBase.Columns("LargerSpots")
            Me.columnSmearing = MyBase.Columns("Smearing")
            Me.columnHFMissAlignment = MyBase.Columns("HFMissAlignment")
            Me.columnBlurPrinting = MyBase.Columns("BlurPrinting")
            Me.columnBallType = MyBase.Columns("BallType")
            Me.columnunevenBallSurface = MyBase.Columns("unevenBallSurface")
            Me.columnunshapecut = MyBase.Columns("unshapecut")
            Me.columnzigzagedge = MyBase.Columns("zigzagedge")
            Me.columncuttingpanel = MyBase.Columns("cuttingpanel")
            Me.columnheavyprintdefects = MyBase.Columns("heavyprintdefects")
            Me.columnNewTouching = MyBase.Columns("NewTouching")
            Me.columnprintmissallignament = MyBase.Columns("printmissallignament")
            Me.columnanymisprint = MyBase.Columns("anymisprint")
            Me.columncolourShape = MyBase.Columns("colourShape")
            Me.columnwrongartwork = MyBase.Columns("wrongartwork")
            Me.columnmaterialdefects = MyBase.Columns("materialdefects")
            Me.columnnewopenSeam = MyBase.Columns("newopenSeam")
            Me.columnseamoverlapping = MyBase.Columns("seamoverlapping")
            Me.columnwrinkles = MyBase.Columns("wrinkles")
            Me.columnexcussglue = MyBase.Columns("excussglue")
            Me.columnmissingglue = MyBase.Columns("missingglue")
            Me.columnpressoremark = MyBase.Columns("pressoremark")
            Me.columnairbubble = MyBase.Columns("airbubble")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTranID = New Global.System.Data.DataColumn("TranID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTranID)
            Me.columnPO = New Global.System.Data.DataColumn("PO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPO)
            Me.columnPOM = New Global.System.Data.DataColumn("POM", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOM)
            Me.columnPOD = New Global.System.Data.DataColumn("POD", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOD)
            Me.columnArtSize = New Global.System.Data.DataColumn("ArtSize", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArtSize)
            Me.columnDayID = New Global.System.Data.DataColumn("DayID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDayID)
            Me.columnHourID = New Global.System.Data.DataColumn("HourID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHourID)
            Me.columnLineID = New Global.System.Data.DataColumn("LineID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLineID)
            Me.columnProcessID = New Global.System.Data.DataColumn("ProcessID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProcessID)
            Me.columnStrength = New Global.System.Data.DataColumn("Strength", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStrength)
            Me.columnPresent = New Global.System.Data.DataColumn("Present", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresent)
            Me.columnPackingStrength = New Global.System.Data.DataColumn("PackingStrength", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPackingStrength)
            Me.columnPackingPresent = New Global.System.Data.DataColumn("PackingPresent", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPackingPresent)
            Me.columnArtTarget = New Global.System.Data.DataColumn("ArtTarget", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArtTarget)
            Me.columnArtPackingTarget = New Global.System.Data.DataColumn("ArtPackingTarget", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArtPackingTarget)
            Me.columnArtSAM = New Global.System.Data.DataColumn("ArtSAM", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArtSAM)
            Me.columnArtPackingSAM = New Global.System.Data.DataColumn("ArtPackingSAM", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArtPackingSAM)
            Me.columnInput = New Global.System.Data.DataColumn("Input", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInput)
            Me.columnOutPut = New Global.System.Data.DataColumn("OutPut", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOutPut)
            Me.columnRejection = New Global.System.Data.DataColumn("Rejection", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRejection)
            Me.columnClientID = New Global.System.Data.DataColumn("ClientID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientID)
            Me.columnModelID = New Global.System.Data.DataColumn("ModelID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModelID)
            Me.columnArtID = New Global.System.Data.DataColumn("ArtID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArtID)
            Me.columnSeamClosingGlue = New Global.System.Data.DataColumn("SeamClosingGlue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSeamClosingGlue)
            Me.columnPUC = New Global.System.Data.DataColumn("PUC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPUC)
            Me.columnCoreCavity = New Global.System.Data.DataColumn("CoreCavity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCoreCavity)
            Me.columnTouching = New Global.System.Data.DataColumn("Touching", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTouching)
            Me.columnOtherPrintingIssue = New Global.System.Data.DataColumn("OtherPrintingIssue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOtherPrintingIssue)
            Me.columnPanelCavity = New Global.System.Data.DataColumn("PanelCavity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPanelCavity)
            Me.columnOpenSeam = New Global.System.Data.DataColumn("OpenSeam", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOpenSeam)
            Me.columnSingleOpenStrip = New Global.System.Data.DataColumn("SingleOpenStrip", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSingleOpenStrip)
            Me.columnUnbondedPanels = New Global.System.Data.DataColumn("UnbondedPanels", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnbondedPanels)
            Me.columnArtWork = New Global.System.Data.DataColumn("ArtWork", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArtWork)
            Me.columnWrinkle = New Global.System.Data.DataColumn("Wrinkle", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWrinkle)
            Me.columnZigZagSeam = New Global.System.Data.DataColumn("ZigZagSeam", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZigZagSeam)
            Me.columnOverLap = New Global.System.Data.DataColumn("OverLap", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOverLap)
            Me.columnPanelDMG = New Global.System.Data.DataColumn("PanelDMG", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPanelDMG)
            Me.columnBGrade = New Global.System.Data.DataColumn("BGrade", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBGrade)
            Me.columnMissAlligment = New Global.System.Data.DataColumn("MissAlligment", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMissAlligment)
            Me.columnDisColor = New Global.System.Data.DataColumn("DisColor", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDisColor)
            Me.columnLogoSmearing = New Global.System.Data.DataColumn("LogoSmearing", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogoSmearing)
            Me.columnLogoDoubling = New Global.System.Data.DataColumn("LogoDoubling", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogoDoubling)
            Me.columnBarcodeMissing = New Global.System.Data.DataColumn("BarcodeMissing", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBarcodeMissing)
            Me.columnLargerSpots = New Global.System.Data.DataColumn("LargerSpots", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLargerSpots)
            Me.columnSmearing = New Global.System.Data.DataColumn("Smearing", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSmearing)
            Me.columnHFMissAlignment = New Global.System.Data.DataColumn("HFMissAlignment", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHFMissAlignment)
            Me.columnBlurPrinting = New Global.System.Data.DataColumn("BlurPrinting", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlurPrinting)
            Me.columnBallType = New Global.System.Data.DataColumn("BallType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBallType)
            Me.columnunevenBallSurface = New Global.System.Data.DataColumn("unevenBallSurface", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnunevenBallSurface)
            Me.columnunshapecut = New Global.System.Data.DataColumn("unshapecut", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnunshapecut)
            Me.columnzigzagedge = New Global.System.Data.DataColumn("zigzagedge", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnzigzagedge)
            Me.columncuttingpanel = New Global.System.Data.DataColumn("cuttingpanel", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncuttingpanel)
            Me.columnheavyprintdefects = New Global.System.Data.DataColumn("heavyprintdefects", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnheavyprintdefects)
            Me.columnNewTouching = New Global.System.Data.DataColumn("NewTouching", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNewTouching)
            Me.columnprintmissallignament = New Global.System.Data.DataColumn("printmissallignament", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprintmissallignament)
            Me.columnanymisprint = New Global.System.Data.DataColumn("anymisprint", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnanymisprint)
            Me.columncolourShape = New Global.System.Data.DataColumn("colourShape", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncolourShape)
            Me.columnwrongartwork = New Global.System.Data.DataColumn("wrongartwork", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwrongartwork)
            Me.columnmaterialdefects = New Global.System.Data.DataColumn("materialdefects", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaterialdefects)
            Me.columnnewopenSeam = New Global.System.Data.DataColumn("newopenSeam", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnewopenSeam)
            Me.columnseamoverlapping = New Global.System.Data.DataColumn("seamoverlapping", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnseamoverlapping)
            Me.columnwrinkles = New Global.System.Data.DataColumn("wrinkles", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwrinkles)
            Me.columnexcussglue = New Global.System.Data.DataColumn("excussglue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexcussglue)
            Me.columnmissingglue = New Global.System.Data.DataColumn("missingglue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmissingglue)
            Me.columnpressoremark = New Global.System.Data.DataColumn("pressoremark", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpressoremark)
            Me.columnairbubble = New Global.System.Data.DataColumn("airbubble", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnairbubble)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnTranID}, true))
            Me.columnTranID.AutoIncrement = true
            Me.columnTranID.AutoIncrementSeed = -1
            Me.columnTranID.AutoIncrementStep = -1
            Me.columnTranID.AllowDBNull = false
            Me.columnTranID.ReadOnly = true
            Me.columnTranID.Unique = true
            Me.columnArtSize.AllowDBNull = false
            Me.columnArtSize.MaxLength = 50
            Me.columnDayID.AllowDBNull = false
            Me.columnLineID.AllowDBNull = false
            Me.columnProcessID.AllowDBNull = false
            Me.columnClientID.AllowDBNull = false
            Me.columnModelID.AllowDBNull = false
            Me.columnArtID.AllowDBNull = false
            Me.columnBallType.MaxLength = 5050
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Newtbl_PC_AMB_Hours_TranRow() As tbl_PC_AMB_Hours_TranRow
            Return CType(Me.NewRow,tbl_PC_AMB_Hours_TranRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_PC_AMB_Hours_TranRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_PC_AMB_Hours_TranRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_PC_AMB_Hours_TranRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_PC_AMB_Hours_TranRowChanged(Me, New tbl_PC_AMB_Hours_TranRowChangeEvent(CType(e.Row,tbl_PC_AMB_Hours_TranRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_PC_AMB_Hours_TranRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_PC_AMB_Hours_TranRowChanging(Me, New tbl_PC_AMB_Hours_TranRowChangeEvent(CType(e.Row,tbl_PC_AMB_Hours_TranRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_PC_AMB_Hours_TranRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_PC_AMB_Hours_TranRowDeleted(Me, New tbl_PC_AMB_Hours_TranRowChangeEvent(CType(e.Row,tbl_PC_AMB_Hours_TranRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_PC_AMB_Hours_TranRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_PC_AMB_Hours_TranRowDeleting(Me, New tbl_PC_AMB_Hours_TranRowChangeEvent(CType(e.Row,tbl_PC_AMB_Hours_TranRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Removetbl_PC_AMB_Hours_TranRow(ByVal row As tbl_PC_AMB_Hours_TranRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSAMB = New DSAMB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_PC_AMB_Hours_TranDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class View_PODDataTable
        Inherits Global.System.Data.TypedTableBase(Of View_PODRow)
        
        Private columnPO As Global.System.Data.DataColumn
        
        Private columnPOM As Global.System.Data.DataColumn
        
        Private columnPOD As Global.System.Data.DataColumn
        
        Private columnOrderQty As Global.System.Data.DataColumn
        
        Private columnFactoryCode As Global.System.Data.DataColumn
        
        Private columnOrderType As Global.System.Data.DataColumn
        
        Private columnArtSize As Global.System.Data.DataColumn
        
        Private columnClientID As Global.System.Data.DataColumn
        
        Private columnModelID As Global.System.Data.DataColumn
        
        Private columnArtID As Global.System.Data.DataColumn
        
        Private columnSecondConfDate As Global.System.Data.DataColumn
        
        Private columnAlreadyPack As Global.System.Data.DataColumn
        
        Private columnBalance As Global.System.Data.DataColumn
        
        Private columnPOCode As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "View_POD"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PODColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OrderQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrderQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FactoryCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFactoryCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OrderTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrderType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ArtSizeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArtSize
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ClientIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ModelIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModelID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ArtIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArtID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SecondConfDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSecondConfDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property AlreadyPackColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlreadyPack
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BalanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBalance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As View_PODRow
            Get
                Return CType(Me.Rows(index),View_PODRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_PODRowChanging As View_PODRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_PODRowChanged As View_PODRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_PODRowDeleting As View_PODRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_PODRowDeleted As View_PODRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddView_PODRow(ByVal row As View_PODRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddView_PODRow(ByVal parentView_PORowByView_PO_View_POD As View_PORow, ByVal POM As Integer, ByVal POD As Integer, ByVal OrderQty As Integer, ByVal FactoryCode As String, ByVal OrderType As String, ByVal ArtSize As String, ByVal ClientID As Integer, ByVal ModelID As Integer, ByVal ArtID As Integer, ByVal SecondConfDate As Date, ByVal AlreadyPack As Decimal, ByVal Balance As Decimal, ByVal POCode As String) As View_PODRow
            Dim rowView_PODRow As View_PODRow = CType(Me.NewRow,View_PODRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, POM, POD, OrderQty, FactoryCode, OrderType, ArtSize, ClientID, ModelID, ArtID, SecondConfDate, AlreadyPack, Balance, POCode}
            If (Not (parentView_PORowByView_PO_View_POD) Is Nothing) Then
                columnValuesArray(0) = parentView_PORowByView_PO_View_POD(0)
            End If
            rowView_PODRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowView_PODRow)
            Return rowView_PODRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As View_PODDataTable = CType(MyBase.Clone,View_PODDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New View_PODDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPO = MyBase.Columns("PO")
            Me.columnPOM = MyBase.Columns("POM")
            Me.columnPOD = MyBase.Columns("POD")
            Me.columnOrderQty = MyBase.Columns("OrderQty")
            Me.columnFactoryCode = MyBase.Columns("FactoryCode")
            Me.columnOrderType = MyBase.Columns("OrderType")
            Me.columnArtSize = MyBase.Columns("ArtSize")
            Me.columnClientID = MyBase.Columns("ClientID")
            Me.columnModelID = MyBase.Columns("ModelID")
            Me.columnArtID = MyBase.Columns("ArtID")
            Me.columnSecondConfDate = MyBase.Columns("SecondConfDate")
            Me.columnAlreadyPack = MyBase.Columns("AlreadyPack")
            Me.columnBalance = MyBase.Columns("Balance")
            Me.columnPOCode = MyBase.Columns("POCode")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPO = New Global.System.Data.DataColumn("PO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPO)
            Me.columnPOM = New Global.System.Data.DataColumn("POM", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOM)
            Me.columnPOD = New Global.System.Data.DataColumn("POD", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOD)
            Me.columnOrderQty = New Global.System.Data.DataColumn("OrderQty", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrderQty)
            Me.columnFactoryCode = New Global.System.Data.DataColumn("FactoryCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFactoryCode)
            Me.columnOrderType = New Global.System.Data.DataColumn("OrderType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrderType)
            Me.columnArtSize = New Global.System.Data.DataColumn("ArtSize", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArtSize)
            Me.columnClientID = New Global.System.Data.DataColumn("ClientID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientID)
            Me.columnModelID = New Global.System.Data.DataColumn("ModelID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModelID)
            Me.columnArtID = New Global.System.Data.DataColumn("ArtID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArtID)
            Me.columnSecondConfDate = New Global.System.Data.DataColumn("SecondConfDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSecondConfDate)
            Me.columnAlreadyPack = New Global.System.Data.DataColumn("AlreadyPack", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlreadyPack)
            Me.columnBalance = New Global.System.Data.DataColumn("Balance", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBalance)
            Me.columnPOCode = New Global.System.Data.DataColumn("POCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOCode)
            Me.columnPO.AllowDBNull = false
            Me.columnPOM.AllowDBNull = false
            Me.columnPOD.AllowDBNull = false
            Me.columnOrderQty.AllowDBNull = false
            Me.columnFactoryCode.MaxLength = 50
            Me.columnOrderType.MaxLength = 50
            Me.columnArtSize.AllowDBNull = false
            Me.columnArtSize.MaxLength = 50
            Me.columnClientID.AllowDBNull = false
            Me.columnModelID.AllowDBNull = false
            Me.columnArtID.AllowDBNull = false
            Me.columnAlreadyPack.ReadOnly = true
            Me.columnBalance.ReadOnly = true
            Me.columnPOCode.AllowDBNull = false
            Me.columnPOCode.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewView_PODRow() As View_PODRow
            Return CType(Me.NewRow,View_PODRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New View_PODRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(View_PODRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.View_PODRowChangedEvent) Is Nothing) Then
                RaiseEvent View_PODRowChanged(Me, New View_PODRowChangeEvent(CType(e.Row,View_PODRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.View_PODRowChangingEvent) Is Nothing) Then
                RaiseEvent View_PODRowChanging(Me, New View_PODRowChangeEvent(CType(e.Row,View_PODRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.View_PODRowDeletedEvent) Is Nothing) Then
                RaiseEvent View_PODRowDeleted(Me, New View_PODRowChangeEvent(CType(e.Row,View_PODRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.View_PODRowDeletingEvent) Is Nothing) Then
                RaiseEvent View_PODRowDeleting(Me, New View_PODRowChangeEvent(CType(e.Row,View_PODRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveView_PODRow(ByVal row As View_PODRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSAMB = New DSAMB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "View_PODDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class View_PODataTable
        Inherits Global.System.Data.TypedTableBase(Of View_PORow)
        
        Private columnPO As Global.System.Data.DataColumn
        
        Private columnPOCode As Global.System.Data.DataColumn
        
        Private columnOrderType As Global.System.Data.DataColumn
        
        Private columnFactoryCode As Global.System.Data.DataColumn
        
        Private columnArtCode As Global.System.Data.DataColumn
        
        Private columnModelName As Global.System.Data.DataColumn
        
        Private columnTarget As Global.System.Data.DataColumn
        
        Private columnSAMForming As Global.System.Data.DataColumn
        
        Private columnSAMPacking As Global.System.Data.DataColumn
        
        Private columnTargetPacking As Global.System.Data.DataColumn
        
        Private columnClientID As Global.System.Data.DataColumn
        
        Private columnSecondConfDate As Global.System.Data.DataColumn
        
        Private columnPOM As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "View_PO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OrderTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrderType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FactoryCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFactoryCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ArtCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArtCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ModelNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModelName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TargetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarget
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SAMFormingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSAMForming
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SAMPackingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSAMPacking
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TargetPackingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTargetPacking
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ClientIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SecondConfDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSecondConfDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As View_PORow
            Get
                Return CType(Me.Rows(index),View_PORow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_PORowChanging As View_PORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_PORowChanged As View_PORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_PORowDeleting As View_PORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_PORowDeleted As View_PORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddView_PORow(ByVal row As View_PORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddView_PORow(ByVal PO As Integer, ByVal POCode As String, ByVal OrderType As String, ByVal FactoryCode As String, ByVal ArtCode As String, ByVal ModelName As String, ByVal Target As Decimal, ByVal SAMForming As Decimal, ByVal SAMPacking As Decimal, ByVal TargetPacking As Decimal, ByVal ClientID As Integer, ByVal SecondConfDate As Date, ByVal POM As Integer) As View_PORow
            Dim rowView_PORow As View_PORow = CType(Me.NewRow,View_PORow)
            Dim columnValuesArray() As Object = New Object() {PO, POCode, OrderType, FactoryCode, ArtCode, ModelName, Target, SAMForming, SAMPacking, TargetPacking, ClientID, SecondConfDate, POM}
            rowView_PORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowView_PORow)
            Return rowView_PORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByPO(ByVal PO As Integer) As View_PORow
            Return CType(Me.Rows.Find(New Object() {PO}),View_PORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As View_PODataTable = CType(MyBase.Clone,View_PODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New View_PODataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPO = MyBase.Columns("PO")
            Me.columnPOCode = MyBase.Columns("POCode")
            Me.columnOrderType = MyBase.Columns("OrderType")
            Me.columnFactoryCode = MyBase.Columns("FactoryCode")
            Me.columnArtCode = MyBase.Columns("ArtCode")
            Me.columnModelName = MyBase.Columns("ModelName")
            Me.columnTarget = MyBase.Columns("Target")
            Me.columnSAMForming = MyBase.Columns("SAMForming")
            Me.columnSAMPacking = MyBase.Columns("SAMPacking")
            Me.columnTargetPacking = MyBase.Columns("TargetPacking")
            Me.columnClientID = MyBase.Columns("ClientID")
            Me.columnSecondConfDate = MyBase.Columns("SecondConfDate")
            Me.columnPOM = MyBase.Columns("POM")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPO = New Global.System.Data.DataColumn("PO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPO)
            Me.columnPOCode = New Global.System.Data.DataColumn("POCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOCode)
            Me.columnOrderType = New Global.System.Data.DataColumn("OrderType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrderType)
            Me.columnFactoryCode = New Global.System.Data.DataColumn("FactoryCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFactoryCode)
            Me.columnArtCode = New Global.System.Data.DataColumn("ArtCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArtCode)
            Me.columnModelName = New Global.System.Data.DataColumn("ModelName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModelName)
            Me.columnTarget = New Global.System.Data.DataColumn("Target", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarget)
            Me.columnSAMForming = New Global.System.Data.DataColumn("SAMForming", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSAMForming)
            Me.columnSAMPacking = New Global.System.Data.DataColumn("SAMPacking", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSAMPacking)
            Me.columnTargetPacking = New Global.System.Data.DataColumn("TargetPacking", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTargetPacking)
            Me.columnClientID = New Global.System.Data.DataColumn("ClientID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientID)
            Me.columnSecondConfDate = New Global.System.Data.DataColumn("SecondConfDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSecondConfDate)
            Me.columnPOM = New Global.System.Data.DataColumn("POM", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOM)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnPO}, true))
            Me.columnPO.AllowDBNull = false
            Me.columnPO.Unique = true
            Me.columnPOCode.AllowDBNull = false
            Me.columnPOCode.MaxLength = 50
            Me.columnOrderType.MaxLength = 50
            Me.columnFactoryCode.MaxLength = 50
            Me.columnArtCode.AllowDBNull = false
            Me.columnArtCode.MaxLength = 50
            Me.columnModelName.AllowDBNull = false
            Me.columnModelName.MaxLength = 100
            Me.columnTarget.ReadOnly = true
            Me.columnSAMForming.ReadOnly = true
            Me.columnSAMPacking.ReadOnly = true
            Me.columnTargetPacking.ReadOnly = true
            Me.columnClientID.AllowDBNull = false
            Me.columnPOM.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewView_PORow() As View_PORow
            Return CType(Me.NewRow,View_PORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New View_PORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(View_PORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.View_PORowChangedEvent) Is Nothing) Then
                RaiseEvent View_PORowChanged(Me, New View_PORowChangeEvent(CType(e.Row,View_PORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.View_PORowChangingEvent) Is Nothing) Then
                RaiseEvent View_PORowChanging(Me, New View_PORowChangeEvent(CType(e.Row,View_PORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.View_PORowDeletedEvent) Is Nothing) Then
                RaiseEvent View_PORowDeleted(Me, New View_PORowChangeEvent(CType(e.Row,View_PORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.View_PORowDeletingEvent) Is Nothing) Then
                RaiseEvent View_PORowDeleting(Me, New View_PORowChangeEvent(CType(e.Row,View_PORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveView_PORow(ByVal row As View_PORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSAMB = New DSAMB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "View_PODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class View_AMb_FormingDataTable
        Inherits Global.System.Data.TypedTableBase(Of View_AMb_FormingRow)
        
        Private columnPanelDMG As Global.System.Data.DataColumn
        
        Private columnOverLap As Global.System.Data.DataColumn
        
        Private columnZigZagSeam As Global.System.Data.DataColumn
        
        Private columnWrinkle As Global.System.Data.DataColumn
        
        Private columnArtWork As Global.System.Data.DataColumn
        
        Private columnUnbondedPanels As Global.System.Data.DataColumn
        
        Private columnSingleOpenStrip As Global.System.Data.DataColumn
        
        Private columnOpenSeam As Global.System.Data.DataColumn
        
        Private columnPanelCavity As Global.System.Data.DataColumn
        
        Private columnTouching As Global.System.Data.DataColumn
        
        Private columnOtherPrintingIssue As Global.System.Data.DataColumn
        
        Private columnCoreCavity As Global.System.Data.DataColumn
        
        Private columnPUC As Global.System.Data.DataColumn
        
        Private columnSeamClosingGlue As Global.System.Data.DataColumn
        
        Private columnBGrade As Global.System.Data.DataColumn
        
        Private columnTotalChecked As Global.System.Data.DataColumn
        
        Private columnPass As Global.System.Data.DataColumn
        
        Private columnFail As Global.System.Data.DataColumn
        
        Private columnStraightCut As Global.System.Data.DataColumn
        
        Private columnCuttingResidual As Global.System.Data.DataColumn
        
        Private columnConnectionBreak As Global.System.Data.DataColumn
        
        Private columnUncureGlue As Global.System.Data.DataColumn
        
        Private columnExcessiveGlue As Global.System.Data.DataColumn
        
        Private columnOverUnderWght As Global.System.Data.DataColumn
        
        Private columnDisColor As Global.System.Data.DataColumn
        
        Private columnLogoSmearing As Global.System.Data.DataColumn
        
        Private columnLogoDoubling As Global.System.Data.DataColumn
        
        Private columnBarcodeMissing As Global.System.Data.DataColumn
        
        Private columnLargerSpots As Global.System.Data.DataColumn
        
        Private columnSmearing As Global.System.Data.DataColumn
        
        Private columnHFMissAlignment As Global.System.Data.DataColumn
        
        Private columnBlurPrinting As Global.System.Data.DataColumn
        
        Private columnRCheck As Global.System.Data.DataColumn
        
        Private columnRPass As Global.System.Data.DataColumn
        
        Private columnairbubble As Global.System.Data.DataColumn
        
        Private columnpressoremark As Global.System.Data.DataColumn
        
        Private columnmissingglue As Global.System.Data.DataColumn
        
        Private columnexcussglue As Global.System.Data.DataColumn
        
        Private columnwrinkles As Global.System.Data.DataColumn
        
        Private columnseamoverlapping As Global.System.Data.DataColumn
        
        Private columnnewopenSeam As Global.System.Data.DataColumn
        
        Private columnmaterialdefects As Global.System.Data.DataColumn
        
        Private columnwrongartwork As Global.System.Data.DataColumn
        
        Private columncolourShape As Global.System.Data.DataColumn
        
        Private columnanymisprint As Global.System.Data.DataColumn
        
        Private columnprintmissallignament As Global.System.Data.DataColumn
        
        Private columnNewTouching As Global.System.Data.DataColumn
        
        Private columnheavyprintdefects As Global.System.Data.DataColumn
        
        Private columncuttingpanel As Global.System.Data.DataColumn
        
        Private columnzigzagedge As Global.System.Data.DataColumn
        
        Private columnunshapecut As Global.System.Data.DataColumn
        
        Private columnunevenBallSurface As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "View_AMb_Forming"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PanelDMGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPanelDMG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OverLapColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOverLap
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ZigZagSeamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZigZagSeam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WrinkleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWrinkle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ArtWorkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArtWork
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property UnbondedPanelsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnbondedPanels
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SingleOpenStripColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSingleOpenStrip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OpenSeamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOpenSeam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PanelCavityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPanelCavity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TouchingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTouching
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OtherPrintingIssueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOtherPrintingIssue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CoreCavityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCoreCavity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PUCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPUC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SeamClosingGlueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSeamClosingGlue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BGradeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBGrade
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TotalCheckedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalChecked
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PassColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPass
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property StraightCutColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStraightCut
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CuttingResidualColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCuttingResidual
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ConnectionBreakColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConnectionBreak
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property UncureGlueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUncureGlue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ExcessiveGlueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExcessiveGlue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OverUnderWghtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOverUnderWght
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DisColorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDisColor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LogoSmearingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogoSmearing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LogoDoublingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogoDoubling
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BarcodeMissingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBarcodeMissing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LargerSpotsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLargerSpots
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SmearingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSmearing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property HFMissAlignmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHFMissAlignment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BlurPrintingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlurPrinting
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RCheckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRCheck
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RPassColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPass
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property airbubbleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnairbubble
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property pressoremarkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpressoremark
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property missingglueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmissingglue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property excussglueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnexcussglue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property wrinklesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwrinkles
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property seamoverlappingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnseamoverlapping
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property newopenSeamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnewopenSeam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property materialdefectsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmaterialdefects
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property wrongartworkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwrongartwork
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property colourShapeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncolourShape
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property anymisprintColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnanymisprint
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property printmissallignamentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprintmissallignament
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NewTouchingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNewTouching
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property heavyprintdefectsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnheavyprintdefects
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property cuttingpanelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncuttingpanel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property zigzagedgeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnzigzagedge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property unshapecutColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnunshapecut
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property unevenBallSurfaceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnunevenBallSurface
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As View_AMb_FormingRow
            Get
                Return CType(Me.Rows(index),View_AMb_FormingRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_AMb_FormingRowChanging As View_AMb_FormingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_AMb_FormingRowChanged As View_AMb_FormingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_AMb_FormingRowDeleting As View_AMb_FormingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_AMb_FormingRowDeleted As View_AMb_FormingRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddView_AMb_FormingRow(ByVal row As View_AMb_FormingRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddView_AMb_FormingRow( _
                    ByVal PanelDMG As Decimal,  _
                    ByVal OverLap As Decimal,  _
                    ByVal ZigZagSeam As Decimal,  _
                    ByVal Wrinkle As Decimal,  _
                    ByVal ArtWork As Decimal,  _
                    ByVal UnbondedPanels As Decimal,  _
                    ByVal SingleOpenStrip As Decimal,  _
                    ByVal OpenSeam As Decimal,  _
                    ByVal PanelCavity As Decimal,  _
                    ByVal Touching As Decimal,  _
                    ByVal OtherPrintingIssue As Decimal,  _
                    ByVal CoreCavity As Decimal,  _
                    ByVal PUC As Decimal,  _
                    ByVal SeamClosingGlue As Decimal,  _
                    ByVal BGrade As Decimal,  _
                    ByVal TotalChecked As Decimal,  _
                    ByVal Pass As Decimal,  _
                    ByVal Fail As Decimal,  _
                    ByVal StraightCut As Decimal,  _
                    ByVal CuttingResidual As Decimal,  _
                    ByVal ConnectionBreak As Decimal,  _
                    ByVal UncureGlue As Decimal,  _
                    ByVal ExcessiveGlue As Decimal,  _
                    ByVal OverUnderWght As Decimal,  _
                    ByVal DisColor As Decimal,  _
                    ByVal LogoSmearing As Decimal,  _
                    ByVal LogoDoubling As Decimal,  _
                    ByVal BarcodeMissing As Decimal,  _
                    ByVal LargerSpots As Decimal,  _
                    ByVal Smearing As Decimal,  _
                    ByVal HFMissAlignment As Decimal,  _
                    ByVal BlurPrinting As Decimal,  _
                    ByVal RCheck As Decimal,  _
                    ByVal RPass As Decimal,  _
                    ByVal airbubble As Decimal,  _
                    ByVal pressoremark As Decimal,  _
                    ByVal missingglue As Decimal,  _
                    ByVal excussglue As Decimal,  _
                    ByVal wrinkles As Decimal,  _
                    ByVal seamoverlapping As Decimal,  _
                    ByVal newopenSeam As Decimal,  _
                    ByVal materialdefects As Decimal,  _
                    ByVal wrongartwork As Decimal,  _
                    ByVal colourShape As Decimal,  _
                    ByVal anymisprint As Decimal,  _
                    ByVal printmissallignament As Decimal,  _
                    ByVal NewTouching As Decimal,  _
                    ByVal heavyprintdefects As Decimal,  _
                    ByVal cuttingpanel As Decimal,  _
                    ByVal zigzagedge As Decimal,  _
                    ByVal unshapecut As Decimal,  _
                    ByVal unevenBallSurface As Decimal) As View_AMb_FormingRow
            Dim rowView_AMb_FormingRow As View_AMb_FormingRow = CType(Me.NewRow,View_AMb_FormingRow)
            Dim columnValuesArray() As Object = New Object() {PanelDMG, OverLap, ZigZagSeam, Wrinkle, ArtWork, UnbondedPanels, SingleOpenStrip, OpenSeam, PanelCavity, Touching, OtherPrintingIssue, CoreCavity, PUC, SeamClosingGlue, BGrade, TotalChecked, Pass, Fail, StraightCut, CuttingResidual, ConnectionBreak, UncureGlue, ExcessiveGlue, OverUnderWght, DisColor, LogoSmearing, LogoDoubling, BarcodeMissing, LargerSpots, Smearing, HFMissAlignment, BlurPrinting, RCheck, RPass, airbubble, pressoremark, missingglue, excussglue, wrinkles, seamoverlapping, newopenSeam, materialdefects, wrongartwork, colourShape, anymisprint, printmissallignament, NewTouching, heavyprintdefects, cuttingpanel, zigzagedge, unshapecut, unevenBallSurface}
            rowView_AMb_FormingRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowView_AMb_FormingRow)
            Return rowView_AMb_FormingRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As View_AMb_FormingDataTable = CType(MyBase.Clone,View_AMb_FormingDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New View_AMb_FormingDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPanelDMG = MyBase.Columns("PanelDMG")
            Me.columnOverLap = MyBase.Columns("OverLap")
            Me.columnZigZagSeam = MyBase.Columns("ZigZagSeam")
            Me.columnWrinkle = MyBase.Columns("Wrinkle")
            Me.columnArtWork = MyBase.Columns("ArtWork")
            Me.columnUnbondedPanels = MyBase.Columns("UnbondedPanels")
            Me.columnSingleOpenStrip = MyBase.Columns("SingleOpenStrip")
            Me.columnOpenSeam = MyBase.Columns("OpenSeam")
            Me.columnPanelCavity = MyBase.Columns("PanelCavity")
            Me.columnTouching = MyBase.Columns("Touching")
            Me.columnOtherPrintingIssue = MyBase.Columns("OtherPrintingIssue")
            Me.columnCoreCavity = MyBase.Columns("CoreCavity")
            Me.columnPUC = MyBase.Columns("PUC")
            Me.columnSeamClosingGlue = MyBase.Columns("SeamClosingGlue")
            Me.columnBGrade = MyBase.Columns("BGrade")
            Me.columnTotalChecked = MyBase.Columns("TotalChecked")
            Me.columnPass = MyBase.Columns("Pass")
            Me.columnFail = MyBase.Columns("Fail")
            Me.columnStraightCut = MyBase.Columns("StraightCut")
            Me.columnCuttingResidual = MyBase.Columns("CuttingResidual")
            Me.columnConnectionBreak = MyBase.Columns("ConnectionBreak")
            Me.columnUncureGlue = MyBase.Columns("UncureGlue")
            Me.columnExcessiveGlue = MyBase.Columns("ExcessiveGlue")
            Me.columnOverUnderWght = MyBase.Columns("OverUnderWght")
            Me.columnDisColor = MyBase.Columns("DisColor")
            Me.columnLogoSmearing = MyBase.Columns("LogoSmearing")
            Me.columnLogoDoubling = MyBase.Columns("LogoDoubling")
            Me.columnBarcodeMissing = MyBase.Columns("BarcodeMissing")
            Me.columnLargerSpots = MyBase.Columns("LargerSpots")
            Me.columnSmearing = MyBase.Columns("Smearing")
            Me.columnHFMissAlignment = MyBase.Columns("HFMissAlignment")
            Me.columnBlurPrinting = MyBase.Columns("BlurPrinting")
            Me.columnRCheck = MyBase.Columns("RCheck")
            Me.columnRPass = MyBase.Columns("RPass")
            Me.columnairbubble = MyBase.Columns("airbubble")
            Me.columnpressoremark = MyBase.Columns("pressoremark")
            Me.columnmissingglue = MyBase.Columns("missingglue")
            Me.columnexcussglue = MyBase.Columns("excussglue")
            Me.columnwrinkles = MyBase.Columns("wrinkles")
            Me.columnseamoverlapping = MyBase.Columns("seamoverlapping")
            Me.columnnewopenSeam = MyBase.Columns("newopenSeam")
            Me.columnmaterialdefects = MyBase.Columns("materialdefects")
            Me.columnwrongartwork = MyBase.Columns("wrongartwork")
            Me.columncolourShape = MyBase.Columns("colourShape")
            Me.columnanymisprint = MyBase.Columns("anymisprint")
            Me.columnprintmissallignament = MyBase.Columns("printmissallignament")
            Me.columnNewTouching = MyBase.Columns("NewTouching")
            Me.columnheavyprintdefects = MyBase.Columns("heavyprintdefects")
            Me.columncuttingpanel = MyBase.Columns("cuttingpanel")
            Me.columnzigzagedge = MyBase.Columns("zigzagedge")
            Me.columnunshapecut = MyBase.Columns("unshapecut")
            Me.columnunevenBallSurface = MyBase.Columns("unevenBallSurface")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPanelDMG = New Global.System.Data.DataColumn("PanelDMG", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPanelDMG)
            Me.columnOverLap = New Global.System.Data.DataColumn("OverLap", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOverLap)
            Me.columnZigZagSeam = New Global.System.Data.DataColumn("ZigZagSeam", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZigZagSeam)
            Me.columnWrinkle = New Global.System.Data.DataColumn("Wrinkle", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWrinkle)
            Me.columnArtWork = New Global.System.Data.DataColumn("ArtWork", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArtWork)
            Me.columnUnbondedPanels = New Global.System.Data.DataColumn("UnbondedPanels", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnbondedPanels)
            Me.columnSingleOpenStrip = New Global.System.Data.DataColumn("SingleOpenStrip", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSingleOpenStrip)
            Me.columnOpenSeam = New Global.System.Data.DataColumn("OpenSeam", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOpenSeam)
            Me.columnPanelCavity = New Global.System.Data.DataColumn("PanelCavity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPanelCavity)
            Me.columnTouching = New Global.System.Data.DataColumn("Touching", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTouching)
            Me.columnOtherPrintingIssue = New Global.System.Data.DataColumn("OtherPrintingIssue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOtherPrintingIssue)
            Me.columnCoreCavity = New Global.System.Data.DataColumn("CoreCavity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCoreCavity)
            Me.columnPUC = New Global.System.Data.DataColumn("PUC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPUC)
            Me.columnSeamClosingGlue = New Global.System.Data.DataColumn("SeamClosingGlue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSeamClosingGlue)
            Me.columnBGrade = New Global.System.Data.DataColumn("BGrade", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBGrade)
            Me.columnTotalChecked = New Global.System.Data.DataColumn("TotalChecked", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalChecked)
            Me.columnPass = New Global.System.Data.DataColumn("Pass", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPass)
            Me.columnFail = New Global.System.Data.DataColumn("Fail", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFail)
            Me.columnStraightCut = New Global.System.Data.DataColumn("StraightCut", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStraightCut)
            Me.columnCuttingResidual = New Global.System.Data.DataColumn("CuttingResidual", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCuttingResidual)
            Me.columnConnectionBreak = New Global.System.Data.DataColumn("ConnectionBreak", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConnectionBreak)
            Me.columnUncureGlue = New Global.System.Data.DataColumn("UncureGlue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUncureGlue)
            Me.columnExcessiveGlue = New Global.System.Data.DataColumn("ExcessiveGlue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExcessiveGlue)
            Me.columnOverUnderWght = New Global.System.Data.DataColumn("OverUnderWght", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOverUnderWght)
            Me.columnDisColor = New Global.System.Data.DataColumn("DisColor", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDisColor)
            Me.columnLogoSmearing = New Global.System.Data.DataColumn("LogoSmearing", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogoSmearing)
            Me.columnLogoDoubling = New Global.System.Data.DataColumn("LogoDoubling", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogoDoubling)
            Me.columnBarcodeMissing = New Global.System.Data.DataColumn("BarcodeMissing", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBarcodeMissing)
            Me.columnLargerSpots = New Global.System.Data.DataColumn("LargerSpots", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLargerSpots)
            Me.columnSmearing = New Global.System.Data.DataColumn("Smearing", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSmearing)
            Me.columnHFMissAlignment = New Global.System.Data.DataColumn("HFMissAlignment", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHFMissAlignment)
            Me.columnBlurPrinting = New Global.System.Data.DataColumn("BlurPrinting", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlurPrinting)
            Me.columnRCheck = New Global.System.Data.DataColumn("RCheck", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRCheck)
            Me.columnRPass = New Global.System.Data.DataColumn("RPass", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPass)
            Me.columnairbubble = New Global.System.Data.DataColumn("airbubble", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnairbubble)
            Me.columnpressoremark = New Global.System.Data.DataColumn("pressoremark", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpressoremark)
            Me.columnmissingglue = New Global.System.Data.DataColumn("missingglue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmissingglue)
            Me.columnexcussglue = New Global.System.Data.DataColumn("excussglue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexcussglue)
            Me.columnwrinkles = New Global.System.Data.DataColumn("wrinkles", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwrinkles)
            Me.columnseamoverlapping = New Global.System.Data.DataColumn("seamoverlapping", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnseamoverlapping)
            Me.columnnewopenSeam = New Global.System.Data.DataColumn("newopenSeam", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnewopenSeam)
            Me.columnmaterialdefects = New Global.System.Data.DataColumn("materialdefects", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaterialdefects)
            Me.columnwrongartwork = New Global.System.Data.DataColumn("wrongartwork", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwrongartwork)
            Me.columncolourShape = New Global.System.Data.DataColumn("colourShape", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncolourShape)
            Me.columnanymisprint = New Global.System.Data.DataColumn("anymisprint", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnanymisprint)
            Me.columnprintmissallignament = New Global.System.Data.DataColumn("printmissallignament", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprintmissallignament)
            Me.columnNewTouching = New Global.System.Data.DataColumn("NewTouching", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNewTouching)
            Me.columnheavyprintdefects = New Global.System.Data.DataColumn("heavyprintdefects", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnheavyprintdefects)
            Me.columncuttingpanel = New Global.System.Data.DataColumn("cuttingpanel", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncuttingpanel)
            Me.columnzigzagedge = New Global.System.Data.DataColumn("zigzagedge", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnzigzagedge)
            Me.columnunshapecut = New Global.System.Data.DataColumn("unshapecut", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnunshapecut)
            Me.columnunevenBallSurface = New Global.System.Data.DataColumn("unevenBallSurface", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnunevenBallSurface)
            Me.columnDisColor.ReadOnly = true
            Me.columnLogoSmearing.ReadOnly = true
            Me.columnLogoDoubling.ReadOnly = true
            Me.columnBarcodeMissing.ReadOnly = true
            Me.columnLargerSpots.ReadOnly = true
            Me.columnSmearing.ReadOnly = true
            Me.columnHFMissAlignment.ReadOnly = true
            Me.columnBlurPrinting.ReadOnly = true
            Me.columnRCheck.ReadOnly = true
            Me.columnRPass.ReadOnly = true
            Me.columnairbubble.ReadOnly = true
            Me.columnpressoremark.ReadOnly = true
            Me.columnmissingglue.ReadOnly = true
            Me.columnexcussglue.ReadOnly = true
            Me.columnwrinkles.ReadOnly = true
            Me.columnseamoverlapping.ReadOnly = true
            Me.columnnewopenSeam.ReadOnly = true
            Me.columnmaterialdefects.ReadOnly = true
            Me.columnwrongartwork.ReadOnly = true
            Me.columncolourShape.ReadOnly = true
            Me.columnanymisprint.ReadOnly = true
            Me.columnprintmissallignament.ReadOnly = true
            Me.columnNewTouching.ReadOnly = true
            Me.columnheavyprintdefects.ReadOnly = true
            Me.columncuttingpanel.ReadOnly = true
            Me.columnzigzagedge.ReadOnly = true
            Me.columnunshapecut.ReadOnly = true
            Me.columnunevenBallSurface.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewView_AMb_FormingRow() As View_AMb_FormingRow
            Return CType(Me.NewRow,View_AMb_FormingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New View_AMb_FormingRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(View_AMb_FormingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.View_AMb_FormingRowChangedEvent) Is Nothing) Then
                RaiseEvent View_AMb_FormingRowChanged(Me, New View_AMb_FormingRowChangeEvent(CType(e.Row,View_AMb_FormingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.View_AMb_FormingRowChangingEvent) Is Nothing) Then
                RaiseEvent View_AMb_FormingRowChanging(Me, New View_AMb_FormingRowChangeEvent(CType(e.Row,View_AMb_FormingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.View_AMb_FormingRowDeletedEvent) Is Nothing) Then
                RaiseEvent View_AMb_FormingRowDeleted(Me, New View_AMb_FormingRowChangeEvent(CType(e.Row,View_AMb_FormingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.View_AMb_FormingRowDeletingEvent) Is Nothing) Then
                RaiseEvent View_AMb_FormingRowDeleting(Me, New View_AMb_FormingRowChangeEvent(CType(e.Row,View_AMb_FormingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveView_AMb_FormingRow(ByVal row As View_AMb_FormingRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSAMB = New DSAMB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "View_AMb_FormingDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class View_Daily_SumDataTable
        Inherits Global.System.Data.TypedTableBase(Of View_Daily_SumRow)
        
        Private columnPanelDMG As Global.System.Data.DataColumn
        
        Private columnOverLap As Global.System.Data.DataColumn
        
        Private columnZigZagSeam As Global.System.Data.DataColumn
        
        Private columnWrinkle As Global.System.Data.DataColumn
        
        Private columnArtWork As Global.System.Data.DataColumn
        
        Private columnUnbondedPanels As Global.System.Data.DataColumn
        
        Private columnSingleOpenStrip As Global.System.Data.DataColumn
        
        Private columnOpenSeam As Global.System.Data.DataColumn
        
        Private columnPanelCavity As Global.System.Data.DataColumn
        
        Private columnTouching As Global.System.Data.DataColumn
        
        Private columnOtherPrintingIssue As Global.System.Data.DataColumn
        
        Private columnCoreCavity As Global.System.Data.DataColumn
        
        Private columnPUC As Global.System.Data.DataColumn
        
        Private columnSeamClosingGlue As Global.System.Data.DataColumn
        
        Private columnBGrade As Global.System.Data.DataColumn
        
        Private columnTotalChecked As Global.System.Data.DataColumn
        
        Private columnPass As Global.System.Data.DataColumn
        
        Private columnFail As Global.System.Data.DataColumn
        
        Private columnStraightCut As Global.System.Data.DataColumn
        
        Private columnCuttingResidual As Global.System.Data.DataColumn
        
        Private columnConnectionBreak As Global.System.Data.DataColumn
        
        Private columnUncureGlue As Global.System.Data.DataColumn
        
        Private columnExcessiveGlue As Global.System.Data.DataColumn
        
        Private columnOverUnderWght As Global.System.Data.DataColumn
        
        Private columnDisColor As Global.System.Data.DataColumn
        
        Private columnLogoSmearing As Global.System.Data.DataColumn
        
        Private columnLogoDoubling As Global.System.Data.DataColumn
        
        Private columnBarcodeMissing As Global.System.Data.DataColumn
        
        Private columnLargerSpots As Global.System.Data.DataColumn
        
        Private columnSmearing As Global.System.Data.DataColumn
        
        Private columnHFMissAlignment As Global.System.Data.DataColumn
        
        Private columnRCheck As Global.System.Data.DataColumn
        
        Private columnRPass As Global.System.Data.DataColumn
        
        Private columnMissAlligment As Global.System.Data.DataColumn
        
        Private columnBlurPrinting As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "View_Daily_Sum"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PanelDMGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPanelDMG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OverLapColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOverLap
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ZigZagSeamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZigZagSeam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WrinkleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWrinkle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ArtWorkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArtWork
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property UnbondedPanelsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnbondedPanels
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SingleOpenStripColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSingleOpenStrip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OpenSeamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOpenSeam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PanelCavityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPanelCavity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TouchingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTouching
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OtherPrintingIssueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOtherPrintingIssue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CoreCavityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCoreCavity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PUCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPUC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SeamClosingGlueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSeamClosingGlue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BGradeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBGrade
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TotalCheckedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalChecked
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PassColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPass
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property StraightCutColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStraightCut
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CuttingResidualColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCuttingResidual
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ConnectionBreakColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConnectionBreak
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property UncureGlueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUncureGlue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ExcessiveGlueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExcessiveGlue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OverUnderWghtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOverUnderWght
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DisColorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDisColor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LogoSmearingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogoSmearing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LogoDoublingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogoDoubling
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BarcodeMissingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBarcodeMissing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LargerSpotsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLargerSpots
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SmearingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSmearing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property HFMissAlignmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHFMissAlignment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RCheckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRCheck
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RPassColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPass
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property MissAlligmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMissAlligment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BlurPrintingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlurPrinting
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As View_Daily_SumRow
            Get
                Return CType(Me.Rows(index),View_Daily_SumRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_Daily_SumRowChanging As View_Daily_SumRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_Daily_SumRowChanged As View_Daily_SumRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_Daily_SumRowDeleting As View_Daily_SumRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_Daily_SumRowDeleted As View_Daily_SumRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddView_Daily_SumRow(ByVal row As View_Daily_SumRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddView_Daily_SumRow( _
                    ByVal PanelDMG As Decimal,  _
                    ByVal OverLap As Decimal,  _
                    ByVal ZigZagSeam As Decimal,  _
                    ByVal Wrinkle As Decimal,  _
                    ByVal ArtWork As Decimal,  _
                    ByVal UnbondedPanels As Decimal,  _
                    ByVal SingleOpenStrip As Decimal,  _
                    ByVal OpenSeam As Decimal,  _
                    ByVal PanelCavity As Decimal,  _
                    ByVal Touching As Decimal,  _
                    ByVal OtherPrintingIssue As Decimal,  _
                    ByVal CoreCavity As Decimal,  _
                    ByVal PUC As Decimal,  _
                    ByVal SeamClosingGlue As Decimal,  _
                    ByVal BGrade As Decimal,  _
                    ByVal TotalChecked As Decimal,  _
                    ByVal Pass As Decimal,  _
                    ByVal Fail As Decimal,  _
                    ByVal StraightCut As Decimal,  _
                    ByVal CuttingResidual As Decimal,  _
                    ByVal ConnectionBreak As Decimal,  _
                    ByVal UncureGlue As Decimal,  _
                    ByVal ExcessiveGlue As Decimal,  _
                    ByVal OverUnderWght As Decimal,  _
                    ByVal DisColor As Decimal,  _
                    ByVal LogoSmearing As Decimal,  _
                    ByVal LogoDoubling As Decimal,  _
                    ByVal BarcodeMissing As Decimal,  _
                    ByVal LargerSpots As Decimal,  _
                    ByVal Smearing As Decimal,  _
                    ByVal HFMissAlignment As Decimal,  _
                    ByVal RCheck As Decimal,  _
                    ByVal RPass As Decimal,  _
                    ByVal MissAlligment As Decimal,  _
                    ByVal BlurPrinting As Decimal) As View_Daily_SumRow
            Dim rowView_Daily_SumRow As View_Daily_SumRow = CType(Me.NewRow,View_Daily_SumRow)
            Dim columnValuesArray() As Object = New Object() {PanelDMG, OverLap, ZigZagSeam, Wrinkle, ArtWork, UnbondedPanels, SingleOpenStrip, OpenSeam, PanelCavity, Touching, OtherPrintingIssue, CoreCavity, PUC, SeamClosingGlue, BGrade, TotalChecked, Pass, Fail, StraightCut, CuttingResidual, ConnectionBreak, UncureGlue, ExcessiveGlue, OverUnderWght, DisColor, LogoSmearing, LogoDoubling, BarcodeMissing, LargerSpots, Smearing, HFMissAlignment, RCheck, RPass, MissAlligment, BlurPrinting}
            rowView_Daily_SumRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowView_Daily_SumRow)
            Return rowView_Daily_SumRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As View_Daily_SumDataTable = CType(MyBase.Clone,View_Daily_SumDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New View_Daily_SumDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPanelDMG = MyBase.Columns("PanelDMG")
            Me.columnOverLap = MyBase.Columns("OverLap")
            Me.columnZigZagSeam = MyBase.Columns("ZigZagSeam")
            Me.columnWrinkle = MyBase.Columns("Wrinkle")
            Me.columnArtWork = MyBase.Columns("ArtWork")
            Me.columnUnbondedPanels = MyBase.Columns("UnbondedPanels")
            Me.columnSingleOpenStrip = MyBase.Columns("SingleOpenStrip")
            Me.columnOpenSeam = MyBase.Columns("OpenSeam")
            Me.columnPanelCavity = MyBase.Columns("PanelCavity")
            Me.columnTouching = MyBase.Columns("Touching")
            Me.columnOtherPrintingIssue = MyBase.Columns("OtherPrintingIssue")
            Me.columnCoreCavity = MyBase.Columns("CoreCavity")
            Me.columnPUC = MyBase.Columns("PUC")
            Me.columnSeamClosingGlue = MyBase.Columns("SeamClosingGlue")
            Me.columnBGrade = MyBase.Columns("BGrade")
            Me.columnTotalChecked = MyBase.Columns("TotalChecked")
            Me.columnPass = MyBase.Columns("Pass")
            Me.columnFail = MyBase.Columns("Fail")
            Me.columnStraightCut = MyBase.Columns("StraightCut")
            Me.columnCuttingResidual = MyBase.Columns("CuttingResidual")
            Me.columnConnectionBreak = MyBase.Columns("ConnectionBreak")
            Me.columnUncureGlue = MyBase.Columns("UncureGlue")
            Me.columnExcessiveGlue = MyBase.Columns("ExcessiveGlue")
            Me.columnOverUnderWght = MyBase.Columns("OverUnderWght")
            Me.columnDisColor = MyBase.Columns("DisColor")
            Me.columnLogoSmearing = MyBase.Columns("LogoSmearing")
            Me.columnLogoDoubling = MyBase.Columns("LogoDoubling")
            Me.columnBarcodeMissing = MyBase.Columns("BarcodeMissing")
            Me.columnLargerSpots = MyBase.Columns("LargerSpots")
            Me.columnSmearing = MyBase.Columns("Smearing")
            Me.columnHFMissAlignment = MyBase.Columns("HFMissAlignment")
            Me.columnRCheck = MyBase.Columns("RCheck")
            Me.columnRPass = MyBase.Columns("RPass")
            Me.columnMissAlligment = MyBase.Columns("MissAlligment")
            Me.columnBlurPrinting = MyBase.Columns("BlurPrinting")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPanelDMG = New Global.System.Data.DataColumn("PanelDMG", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPanelDMG)
            Me.columnOverLap = New Global.System.Data.DataColumn("OverLap", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOverLap)
            Me.columnZigZagSeam = New Global.System.Data.DataColumn("ZigZagSeam", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZigZagSeam)
            Me.columnWrinkle = New Global.System.Data.DataColumn("Wrinkle", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWrinkle)
            Me.columnArtWork = New Global.System.Data.DataColumn("ArtWork", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArtWork)
            Me.columnUnbondedPanels = New Global.System.Data.DataColumn("UnbondedPanels", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnbondedPanels)
            Me.columnSingleOpenStrip = New Global.System.Data.DataColumn("SingleOpenStrip", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSingleOpenStrip)
            Me.columnOpenSeam = New Global.System.Data.DataColumn("OpenSeam", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOpenSeam)
            Me.columnPanelCavity = New Global.System.Data.DataColumn("PanelCavity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPanelCavity)
            Me.columnTouching = New Global.System.Data.DataColumn("Touching", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTouching)
            Me.columnOtherPrintingIssue = New Global.System.Data.DataColumn("OtherPrintingIssue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOtherPrintingIssue)
            Me.columnCoreCavity = New Global.System.Data.DataColumn("CoreCavity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCoreCavity)
            Me.columnPUC = New Global.System.Data.DataColumn("PUC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPUC)
            Me.columnSeamClosingGlue = New Global.System.Data.DataColumn("SeamClosingGlue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSeamClosingGlue)
            Me.columnBGrade = New Global.System.Data.DataColumn("BGrade", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBGrade)
            Me.columnTotalChecked = New Global.System.Data.DataColumn("TotalChecked", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalChecked)
            Me.columnPass = New Global.System.Data.DataColumn("Pass", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPass)
            Me.columnFail = New Global.System.Data.DataColumn("Fail", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFail)
            Me.columnStraightCut = New Global.System.Data.DataColumn("StraightCut", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStraightCut)
            Me.columnCuttingResidual = New Global.System.Data.DataColumn("CuttingResidual", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCuttingResidual)
            Me.columnConnectionBreak = New Global.System.Data.DataColumn("ConnectionBreak", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConnectionBreak)
            Me.columnUncureGlue = New Global.System.Data.DataColumn("UncureGlue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUncureGlue)
            Me.columnExcessiveGlue = New Global.System.Data.DataColumn("ExcessiveGlue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExcessiveGlue)
            Me.columnOverUnderWght = New Global.System.Data.DataColumn("OverUnderWght", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOverUnderWght)
            Me.columnDisColor = New Global.System.Data.DataColumn("DisColor", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDisColor)
            Me.columnLogoSmearing = New Global.System.Data.DataColumn("LogoSmearing", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogoSmearing)
            Me.columnLogoDoubling = New Global.System.Data.DataColumn("LogoDoubling", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogoDoubling)
            Me.columnBarcodeMissing = New Global.System.Data.DataColumn("BarcodeMissing", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBarcodeMissing)
            Me.columnLargerSpots = New Global.System.Data.DataColumn("LargerSpots", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLargerSpots)
            Me.columnSmearing = New Global.System.Data.DataColumn("Smearing", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSmearing)
            Me.columnHFMissAlignment = New Global.System.Data.DataColumn("HFMissAlignment", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHFMissAlignment)
            Me.columnRCheck = New Global.System.Data.DataColumn("RCheck", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRCheck)
            Me.columnRPass = New Global.System.Data.DataColumn("RPass", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPass)
            Me.columnMissAlligment = New Global.System.Data.DataColumn("MissAlligment", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMissAlligment)
            Me.columnBlurPrinting = New Global.System.Data.DataColumn("BlurPrinting", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlurPrinting)
            Me.columnPanelDMG.ReadOnly = true
            Me.columnOverLap.ReadOnly = true
            Me.columnZigZagSeam.ReadOnly = true
            Me.columnWrinkle.ReadOnly = true
            Me.columnArtWork.ReadOnly = true
            Me.columnUnbondedPanels.ReadOnly = true
            Me.columnSingleOpenStrip.ReadOnly = true
            Me.columnOpenSeam.ReadOnly = true
            Me.columnPanelCavity.ReadOnly = true
            Me.columnTouching.ReadOnly = true
            Me.columnOtherPrintingIssue.ReadOnly = true
            Me.columnCoreCavity.ReadOnly = true
            Me.columnPUC.ReadOnly = true
            Me.columnSeamClosingGlue.ReadOnly = true
            Me.columnBGrade.ReadOnly = true
            Me.columnTotalChecked.ReadOnly = true
            Me.columnPass.ReadOnly = true
            Me.columnFail.ReadOnly = true
            Me.columnStraightCut.ReadOnly = true
            Me.columnCuttingResidual.ReadOnly = true
            Me.columnConnectionBreak.ReadOnly = true
            Me.columnUncureGlue.ReadOnly = true
            Me.columnExcessiveGlue.ReadOnly = true
            Me.columnOverUnderWght.ReadOnly = true
            Me.columnDisColor.ReadOnly = true
            Me.columnLogoSmearing.ReadOnly = true
            Me.columnLogoDoubling.ReadOnly = true
            Me.columnBarcodeMissing.ReadOnly = true
            Me.columnLargerSpots.ReadOnly = true
            Me.columnSmearing.ReadOnly = true
            Me.columnHFMissAlignment.ReadOnly = true
            Me.columnRCheck.ReadOnly = true
            Me.columnRPass.ReadOnly = true
            Me.columnMissAlligment.ReadOnly = true
            Me.columnBlurPrinting.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewView_Daily_SumRow() As View_Daily_SumRow
            Return CType(Me.NewRow,View_Daily_SumRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New View_Daily_SumRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(View_Daily_SumRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.View_Daily_SumRowChangedEvent) Is Nothing) Then
                RaiseEvent View_Daily_SumRowChanged(Me, New View_Daily_SumRowChangeEvent(CType(e.Row,View_Daily_SumRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.View_Daily_SumRowChangingEvent) Is Nothing) Then
                RaiseEvent View_Daily_SumRowChanging(Me, New View_Daily_SumRowChangeEvent(CType(e.Row,View_Daily_SumRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.View_Daily_SumRowDeletedEvent) Is Nothing) Then
                RaiseEvent View_Daily_SumRowDeleted(Me, New View_Daily_SumRowChangeEvent(CType(e.Row,View_Daily_SumRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.View_Daily_SumRowDeletingEvent) Is Nothing) Then
                RaiseEvent View_Daily_SumRowDeleting(Me, New View_Daily_SumRowChangeEvent(CType(e.Row,View_Daily_SumRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveView_Daily_SumRow(ByVal row As View_Daily_SumRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSAMB = New DSAMB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "View_Daily_SumDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class View_AMb_Article_Wise_SumDataTable
        Inherits Global.System.Data.TypedTableBase(Of View_AMb_Article_Wise_SumRow)
        
        Private columnPanelDMG As Global.System.Data.DataColumn
        
        Private columnOverLap As Global.System.Data.DataColumn
        
        Private columnZigZagSeam As Global.System.Data.DataColumn
        
        Private columnWrinkle As Global.System.Data.DataColumn
        
        Private columnArtWork As Global.System.Data.DataColumn
        
        Private columnUnbondedPanels As Global.System.Data.DataColumn
        
        Private columnSingleOpenStrip As Global.System.Data.DataColumn
        
        Private columnOpenSeam As Global.System.Data.DataColumn
        
        Private columnPanelCavity As Global.System.Data.DataColumn
        
        Private columnTouching As Global.System.Data.DataColumn
        
        Private columnOtherPrintingIssue As Global.System.Data.DataColumn
        
        Private columnCoreCavity As Global.System.Data.DataColumn
        
        Private columnPUC As Global.System.Data.DataColumn
        
        Private columnSeamClosingGlue As Global.System.Data.DataColumn
        
        Private columnBGrade As Global.System.Data.DataColumn
        
        Private columnTotalChecked As Global.System.Data.DataColumn
        
        Private columnPass As Global.System.Data.DataColumn
        
        Private columnFail As Global.System.Data.DataColumn
        
        Private columnStraightCut As Global.System.Data.DataColumn
        
        Private columnCuttingResidual As Global.System.Data.DataColumn
        
        Private columnConnectionBreak As Global.System.Data.DataColumn
        
        Private columnUncureGlue As Global.System.Data.DataColumn
        
        Private columnExcessiveGlue As Global.System.Data.DataColumn
        
        Private columnOverUnderWght As Global.System.Data.DataColumn
        
        Private columnMissAlligment As Global.System.Data.DataColumn
        
        Private columnDisColor As Global.System.Data.DataColumn
        
        Private columnLogoSmearing As Global.System.Data.DataColumn
        
        Private columnLogoDoubling As Global.System.Data.DataColumn
        
        Private columnBarcodeMissing As Global.System.Data.DataColumn
        
        Private columnLargerSpots As Global.System.Data.DataColumn
        
        Private columnSmearing As Global.System.Data.DataColumn
        
        Private columnHFMissAlignment As Global.System.Data.DataColumn
        
        Private columnRCheck As Global.System.Data.DataColumn
        
        Private columnRPass As Global.System.Data.DataColumn
        
        Private columnBlurPrinting As Global.System.Data.DataColumn
        
        Private columnairbubble As Global.System.Data.DataColumn
        
        Private columnpressoremark As Global.System.Data.DataColumn
        
        Private columnmissingglue As Global.System.Data.DataColumn
        
        Private columnexcussglue As Global.System.Data.DataColumn
        
        Private columnwrinkles As Global.System.Data.DataColumn
        
        Private columnseamoverlapping As Global.System.Data.DataColumn
        
        Private columnnewopenSeam As Global.System.Data.DataColumn
        
        Private columnmaterialdefects As Global.System.Data.DataColumn
        
        Private columncolourShape As Global.System.Data.DataColumn
        
        Private columnanymisprint As Global.System.Data.DataColumn
        
        Private columnprintmissallignament As Global.System.Data.DataColumn
        
        Private columnNewTouching As Global.System.Data.DataColumn
        
        Private columnheavyprintdefects As Global.System.Data.DataColumn
        
        Private columncuttingpanel As Global.System.Data.DataColumn
        
        Private columnzigzagedge As Global.System.Data.DataColumn
        
        Private columnunshapecut As Global.System.Data.DataColumn
        
        Private columnunevenBallSurface As Global.System.Data.DataColumn
        
        Private columnwrongartwork As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "View_AMb_Article Wise_Sum"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PanelDMGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPanelDMG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OverLapColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOverLap
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ZigZagSeamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZigZagSeam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WrinkleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWrinkle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ArtWorkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArtWork
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property UnbondedPanelsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnbondedPanels
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SingleOpenStripColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSingleOpenStrip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OpenSeamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOpenSeam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PanelCavityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPanelCavity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TouchingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTouching
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OtherPrintingIssueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOtherPrintingIssue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CoreCavityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCoreCavity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PUCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPUC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SeamClosingGlueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSeamClosingGlue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BGradeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBGrade
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TotalCheckedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalChecked
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PassColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPass
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property StraightCutColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStraightCut
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CuttingResidualColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCuttingResidual
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ConnectionBreakColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConnectionBreak
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property UncureGlueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUncureGlue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ExcessiveGlueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExcessiveGlue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OverUnderWghtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOverUnderWght
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property MissAlligmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMissAlligment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DisColorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDisColor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LogoSmearingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogoSmearing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LogoDoublingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogoDoubling
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BarcodeMissingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBarcodeMissing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LargerSpotsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLargerSpots
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SmearingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSmearing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property HFMissAlignmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHFMissAlignment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RCheckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRCheck
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RPassColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPass
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BlurPrintingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlurPrinting
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property airbubbleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnairbubble
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property pressoremarkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpressoremark
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property missingglueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmissingglue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property excussglueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnexcussglue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property wrinklesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwrinkles
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property seamoverlappingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnseamoverlapping
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property newopenSeamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnewopenSeam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property materialdefectsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmaterialdefects
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property colourShapeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncolourShape
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property anymisprintColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnanymisprint
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property printmissallignamentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprintmissallignament
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NewTouchingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNewTouching
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property heavyprintdefectsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnheavyprintdefects
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property cuttingpanelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncuttingpanel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property zigzagedgeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnzigzagedge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property unshapecutColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnunshapecut
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property unevenBallSurfaceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnunevenBallSurface
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property wrongartworkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwrongartwork
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As View_AMb_Article_Wise_SumRow
            Get
                Return CType(Me.Rows(index),View_AMb_Article_Wise_SumRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_AMb_Article_Wise_SumRowChanging As View_AMb_Article_Wise_SumRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_AMb_Article_Wise_SumRowChanged As View_AMb_Article_Wise_SumRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_AMb_Article_Wise_SumRowDeleting As View_AMb_Article_Wise_SumRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_AMb_Article_Wise_SumRowDeleted As View_AMb_Article_Wise_SumRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddView_AMb_Article_Wise_SumRow(ByVal row As View_AMb_Article_Wise_SumRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddView_AMb_Article_Wise_SumRow( _
                    ByVal PanelDMG As Decimal,  _
                    ByVal OverLap As Decimal,  _
                    ByVal ZigZagSeam As Decimal,  _
                    ByVal Wrinkle As Decimal,  _
                    ByVal ArtWork As Decimal,  _
                    ByVal UnbondedPanels As Decimal,  _
                    ByVal SingleOpenStrip As Decimal,  _
                    ByVal OpenSeam As Decimal,  _
                    ByVal PanelCavity As Decimal,  _
                    ByVal Touching As Decimal,  _
                    ByVal OtherPrintingIssue As Decimal,  _
                    ByVal CoreCavity As Decimal,  _
                    ByVal PUC As Decimal,  _
                    ByVal SeamClosingGlue As Decimal,  _
                    ByVal BGrade As Decimal,  _
                    ByVal TotalChecked As Decimal,  _
                    ByVal Pass As Decimal,  _
                    ByVal Fail As Decimal,  _
                    ByVal StraightCut As Decimal,  _
                    ByVal CuttingResidual As Decimal,  _
                    ByVal ConnectionBreak As Decimal,  _
                    ByVal UncureGlue As Decimal,  _
                    ByVal ExcessiveGlue As Decimal,  _
                    ByVal OverUnderWght As Decimal,  _
                    ByVal MissAlligment As Decimal,  _
                    ByVal DisColor As Decimal,  _
                    ByVal LogoSmearing As Decimal,  _
                    ByVal LogoDoubling As Decimal,  _
                    ByVal BarcodeMissing As Decimal,  _
                    ByVal LargerSpots As Decimal,  _
                    ByVal Smearing As Decimal,  _
                    ByVal HFMissAlignment As Decimal,  _
                    ByVal RCheck As Decimal,  _
                    ByVal RPass As Decimal,  _
                    ByVal BlurPrinting As Decimal,  _
                    ByVal airbubble As Decimal,  _
                    ByVal pressoremark As Decimal,  _
                    ByVal missingglue As Decimal,  _
                    ByVal excussglue As Decimal,  _
                    ByVal wrinkles As Decimal,  _
                    ByVal seamoverlapping As Decimal,  _
                    ByVal newopenSeam As Decimal,  _
                    ByVal materialdefects As Decimal,  _
                    ByVal colourShape As Decimal,  _
                    ByVal anymisprint As Decimal,  _
                    ByVal printmissallignament As Decimal,  _
                    ByVal NewTouching As Decimal,  _
                    ByVal heavyprintdefects As Decimal,  _
                    ByVal cuttingpanel As Decimal,  _
                    ByVal zigzagedge As Decimal,  _
                    ByVal unshapecut As Decimal,  _
                    ByVal unevenBallSurface As Decimal,  _
                    ByVal wrongartwork As Decimal) As View_AMb_Article_Wise_SumRow
            Dim rowView_AMb_Article_Wise_SumRow As View_AMb_Article_Wise_SumRow = CType(Me.NewRow,View_AMb_Article_Wise_SumRow)
            Dim columnValuesArray() As Object = New Object() {PanelDMG, OverLap, ZigZagSeam, Wrinkle, ArtWork, UnbondedPanels, SingleOpenStrip, OpenSeam, PanelCavity, Touching, OtherPrintingIssue, CoreCavity, PUC, SeamClosingGlue, BGrade, TotalChecked, Pass, Fail, StraightCut, CuttingResidual, ConnectionBreak, UncureGlue, ExcessiveGlue, OverUnderWght, MissAlligment, DisColor, LogoSmearing, LogoDoubling, BarcodeMissing, LargerSpots, Smearing, HFMissAlignment, RCheck, RPass, BlurPrinting, airbubble, pressoremark, missingglue, excussglue, wrinkles, seamoverlapping, newopenSeam, materialdefects, colourShape, anymisprint, printmissallignament, NewTouching, heavyprintdefects, cuttingpanel, zigzagedge, unshapecut, unevenBallSurface, wrongartwork}
            rowView_AMb_Article_Wise_SumRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowView_AMb_Article_Wise_SumRow)
            Return rowView_AMb_Article_Wise_SumRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As View_AMb_Article_Wise_SumDataTable = CType(MyBase.Clone,View_AMb_Article_Wise_SumDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New View_AMb_Article_Wise_SumDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPanelDMG = MyBase.Columns("PanelDMG")
            Me.columnOverLap = MyBase.Columns("OverLap")
            Me.columnZigZagSeam = MyBase.Columns("ZigZagSeam")
            Me.columnWrinkle = MyBase.Columns("Wrinkle")
            Me.columnArtWork = MyBase.Columns("ArtWork")
            Me.columnUnbondedPanels = MyBase.Columns("UnbondedPanels")
            Me.columnSingleOpenStrip = MyBase.Columns("SingleOpenStrip")
            Me.columnOpenSeam = MyBase.Columns("OpenSeam")
            Me.columnPanelCavity = MyBase.Columns("PanelCavity")
            Me.columnTouching = MyBase.Columns("Touching")
            Me.columnOtherPrintingIssue = MyBase.Columns("OtherPrintingIssue")
            Me.columnCoreCavity = MyBase.Columns("CoreCavity")
            Me.columnPUC = MyBase.Columns("PUC")
            Me.columnSeamClosingGlue = MyBase.Columns("SeamClosingGlue")
            Me.columnBGrade = MyBase.Columns("BGrade")
            Me.columnTotalChecked = MyBase.Columns("TotalChecked")
            Me.columnPass = MyBase.Columns("Pass")
            Me.columnFail = MyBase.Columns("Fail")
            Me.columnStraightCut = MyBase.Columns("StraightCut")
            Me.columnCuttingResidual = MyBase.Columns("CuttingResidual")
            Me.columnConnectionBreak = MyBase.Columns("ConnectionBreak")
            Me.columnUncureGlue = MyBase.Columns("UncureGlue")
            Me.columnExcessiveGlue = MyBase.Columns("ExcessiveGlue")
            Me.columnOverUnderWght = MyBase.Columns("OverUnderWght")
            Me.columnMissAlligment = MyBase.Columns("MissAlligment")
            Me.columnDisColor = MyBase.Columns("DisColor")
            Me.columnLogoSmearing = MyBase.Columns("LogoSmearing")
            Me.columnLogoDoubling = MyBase.Columns("LogoDoubling")
            Me.columnBarcodeMissing = MyBase.Columns("BarcodeMissing")
            Me.columnLargerSpots = MyBase.Columns("LargerSpots")
            Me.columnSmearing = MyBase.Columns("Smearing")
            Me.columnHFMissAlignment = MyBase.Columns("HFMissAlignment")
            Me.columnRCheck = MyBase.Columns("RCheck")
            Me.columnRPass = MyBase.Columns("RPass")
            Me.columnBlurPrinting = MyBase.Columns("BlurPrinting")
            Me.columnairbubble = MyBase.Columns("airbubble")
            Me.columnpressoremark = MyBase.Columns("pressoremark")
            Me.columnmissingglue = MyBase.Columns("missingglue")
            Me.columnexcussglue = MyBase.Columns("excussglue")
            Me.columnwrinkles = MyBase.Columns("wrinkles")
            Me.columnseamoverlapping = MyBase.Columns("seamoverlapping")
            Me.columnnewopenSeam = MyBase.Columns("newopenSeam")
            Me.columnmaterialdefects = MyBase.Columns("materialdefects")
            Me.columncolourShape = MyBase.Columns("colourShape")
            Me.columnanymisprint = MyBase.Columns("anymisprint")
            Me.columnprintmissallignament = MyBase.Columns("printmissallignament")
            Me.columnNewTouching = MyBase.Columns("NewTouching")
            Me.columnheavyprintdefects = MyBase.Columns("heavyprintdefects")
            Me.columncuttingpanel = MyBase.Columns("cuttingpanel")
            Me.columnzigzagedge = MyBase.Columns("zigzagedge")
            Me.columnunshapecut = MyBase.Columns("unshapecut")
            Me.columnunevenBallSurface = MyBase.Columns("unevenBallSurface")
            Me.columnwrongartwork = MyBase.Columns("wrongartwork")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPanelDMG = New Global.System.Data.DataColumn("PanelDMG", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPanelDMG)
            Me.columnOverLap = New Global.System.Data.DataColumn("OverLap", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOverLap)
            Me.columnZigZagSeam = New Global.System.Data.DataColumn("ZigZagSeam", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZigZagSeam)
            Me.columnWrinkle = New Global.System.Data.DataColumn("Wrinkle", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWrinkle)
            Me.columnArtWork = New Global.System.Data.DataColumn("ArtWork", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArtWork)
            Me.columnUnbondedPanels = New Global.System.Data.DataColumn("UnbondedPanels", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnbondedPanels)
            Me.columnSingleOpenStrip = New Global.System.Data.DataColumn("SingleOpenStrip", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSingleOpenStrip)
            Me.columnOpenSeam = New Global.System.Data.DataColumn("OpenSeam", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOpenSeam)
            Me.columnPanelCavity = New Global.System.Data.DataColumn("PanelCavity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPanelCavity)
            Me.columnTouching = New Global.System.Data.DataColumn("Touching", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTouching)
            Me.columnOtherPrintingIssue = New Global.System.Data.DataColumn("OtherPrintingIssue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOtherPrintingIssue)
            Me.columnCoreCavity = New Global.System.Data.DataColumn("CoreCavity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCoreCavity)
            Me.columnPUC = New Global.System.Data.DataColumn("PUC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPUC)
            Me.columnSeamClosingGlue = New Global.System.Data.DataColumn("SeamClosingGlue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSeamClosingGlue)
            Me.columnBGrade = New Global.System.Data.DataColumn("BGrade", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBGrade)
            Me.columnTotalChecked = New Global.System.Data.DataColumn("TotalChecked", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalChecked)
            Me.columnPass = New Global.System.Data.DataColumn("Pass", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPass)
            Me.columnFail = New Global.System.Data.DataColumn("Fail", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFail)
            Me.columnStraightCut = New Global.System.Data.DataColumn("StraightCut", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStraightCut)
            Me.columnCuttingResidual = New Global.System.Data.DataColumn("CuttingResidual", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCuttingResidual)
            Me.columnConnectionBreak = New Global.System.Data.DataColumn("ConnectionBreak", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConnectionBreak)
            Me.columnUncureGlue = New Global.System.Data.DataColumn("UncureGlue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUncureGlue)
            Me.columnExcessiveGlue = New Global.System.Data.DataColumn("ExcessiveGlue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExcessiveGlue)
            Me.columnOverUnderWght = New Global.System.Data.DataColumn("OverUnderWght", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOverUnderWght)
            Me.columnMissAlligment = New Global.System.Data.DataColumn("MissAlligment", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMissAlligment)
            Me.columnDisColor = New Global.System.Data.DataColumn("DisColor", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDisColor)
            Me.columnLogoSmearing = New Global.System.Data.DataColumn("LogoSmearing", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogoSmearing)
            Me.columnLogoDoubling = New Global.System.Data.DataColumn("LogoDoubling", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogoDoubling)
            Me.columnBarcodeMissing = New Global.System.Data.DataColumn("BarcodeMissing", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBarcodeMissing)
            Me.columnLargerSpots = New Global.System.Data.DataColumn("LargerSpots", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLargerSpots)
            Me.columnSmearing = New Global.System.Data.DataColumn("Smearing", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSmearing)
            Me.columnHFMissAlignment = New Global.System.Data.DataColumn("HFMissAlignment", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHFMissAlignment)
            Me.columnRCheck = New Global.System.Data.DataColumn("RCheck", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRCheck)
            Me.columnRPass = New Global.System.Data.DataColumn("RPass", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPass)
            Me.columnBlurPrinting = New Global.System.Data.DataColumn("BlurPrinting", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlurPrinting)
            Me.columnairbubble = New Global.System.Data.DataColumn("airbubble", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnairbubble)
            Me.columnpressoremark = New Global.System.Data.DataColumn("pressoremark", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpressoremark)
            Me.columnmissingglue = New Global.System.Data.DataColumn("missingglue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmissingglue)
            Me.columnexcussglue = New Global.System.Data.DataColumn("excussglue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexcussglue)
            Me.columnwrinkles = New Global.System.Data.DataColumn("wrinkles", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwrinkles)
            Me.columnseamoverlapping = New Global.System.Data.DataColumn("seamoverlapping", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnseamoverlapping)
            Me.columnnewopenSeam = New Global.System.Data.DataColumn("newopenSeam", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnewopenSeam)
            Me.columnmaterialdefects = New Global.System.Data.DataColumn("materialdefects", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaterialdefects)
            Me.columncolourShape = New Global.System.Data.DataColumn("colourShape", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncolourShape)
            Me.columnanymisprint = New Global.System.Data.DataColumn("anymisprint", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnanymisprint)
            Me.columnprintmissallignament = New Global.System.Data.DataColumn("printmissallignament", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprintmissallignament)
            Me.columnNewTouching = New Global.System.Data.DataColumn("NewTouching", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNewTouching)
            Me.columnheavyprintdefects = New Global.System.Data.DataColumn("heavyprintdefects", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnheavyprintdefects)
            Me.columncuttingpanel = New Global.System.Data.DataColumn("cuttingpanel", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncuttingpanel)
            Me.columnzigzagedge = New Global.System.Data.DataColumn("zigzagedge", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnzigzagedge)
            Me.columnunshapecut = New Global.System.Data.DataColumn("unshapecut", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnunshapecut)
            Me.columnunevenBallSurface = New Global.System.Data.DataColumn("unevenBallSurface", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnunevenBallSurface)
            Me.columnwrongartwork = New Global.System.Data.DataColumn("wrongartwork", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwrongartwork)
            Me.columnMissAlligment.ReadOnly = true
            Me.columnDisColor.ReadOnly = true
            Me.columnLogoSmearing.ReadOnly = true
            Me.columnLogoDoubling.ReadOnly = true
            Me.columnBarcodeMissing.ReadOnly = true
            Me.columnLargerSpots.ReadOnly = true
            Me.columnSmearing.ReadOnly = true
            Me.columnHFMissAlignment.ReadOnly = true
            Me.columnRCheck.ReadOnly = true
            Me.columnRPass.ReadOnly = true
            Me.columnBlurPrinting.ReadOnly = true
            Me.columnairbubble.ReadOnly = true
            Me.columnpressoremark.ReadOnly = true
            Me.columnmissingglue.ReadOnly = true
            Me.columnexcussglue.ReadOnly = true
            Me.columnwrinkles.ReadOnly = true
            Me.columnseamoverlapping.ReadOnly = true
            Me.columnnewopenSeam.ReadOnly = true
            Me.columnmaterialdefects.ReadOnly = true
            Me.columncolourShape.ReadOnly = true
            Me.columnanymisprint.ReadOnly = true
            Me.columnprintmissallignament.ReadOnly = true
            Me.columnNewTouching.ReadOnly = true
            Me.columnheavyprintdefects.ReadOnly = true
            Me.columncuttingpanel.ReadOnly = true
            Me.columnzigzagedge.ReadOnly = true
            Me.columnunshapecut.ReadOnly = true
            Me.columnunevenBallSurface.ReadOnly = true
            Me.columnwrongartwork.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewView_AMb_Article_Wise_SumRow() As View_AMb_Article_Wise_SumRow
            Return CType(Me.NewRow,View_AMb_Article_Wise_SumRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New View_AMb_Article_Wise_SumRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(View_AMb_Article_Wise_SumRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.View_AMb_Article_Wise_SumRowChangedEvent) Is Nothing) Then
                RaiseEvent View_AMb_Article_Wise_SumRowChanged(Me, New View_AMb_Article_Wise_SumRowChangeEvent(CType(e.Row,View_AMb_Article_Wise_SumRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.View_AMb_Article_Wise_SumRowChangingEvent) Is Nothing) Then
                RaiseEvent View_AMb_Article_Wise_SumRowChanging(Me, New View_AMb_Article_Wise_SumRowChangeEvent(CType(e.Row,View_AMb_Article_Wise_SumRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.View_AMb_Article_Wise_SumRowDeletedEvent) Is Nothing) Then
                RaiseEvent View_AMb_Article_Wise_SumRowDeleted(Me, New View_AMb_Article_Wise_SumRowChangeEvent(CType(e.Row,View_AMb_Article_Wise_SumRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.View_AMb_Article_Wise_SumRowDeletingEvent) Is Nothing) Then
                RaiseEvent View_AMb_Article_Wise_SumRowDeleting(Me, New View_AMb_Article_Wise_SumRowChangeEvent(CType(e.Row,View_AMb_Article_Wise_SumRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveView_AMb_Article_Wise_SumRow(ByVal row As View_AMb_Article_Wise_SumRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSAMB = New DSAMB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "View_AMb_Article_Wise_SumDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_PC_AMB_LineDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_PC_AMB_LineRow)
        
        Private columnLineID As Global.System.Data.DataColumn
        
        Private columnLineName As Global.System.Data.DataColumn
        
        Private columnTotalStrength As Global.System.Data.DataColumn
        
        Private columnPackingStrength As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_PC_AMB_Line"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LineIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLineID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LineNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLineName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TotalStrengthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalStrength
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PackingStrengthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPackingStrength
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_PC_AMB_LineRow
            Get
                Return CType(Me.Rows(index),tbl_PC_AMB_LineRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event tbl_PC_AMB_LineRowChanging As tbl_PC_AMB_LineRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event tbl_PC_AMB_LineRowChanged As tbl_PC_AMB_LineRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event tbl_PC_AMB_LineRowDeleting As tbl_PC_AMB_LineRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event tbl_PC_AMB_LineRowDeleted As tbl_PC_AMB_LineRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub Addtbl_PC_AMB_LineRow(ByVal row As tbl_PC_AMB_LineRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function Addtbl_PC_AMB_LineRow(ByVal LineName As String, ByVal TotalStrength As Decimal, ByVal PackingStrength As Decimal) As tbl_PC_AMB_LineRow
            Dim rowtbl_PC_AMB_LineRow As tbl_PC_AMB_LineRow = CType(Me.NewRow,tbl_PC_AMB_LineRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, LineName, TotalStrength, PackingStrength}
            rowtbl_PC_AMB_LineRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_PC_AMB_LineRow)
            Return rowtbl_PC_AMB_LineRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByLineID(ByVal LineID As Integer) As tbl_PC_AMB_LineRow
            Return CType(Me.Rows.Find(New Object() {LineID}),tbl_PC_AMB_LineRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_PC_AMB_LineDataTable = CType(MyBase.Clone,tbl_PC_AMB_LineDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_PC_AMB_LineDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnLineID = MyBase.Columns("LineID")
            Me.columnLineName = MyBase.Columns("LineName")
            Me.columnTotalStrength = MyBase.Columns("TotalStrength")
            Me.columnPackingStrength = MyBase.Columns("PackingStrength")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnLineID = New Global.System.Data.DataColumn("LineID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLineID)
            Me.columnLineName = New Global.System.Data.DataColumn("LineName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLineName)
            Me.columnTotalStrength = New Global.System.Data.DataColumn("TotalStrength", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalStrength)
            Me.columnPackingStrength = New Global.System.Data.DataColumn("PackingStrength", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPackingStrength)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnLineID}, true))
            Me.columnLineID.AutoIncrement = true
            Me.columnLineID.AutoIncrementSeed = -1
            Me.columnLineID.AutoIncrementStep = -1
            Me.columnLineID.AllowDBNull = false
            Me.columnLineID.ReadOnly = true
            Me.columnLineID.Unique = true
            Me.columnLineName.AllowDBNull = false
            Me.columnLineName.MaxLength = 150
            Me.columnTotalStrength.AllowDBNull = false
            Me.columnPackingStrength.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Newtbl_PC_AMB_LineRow() As tbl_PC_AMB_LineRow
            Return CType(Me.NewRow,tbl_PC_AMB_LineRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_PC_AMB_LineRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_PC_AMB_LineRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_PC_AMB_LineRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_PC_AMB_LineRowChanged(Me, New tbl_PC_AMB_LineRowChangeEvent(CType(e.Row,tbl_PC_AMB_LineRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_PC_AMB_LineRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_PC_AMB_LineRowChanging(Me, New tbl_PC_AMB_LineRowChangeEvent(CType(e.Row,tbl_PC_AMB_LineRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_PC_AMB_LineRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_PC_AMB_LineRowDeleted(Me, New tbl_PC_AMB_LineRowChangeEvent(CType(e.Row,tbl_PC_AMB_LineRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_PC_AMB_LineRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_PC_AMB_LineRowDeleting(Me, New tbl_PC_AMB_LineRowChangeEvent(CType(e.Row,tbl_PC_AMB_LineRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Removetbl_PC_AMB_LineRow(ByVal row As tbl_PC_AMB_LineRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSAMB = New DSAMB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_PC_AMB_LineDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class View_max_FromingDataTable
        Inherits Global.System.Data.TypedTableBase(Of View_max_FromingRow)
        
        Private columnTranID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "View_max_Froming"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TranIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTranID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As View_max_FromingRow
            Get
                Return CType(Me.Rows(index),View_max_FromingRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_max_FromingRowChanging As View_max_FromingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_max_FromingRowChanged As View_max_FromingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_max_FromingRowDeleting As View_max_FromingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_max_FromingRowDeleted As View_max_FromingRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddView_max_FromingRow(ByVal row As View_max_FromingRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddView_max_FromingRow(ByVal TranID As Integer) As View_max_FromingRow
            Dim rowView_max_FromingRow As View_max_FromingRow = CType(Me.NewRow,View_max_FromingRow)
            Dim columnValuesArray() As Object = New Object() {TranID}
            rowView_max_FromingRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowView_max_FromingRow)
            Return rowView_max_FromingRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByTranID(ByVal TranID As Integer) As View_max_FromingRow
            Return CType(Me.Rows.Find(New Object() {TranID}),View_max_FromingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As View_max_FromingDataTable = CType(MyBase.Clone,View_max_FromingDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New View_max_FromingDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTranID = MyBase.Columns("TranID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTranID = New Global.System.Data.DataColumn("TranID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTranID)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnTranID}, true))
            Me.columnTranID.AllowDBNull = false
            Me.columnTranID.ReadOnly = true
            Me.columnTranID.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewView_max_FromingRow() As View_max_FromingRow
            Return CType(Me.NewRow,View_max_FromingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New View_max_FromingRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(View_max_FromingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.View_max_FromingRowChangedEvent) Is Nothing) Then
                RaiseEvent View_max_FromingRowChanged(Me, New View_max_FromingRowChangeEvent(CType(e.Row,View_max_FromingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.View_max_FromingRowChangingEvent) Is Nothing) Then
                RaiseEvent View_max_FromingRowChanging(Me, New View_max_FromingRowChangeEvent(CType(e.Row,View_max_FromingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.View_max_FromingRowDeletedEvent) Is Nothing) Then
                RaiseEvent View_max_FromingRowDeleted(Me, New View_max_FromingRowChangeEvent(CType(e.Row,View_max_FromingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.View_max_FromingRowDeletingEvent) Is Nothing) Then
                RaiseEvent View_max_FromingRowDeleting(Me, New View_max_FromingRowChangeEvent(CType(e.Row,View_max_FromingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveView_max_FromingRow(ByVal row As View_max_FromingRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSAMB = New DSAMB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "View_max_FromingDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class View_AMB_Incentive_RFTDataTable
        Inherits Global.System.Data.TypedTableBase(Of View_AMB_Incentive_RFTRow)
        
        Private columnPassQty As Global.System.Data.DataColumn
        
        Private columnTotalChecked As Global.System.Data.DataColumn
        
        Private columnFailQty As Global.System.Data.DataColumn
        
        Private columnRFT As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "View_AMB_Incentive_RFT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PassQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPassQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TotalCheckedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalChecked
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FailQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFailQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RFTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRFT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As View_AMB_Incentive_RFTRow
            Get
                Return CType(Me.Rows(index),View_AMB_Incentive_RFTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_AMB_Incentive_RFTRowChanging As View_AMB_Incentive_RFTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_AMB_Incentive_RFTRowChanged As View_AMB_Incentive_RFTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_AMB_Incentive_RFTRowDeleting As View_AMB_Incentive_RFTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_AMB_Incentive_RFTRowDeleted As View_AMB_Incentive_RFTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddView_AMB_Incentive_RFTRow(ByVal row As View_AMB_Incentive_RFTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddView_AMB_Incentive_RFTRow(ByVal PassQty As Decimal, ByVal TotalChecked As Decimal, ByVal FailQty As Decimal, ByVal RFT As Decimal) As View_AMB_Incentive_RFTRow
            Dim rowView_AMB_Incentive_RFTRow As View_AMB_Incentive_RFTRow = CType(Me.NewRow,View_AMB_Incentive_RFTRow)
            Dim columnValuesArray() As Object = New Object() {PassQty, TotalChecked, FailQty, RFT}
            rowView_AMB_Incentive_RFTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowView_AMB_Incentive_RFTRow)
            Return rowView_AMB_Incentive_RFTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As View_AMB_Incentive_RFTDataTable = CType(MyBase.Clone,View_AMB_Incentive_RFTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New View_AMB_Incentive_RFTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPassQty = MyBase.Columns("PassQty")
            Me.columnTotalChecked = MyBase.Columns("TotalChecked")
            Me.columnFailQty = MyBase.Columns("FailQty")
            Me.columnRFT = MyBase.Columns("RFT")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPassQty = New Global.System.Data.DataColumn("PassQty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPassQty)
            Me.columnTotalChecked = New Global.System.Data.DataColumn("TotalChecked", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalChecked)
            Me.columnFailQty = New Global.System.Data.DataColumn("FailQty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFailQty)
            Me.columnRFT = New Global.System.Data.DataColumn("RFT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRFT)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewView_AMB_Incentive_RFTRow() As View_AMB_Incentive_RFTRow
            Return CType(Me.NewRow,View_AMB_Incentive_RFTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New View_AMB_Incentive_RFTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(View_AMB_Incentive_RFTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.View_AMB_Incentive_RFTRowChangedEvent) Is Nothing) Then
                RaiseEvent View_AMB_Incentive_RFTRowChanged(Me, New View_AMB_Incentive_RFTRowChangeEvent(CType(e.Row,View_AMB_Incentive_RFTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.View_AMB_Incentive_RFTRowChangingEvent) Is Nothing) Then
                RaiseEvent View_AMB_Incentive_RFTRowChanging(Me, New View_AMB_Incentive_RFTRowChangeEvent(CType(e.Row,View_AMB_Incentive_RFTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.View_AMB_Incentive_RFTRowDeletedEvent) Is Nothing) Then
                RaiseEvent View_AMB_Incentive_RFTRowDeleted(Me, New View_AMB_Incentive_RFTRowChangeEvent(CType(e.Row,View_AMB_Incentive_RFTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.View_AMB_Incentive_RFTRowDeletingEvent) Is Nothing) Then
                RaiseEvent View_AMB_Incentive_RFTRowDeleting(Me, New View_AMB_Incentive_RFTRowChangeEvent(CType(e.Row,View_AMB_Incentive_RFTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveView_AMB_Incentive_RFTRow(ByVal row As View_AMB_Incentive_RFTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSAMB = New DSAMB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "View_AMB_Incentive_RFTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class View_AMb_RepairDataTable
        Inherits Global.System.Data.TypedTableBase(Of View_AMb_RepairRow)
        
        Private columnPanelDMG As Global.System.Data.DataColumn
        
        Private columnOverLap As Global.System.Data.DataColumn
        
        Private columnZigZagSeam As Global.System.Data.DataColumn
        
        Private columnWrinkle As Global.System.Data.DataColumn
        
        Private columnArtWork As Global.System.Data.DataColumn
        
        Private columnUnbondedPanels As Global.System.Data.DataColumn
        
        Private columnSingleOpenStrip As Global.System.Data.DataColumn
        
        Private columnOpenSeam As Global.System.Data.DataColumn
        
        Private columnPanelCavity As Global.System.Data.DataColumn
        
        Private columnTouching As Global.System.Data.DataColumn
        
        Private columnOtherPrintingIssue As Global.System.Data.DataColumn
        
        Private columnCoreCavity As Global.System.Data.DataColumn
        
        Private columnPUC As Global.System.Data.DataColumn
        
        Private columnSeamClosingGlue As Global.System.Data.DataColumn
        
        Private columnBGrade As Global.System.Data.DataColumn
        
        Private columnTotalChecked As Global.System.Data.DataColumn
        
        Private columnPass As Global.System.Data.DataColumn
        
        Private columnFail As Global.System.Data.DataColumn
        
        Private columnStraightCut As Global.System.Data.DataColumn
        
        Private columnCuttingResidual As Global.System.Data.DataColumn
        
        Private columnConnectionBreak As Global.System.Data.DataColumn
        
        Private columnUncureGlue As Global.System.Data.DataColumn
        
        Private columnExcessiveGlue As Global.System.Data.DataColumn
        
        Private columnOverUnderWght As Global.System.Data.DataColumn
        
        Private columnDisColor As Global.System.Data.DataColumn
        
        Private columnLogoSmearing As Global.System.Data.DataColumn
        
        Private columnLogoDoubling As Global.System.Data.DataColumn
        
        Private columnBarcodeMissing As Global.System.Data.DataColumn
        
        Private columnLargerSpots As Global.System.Data.DataColumn
        
        Private columnSmearing As Global.System.Data.DataColumn
        
        Private columnHFMissAlignment As Global.System.Data.DataColumn
        
        Private columnBlurPrinting As Global.System.Data.DataColumn
        
        Private columnRCheck As Global.System.Data.DataColumn
        
        Private columnRPass As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "View_AMb_Repair"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PanelDMGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPanelDMG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OverLapColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOverLap
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ZigZagSeamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZigZagSeam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WrinkleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWrinkle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ArtWorkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArtWork
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property UnbondedPanelsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnbondedPanels
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SingleOpenStripColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSingleOpenStrip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OpenSeamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOpenSeam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PanelCavityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPanelCavity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TouchingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTouching
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OtherPrintingIssueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOtherPrintingIssue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CoreCavityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCoreCavity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PUCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPUC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SeamClosingGlueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSeamClosingGlue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BGradeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBGrade
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TotalCheckedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalChecked
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PassColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPass
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property StraightCutColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStraightCut
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CuttingResidualColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCuttingResidual
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ConnectionBreakColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConnectionBreak
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property UncureGlueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUncureGlue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ExcessiveGlueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExcessiveGlue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OverUnderWghtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOverUnderWght
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DisColorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDisColor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LogoSmearingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogoSmearing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LogoDoublingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogoDoubling
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BarcodeMissingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBarcodeMissing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LargerSpotsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLargerSpots
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SmearingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSmearing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property HFMissAlignmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHFMissAlignment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BlurPrintingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlurPrinting
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RCheckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRCheck
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RPassColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPass
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As View_AMb_RepairRow
            Get
                Return CType(Me.Rows(index),View_AMb_RepairRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_AMb_RepairRowChanging As View_AMb_RepairRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_AMb_RepairRowChanged As View_AMb_RepairRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_AMb_RepairRowDeleting As View_AMb_RepairRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_AMb_RepairRowDeleted As View_AMb_RepairRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddView_AMb_RepairRow(ByVal row As View_AMb_RepairRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddView_AMb_RepairRow( _
                    ByVal PanelDMG As Decimal,  _
                    ByVal OverLap As Decimal,  _
                    ByVal ZigZagSeam As Decimal,  _
                    ByVal Wrinkle As Decimal,  _
                    ByVal ArtWork As Decimal,  _
                    ByVal UnbondedPanels As Decimal,  _
                    ByVal SingleOpenStrip As Decimal,  _
                    ByVal OpenSeam As Decimal,  _
                    ByVal PanelCavity As Decimal,  _
                    ByVal Touching As Decimal,  _
                    ByVal OtherPrintingIssue As Decimal,  _
                    ByVal CoreCavity As Decimal,  _
                    ByVal PUC As Decimal,  _
                    ByVal SeamClosingGlue As Decimal,  _
                    ByVal BGrade As Decimal,  _
                    ByVal TotalChecked As Decimal,  _
                    ByVal Pass As Decimal,  _
                    ByVal Fail As Decimal,  _
                    ByVal StraightCut As Decimal,  _
                    ByVal CuttingResidual As Decimal,  _
                    ByVal ConnectionBreak As Decimal,  _
                    ByVal UncureGlue As Decimal,  _
                    ByVal ExcessiveGlue As Decimal,  _
                    ByVal OverUnderWght As Decimal,  _
                    ByVal DisColor As Decimal,  _
                    ByVal LogoSmearing As Decimal,  _
                    ByVal LogoDoubling As Decimal,  _
                    ByVal BarcodeMissing As Decimal,  _
                    ByVal LargerSpots As Decimal,  _
                    ByVal Smearing As Decimal,  _
                    ByVal HFMissAlignment As Decimal,  _
                    ByVal BlurPrinting As Decimal,  _
                    ByVal RCheck As Decimal,  _
                    ByVal RPass As Decimal) As View_AMb_RepairRow
            Dim rowView_AMb_RepairRow As View_AMb_RepairRow = CType(Me.NewRow,View_AMb_RepairRow)
            Dim columnValuesArray() As Object = New Object() {PanelDMG, OverLap, ZigZagSeam, Wrinkle, ArtWork, UnbondedPanels, SingleOpenStrip, OpenSeam, PanelCavity, Touching, OtherPrintingIssue, CoreCavity, PUC, SeamClosingGlue, BGrade, TotalChecked, Pass, Fail, StraightCut, CuttingResidual, ConnectionBreak, UncureGlue, ExcessiveGlue, OverUnderWght, DisColor, LogoSmearing, LogoDoubling, BarcodeMissing, LargerSpots, Smearing, HFMissAlignment, BlurPrinting, RCheck, RPass}
            rowView_AMb_RepairRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowView_AMb_RepairRow)
            Return rowView_AMb_RepairRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As View_AMb_RepairDataTable = CType(MyBase.Clone,View_AMb_RepairDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New View_AMb_RepairDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPanelDMG = MyBase.Columns("PanelDMG")
            Me.columnOverLap = MyBase.Columns("OverLap")
            Me.columnZigZagSeam = MyBase.Columns("ZigZagSeam")
            Me.columnWrinkle = MyBase.Columns("Wrinkle")
            Me.columnArtWork = MyBase.Columns("ArtWork")
            Me.columnUnbondedPanels = MyBase.Columns("UnbondedPanels")
            Me.columnSingleOpenStrip = MyBase.Columns("SingleOpenStrip")
            Me.columnOpenSeam = MyBase.Columns("OpenSeam")
            Me.columnPanelCavity = MyBase.Columns("PanelCavity")
            Me.columnTouching = MyBase.Columns("Touching")
            Me.columnOtherPrintingIssue = MyBase.Columns("OtherPrintingIssue")
            Me.columnCoreCavity = MyBase.Columns("CoreCavity")
            Me.columnPUC = MyBase.Columns("PUC")
            Me.columnSeamClosingGlue = MyBase.Columns("SeamClosingGlue")
            Me.columnBGrade = MyBase.Columns("BGrade")
            Me.columnTotalChecked = MyBase.Columns("TotalChecked")
            Me.columnPass = MyBase.Columns("Pass")
            Me.columnFail = MyBase.Columns("Fail")
            Me.columnStraightCut = MyBase.Columns("StraightCut")
            Me.columnCuttingResidual = MyBase.Columns("CuttingResidual")
            Me.columnConnectionBreak = MyBase.Columns("ConnectionBreak")
            Me.columnUncureGlue = MyBase.Columns("UncureGlue")
            Me.columnExcessiveGlue = MyBase.Columns("ExcessiveGlue")
            Me.columnOverUnderWght = MyBase.Columns("OverUnderWght")
            Me.columnDisColor = MyBase.Columns("DisColor")
            Me.columnLogoSmearing = MyBase.Columns("LogoSmearing")
            Me.columnLogoDoubling = MyBase.Columns("LogoDoubling")
            Me.columnBarcodeMissing = MyBase.Columns("BarcodeMissing")
            Me.columnLargerSpots = MyBase.Columns("LargerSpots")
            Me.columnSmearing = MyBase.Columns("Smearing")
            Me.columnHFMissAlignment = MyBase.Columns("HFMissAlignment")
            Me.columnBlurPrinting = MyBase.Columns("BlurPrinting")
            Me.columnRCheck = MyBase.Columns("RCheck")
            Me.columnRPass = MyBase.Columns("RPass")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPanelDMG = New Global.System.Data.DataColumn("PanelDMG", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPanelDMG)
            Me.columnOverLap = New Global.System.Data.DataColumn("OverLap", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOverLap)
            Me.columnZigZagSeam = New Global.System.Data.DataColumn("ZigZagSeam", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZigZagSeam)
            Me.columnWrinkle = New Global.System.Data.DataColumn("Wrinkle", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWrinkle)
            Me.columnArtWork = New Global.System.Data.DataColumn("ArtWork", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArtWork)
            Me.columnUnbondedPanels = New Global.System.Data.DataColumn("UnbondedPanels", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnbondedPanels)
            Me.columnSingleOpenStrip = New Global.System.Data.DataColumn("SingleOpenStrip", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSingleOpenStrip)
            Me.columnOpenSeam = New Global.System.Data.DataColumn("OpenSeam", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOpenSeam)
            Me.columnPanelCavity = New Global.System.Data.DataColumn("PanelCavity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPanelCavity)
            Me.columnTouching = New Global.System.Data.DataColumn("Touching", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTouching)
            Me.columnOtherPrintingIssue = New Global.System.Data.DataColumn("OtherPrintingIssue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOtherPrintingIssue)
            Me.columnCoreCavity = New Global.System.Data.DataColumn("CoreCavity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCoreCavity)
            Me.columnPUC = New Global.System.Data.DataColumn("PUC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPUC)
            Me.columnSeamClosingGlue = New Global.System.Data.DataColumn("SeamClosingGlue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSeamClosingGlue)
            Me.columnBGrade = New Global.System.Data.DataColumn("BGrade", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBGrade)
            Me.columnTotalChecked = New Global.System.Data.DataColumn("TotalChecked", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalChecked)
            Me.columnPass = New Global.System.Data.DataColumn("Pass", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPass)
            Me.columnFail = New Global.System.Data.DataColumn("Fail", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFail)
            Me.columnStraightCut = New Global.System.Data.DataColumn("StraightCut", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStraightCut)
            Me.columnCuttingResidual = New Global.System.Data.DataColumn("CuttingResidual", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCuttingResidual)
            Me.columnConnectionBreak = New Global.System.Data.DataColumn("ConnectionBreak", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConnectionBreak)
            Me.columnUncureGlue = New Global.System.Data.DataColumn("UncureGlue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUncureGlue)
            Me.columnExcessiveGlue = New Global.System.Data.DataColumn("ExcessiveGlue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExcessiveGlue)
            Me.columnOverUnderWght = New Global.System.Data.DataColumn("OverUnderWght", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOverUnderWght)
            Me.columnDisColor = New Global.System.Data.DataColumn("DisColor", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDisColor)
            Me.columnLogoSmearing = New Global.System.Data.DataColumn("LogoSmearing", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogoSmearing)
            Me.columnLogoDoubling = New Global.System.Data.DataColumn("LogoDoubling", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogoDoubling)
            Me.columnBarcodeMissing = New Global.System.Data.DataColumn("BarcodeMissing", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBarcodeMissing)
            Me.columnLargerSpots = New Global.System.Data.DataColumn("LargerSpots", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLargerSpots)
            Me.columnSmearing = New Global.System.Data.DataColumn("Smearing", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSmearing)
            Me.columnHFMissAlignment = New Global.System.Data.DataColumn("HFMissAlignment", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHFMissAlignment)
            Me.columnBlurPrinting = New Global.System.Data.DataColumn("BlurPrinting", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlurPrinting)
            Me.columnRCheck = New Global.System.Data.DataColumn("RCheck", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRCheck)
            Me.columnRPass = New Global.System.Data.DataColumn("RPass", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPass)
            Me.columnDisColor.ReadOnly = true
            Me.columnLogoSmearing.ReadOnly = true
            Me.columnLogoDoubling.ReadOnly = true
            Me.columnBarcodeMissing.ReadOnly = true
            Me.columnLargerSpots.ReadOnly = true
            Me.columnSmearing.ReadOnly = true
            Me.columnHFMissAlignment.ReadOnly = true
            Me.columnBlurPrinting.ReadOnly = true
            Me.columnRCheck.ReadOnly = true
            Me.columnRPass.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewView_AMb_RepairRow() As View_AMb_RepairRow
            Return CType(Me.NewRow,View_AMb_RepairRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New View_AMb_RepairRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(View_AMb_RepairRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.View_AMb_RepairRowChangedEvent) Is Nothing) Then
                RaiseEvent View_AMb_RepairRowChanged(Me, New View_AMb_RepairRowChangeEvent(CType(e.Row,View_AMb_RepairRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.View_AMb_RepairRowChangingEvent) Is Nothing) Then
                RaiseEvent View_AMb_RepairRowChanging(Me, New View_AMb_RepairRowChangeEvent(CType(e.Row,View_AMb_RepairRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.View_AMb_RepairRowDeletedEvent) Is Nothing) Then
                RaiseEvent View_AMb_RepairRowDeleted(Me, New View_AMb_RepairRowChangeEvent(CType(e.Row,View_AMb_RepairRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.View_AMb_RepairRowDeletingEvent) Is Nothing) Then
                RaiseEvent View_AMb_RepairRowDeleting(Me, New View_AMb_RepairRowChangeEvent(CType(e.Row,View_AMb_RepairRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveView_AMb_RepairRow(ByVal row As View_AMb_RepairRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSAMB = New DSAMB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "View_AMb_RepairDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class View_AMb_RepairPAssDataTable
        Inherits Global.System.Data.TypedTableBase(Of View_AMb_RepairPAssRow)
        
        Private columnPanelDMG As Global.System.Data.DataColumn
        
        Private columnOverLap As Global.System.Data.DataColumn
        
        Private columnZigZagSeam As Global.System.Data.DataColumn
        
        Private columnWrinkle As Global.System.Data.DataColumn
        
        Private columnArtWork As Global.System.Data.DataColumn
        
        Private columnUnbondedPanels As Global.System.Data.DataColumn
        
        Private columnSingleOpenStrip As Global.System.Data.DataColumn
        
        Private columnOpenSeam As Global.System.Data.DataColumn
        
        Private columnPanelCavity As Global.System.Data.DataColumn
        
        Private columnTouching As Global.System.Data.DataColumn
        
        Private columnOtherPrintingIssue As Global.System.Data.DataColumn
        
        Private columnCoreCavity As Global.System.Data.DataColumn
        
        Private columnPUC As Global.System.Data.DataColumn
        
        Private columnSeamClosingGlue As Global.System.Data.DataColumn
        
        Private columnBGrade As Global.System.Data.DataColumn
        
        Private columnTotalChecked As Global.System.Data.DataColumn
        
        Private columnPass As Global.System.Data.DataColumn
        
        Private columnFail As Global.System.Data.DataColumn
        
        Private columnStraightCut As Global.System.Data.DataColumn
        
        Private columnCuttingResidual As Global.System.Data.DataColumn
        
        Private columnConnectionBreak As Global.System.Data.DataColumn
        
        Private columnUncureGlue As Global.System.Data.DataColumn
        
        Private columnExcessiveGlue As Global.System.Data.DataColumn
        
        Private columnOverUnderWght As Global.System.Data.DataColumn
        
        Private columnDisColor As Global.System.Data.DataColumn
        
        Private columnLogoSmearing As Global.System.Data.DataColumn
        
        Private columnLogoDoubling As Global.System.Data.DataColumn
        
        Private columnBarcodeMissing As Global.System.Data.DataColumn
        
        Private columnLargerSpots As Global.System.Data.DataColumn
        
        Private columnSmearing As Global.System.Data.DataColumn
        
        Private columnHFMissAlignment As Global.System.Data.DataColumn
        
        Private columnBlurPrinting As Global.System.Data.DataColumn
        
        Private columnRCheck As Global.System.Data.DataColumn
        
        Private columnRPass As Global.System.Data.DataColumn
        
        Private columnunevenBallSurface As Global.System.Data.DataColumn
        
        Private columnunshapecut As Global.System.Data.DataColumn
        
        Private columncuttingpanel As Global.System.Data.DataColumn
        
        Private columnzigzagedge As Global.System.Data.DataColumn
        
        Private columnheavyprintdefects As Global.System.Data.DataColumn
        
        Private columnNewTouching As Global.System.Data.DataColumn
        
        Private columnprintmissallignament As Global.System.Data.DataColumn
        
        Private columnanymisprint As Global.System.Data.DataColumn
        
        Private columncolourShape As Global.System.Data.DataColumn
        
        Private columnwrongartwork As Global.System.Data.DataColumn
        
        Private columnmaterialdefects As Global.System.Data.DataColumn
        
        Private columnnewopenSeam As Global.System.Data.DataColumn
        
        Private columnseamoverlapping As Global.System.Data.DataColumn
        
        Private columnwrinkles As Global.System.Data.DataColumn
        
        Private columnexcussglue As Global.System.Data.DataColumn
        
        Private columnmissingglue As Global.System.Data.DataColumn
        
        Private columnpressoremark As Global.System.Data.DataColumn
        
        Private columnairbubble As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "View_AMb_RepairPAss"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PanelDMGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPanelDMG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OverLapColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOverLap
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ZigZagSeamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZigZagSeam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WrinkleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWrinkle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ArtWorkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArtWork
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property UnbondedPanelsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnbondedPanels
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SingleOpenStripColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSingleOpenStrip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OpenSeamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOpenSeam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PanelCavityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPanelCavity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TouchingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTouching
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OtherPrintingIssueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOtherPrintingIssue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CoreCavityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCoreCavity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PUCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPUC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SeamClosingGlueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSeamClosingGlue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BGradeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBGrade
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TotalCheckedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalChecked
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PassColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPass
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property StraightCutColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStraightCut
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CuttingResidualColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCuttingResidual
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ConnectionBreakColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConnectionBreak
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property UncureGlueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUncureGlue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ExcessiveGlueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExcessiveGlue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OverUnderWghtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOverUnderWght
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DisColorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDisColor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LogoSmearingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogoSmearing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LogoDoublingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogoDoubling
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BarcodeMissingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBarcodeMissing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LargerSpotsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLargerSpots
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SmearingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSmearing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property HFMissAlignmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHFMissAlignment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BlurPrintingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlurPrinting
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RCheckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRCheck
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RPassColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPass
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property unevenBallSurfaceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnunevenBallSurface
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property unshapecutColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnunshapecut
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property cuttingpanelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncuttingpanel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property zigzagedgeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnzigzagedge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property heavyprintdefectsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnheavyprintdefects
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NewTouchingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNewTouching
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property printmissallignamentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprintmissallignament
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property anymisprintColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnanymisprint
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property colourShapeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncolourShape
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property wrongartworkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwrongartwork
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property materialdefectsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmaterialdefects
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property newopenSeamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnewopenSeam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property seamoverlappingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnseamoverlapping
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property wrinklesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwrinkles
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property excussglueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnexcussglue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property missingglueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmissingglue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property pressoremarkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpressoremark
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property airbubbleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnairbubble
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As View_AMb_RepairPAssRow
            Get
                Return CType(Me.Rows(index),View_AMb_RepairPAssRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_AMb_RepairPAssRowChanging As View_AMb_RepairPAssRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_AMb_RepairPAssRowChanged As View_AMb_RepairPAssRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_AMb_RepairPAssRowDeleting As View_AMb_RepairPAssRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_AMb_RepairPAssRowDeleted As View_AMb_RepairPAssRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddView_AMb_RepairPAssRow(ByVal row As View_AMb_RepairPAssRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddView_AMb_RepairPAssRow( _
                    ByVal PanelDMG As Decimal,  _
                    ByVal OverLap As Decimal,  _
                    ByVal ZigZagSeam As Decimal,  _
                    ByVal Wrinkle As Decimal,  _
                    ByVal ArtWork As Decimal,  _
                    ByVal UnbondedPanels As Decimal,  _
                    ByVal SingleOpenStrip As Decimal,  _
                    ByVal OpenSeam As Decimal,  _
                    ByVal PanelCavity As Decimal,  _
                    ByVal Touching As Decimal,  _
                    ByVal OtherPrintingIssue As Decimal,  _
                    ByVal CoreCavity As Decimal,  _
                    ByVal PUC As Decimal,  _
                    ByVal SeamClosingGlue As Decimal,  _
                    ByVal BGrade As Decimal,  _
                    ByVal TotalChecked As Decimal,  _
                    ByVal Pass As Decimal,  _
                    ByVal Fail As Decimal,  _
                    ByVal StraightCut As Decimal,  _
                    ByVal CuttingResidual As Decimal,  _
                    ByVal ConnectionBreak As Decimal,  _
                    ByVal UncureGlue As Decimal,  _
                    ByVal ExcessiveGlue As Decimal,  _
                    ByVal OverUnderWght As Decimal,  _
                    ByVal DisColor As Decimal,  _
                    ByVal LogoSmearing As Decimal,  _
                    ByVal LogoDoubling As Decimal,  _
                    ByVal BarcodeMissing As Decimal,  _
                    ByVal LargerSpots As Decimal,  _
                    ByVal Smearing As Decimal,  _
                    ByVal HFMissAlignment As Decimal,  _
                    ByVal BlurPrinting As Decimal,  _
                    ByVal RCheck As Decimal,  _
                    ByVal RPass As Decimal,  _
                    ByVal unevenBallSurface As Decimal,  _
                    ByVal unshapecut As Decimal,  _
                    ByVal cuttingpanel As Decimal,  _
                    ByVal zigzagedge As Decimal,  _
                    ByVal heavyprintdefects As Decimal,  _
                    ByVal NewTouching As Decimal,  _
                    ByVal printmissallignament As Decimal,  _
                    ByVal anymisprint As Decimal,  _
                    ByVal colourShape As Decimal,  _
                    ByVal wrongartwork As Decimal,  _
                    ByVal materialdefects As Decimal,  _
                    ByVal newopenSeam As Decimal,  _
                    ByVal seamoverlapping As Decimal,  _
                    ByVal wrinkles As Decimal,  _
                    ByVal excussglue As Decimal,  _
                    ByVal missingglue As Decimal,  _
                    ByVal pressoremark As Decimal,  _
                    ByVal airbubble As Decimal) As View_AMb_RepairPAssRow
            Dim rowView_AMb_RepairPAssRow As View_AMb_RepairPAssRow = CType(Me.NewRow,View_AMb_RepairPAssRow)
            Dim columnValuesArray() As Object = New Object() {PanelDMG, OverLap, ZigZagSeam, Wrinkle, ArtWork, UnbondedPanels, SingleOpenStrip, OpenSeam, PanelCavity, Touching, OtherPrintingIssue, CoreCavity, PUC, SeamClosingGlue, BGrade, TotalChecked, Pass, Fail, StraightCut, CuttingResidual, ConnectionBreak, UncureGlue, ExcessiveGlue, OverUnderWght, DisColor, LogoSmearing, LogoDoubling, BarcodeMissing, LargerSpots, Smearing, HFMissAlignment, BlurPrinting, RCheck, RPass, unevenBallSurface, unshapecut, cuttingpanel, zigzagedge, heavyprintdefects, NewTouching, printmissallignament, anymisprint, colourShape, wrongartwork, materialdefects, newopenSeam, seamoverlapping, wrinkles, excussglue, missingglue, pressoremark, airbubble}
            rowView_AMb_RepairPAssRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowView_AMb_RepairPAssRow)
            Return rowView_AMb_RepairPAssRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As View_AMb_RepairPAssDataTable = CType(MyBase.Clone,View_AMb_RepairPAssDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New View_AMb_RepairPAssDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPanelDMG = MyBase.Columns("PanelDMG")
            Me.columnOverLap = MyBase.Columns("OverLap")
            Me.columnZigZagSeam = MyBase.Columns("ZigZagSeam")
            Me.columnWrinkle = MyBase.Columns("Wrinkle")
            Me.columnArtWork = MyBase.Columns("ArtWork")
            Me.columnUnbondedPanels = MyBase.Columns("UnbondedPanels")
            Me.columnSingleOpenStrip = MyBase.Columns("SingleOpenStrip")
            Me.columnOpenSeam = MyBase.Columns("OpenSeam")
            Me.columnPanelCavity = MyBase.Columns("PanelCavity")
            Me.columnTouching = MyBase.Columns("Touching")
            Me.columnOtherPrintingIssue = MyBase.Columns("OtherPrintingIssue")
            Me.columnCoreCavity = MyBase.Columns("CoreCavity")
            Me.columnPUC = MyBase.Columns("PUC")
            Me.columnSeamClosingGlue = MyBase.Columns("SeamClosingGlue")
            Me.columnBGrade = MyBase.Columns("BGrade")
            Me.columnTotalChecked = MyBase.Columns("TotalChecked")
            Me.columnPass = MyBase.Columns("Pass")
            Me.columnFail = MyBase.Columns("Fail")
            Me.columnStraightCut = MyBase.Columns("StraightCut")
            Me.columnCuttingResidual = MyBase.Columns("CuttingResidual")
            Me.columnConnectionBreak = MyBase.Columns("ConnectionBreak")
            Me.columnUncureGlue = MyBase.Columns("UncureGlue")
            Me.columnExcessiveGlue = MyBase.Columns("ExcessiveGlue")
            Me.columnOverUnderWght = MyBase.Columns("OverUnderWght")
            Me.columnDisColor = MyBase.Columns("DisColor")
            Me.columnLogoSmearing = MyBase.Columns("LogoSmearing")
            Me.columnLogoDoubling = MyBase.Columns("LogoDoubling")
            Me.columnBarcodeMissing = MyBase.Columns("BarcodeMissing")
            Me.columnLargerSpots = MyBase.Columns("LargerSpots")
            Me.columnSmearing = MyBase.Columns("Smearing")
            Me.columnHFMissAlignment = MyBase.Columns("HFMissAlignment")
            Me.columnBlurPrinting = MyBase.Columns("BlurPrinting")
            Me.columnRCheck = MyBase.Columns("RCheck")
            Me.columnRPass = MyBase.Columns("RPass")
            Me.columnunevenBallSurface = MyBase.Columns("unevenBallSurface")
            Me.columnunshapecut = MyBase.Columns("unshapecut")
            Me.columncuttingpanel = MyBase.Columns("cuttingpanel")
            Me.columnzigzagedge = MyBase.Columns("zigzagedge")
            Me.columnheavyprintdefects = MyBase.Columns("heavyprintdefects")
            Me.columnNewTouching = MyBase.Columns("NewTouching")
            Me.columnprintmissallignament = MyBase.Columns("printmissallignament")
            Me.columnanymisprint = MyBase.Columns("anymisprint")
            Me.columncolourShape = MyBase.Columns("colourShape")
            Me.columnwrongartwork = MyBase.Columns("wrongartwork")
            Me.columnmaterialdefects = MyBase.Columns("materialdefects")
            Me.columnnewopenSeam = MyBase.Columns("newopenSeam")
            Me.columnseamoverlapping = MyBase.Columns("seamoverlapping")
            Me.columnwrinkles = MyBase.Columns("wrinkles")
            Me.columnexcussglue = MyBase.Columns("excussglue")
            Me.columnmissingglue = MyBase.Columns("missingglue")
            Me.columnpressoremark = MyBase.Columns("pressoremark")
            Me.columnairbubble = MyBase.Columns("airbubble")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPanelDMG = New Global.System.Data.DataColumn("PanelDMG", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPanelDMG)
            Me.columnOverLap = New Global.System.Data.DataColumn("OverLap", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOverLap)
            Me.columnZigZagSeam = New Global.System.Data.DataColumn("ZigZagSeam", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZigZagSeam)
            Me.columnWrinkle = New Global.System.Data.DataColumn("Wrinkle", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWrinkle)
            Me.columnArtWork = New Global.System.Data.DataColumn("ArtWork", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArtWork)
            Me.columnUnbondedPanels = New Global.System.Data.DataColumn("UnbondedPanels", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnbondedPanels)
            Me.columnSingleOpenStrip = New Global.System.Data.DataColumn("SingleOpenStrip", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSingleOpenStrip)
            Me.columnOpenSeam = New Global.System.Data.DataColumn("OpenSeam", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOpenSeam)
            Me.columnPanelCavity = New Global.System.Data.DataColumn("PanelCavity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPanelCavity)
            Me.columnTouching = New Global.System.Data.DataColumn("Touching", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTouching)
            Me.columnOtherPrintingIssue = New Global.System.Data.DataColumn("OtherPrintingIssue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOtherPrintingIssue)
            Me.columnCoreCavity = New Global.System.Data.DataColumn("CoreCavity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCoreCavity)
            Me.columnPUC = New Global.System.Data.DataColumn("PUC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPUC)
            Me.columnSeamClosingGlue = New Global.System.Data.DataColumn("SeamClosingGlue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSeamClosingGlue)
            Me.columnBGrade = New Global.System.Data.DataColumn("BGrade", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBGrade)
            Me.columnTotalChecked = New Global.System.Data.DataColumn("TotalChecked", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalChecked)
            Me.columnPass = New Global.System.Data.DataColumn("Pass", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPass)
            Me.columnFail = New Global.System.Data.DataColumn("Fail", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFail)
            Me.columnStraightCut = New Global.System.Data.DataColumn("StraightCut", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStraightCut)
            Me.columnCuttingResidual = New Global.System.Data.DataColumn("CuttingResidual", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCuttingResidual)
            Me.columnConnectionBreak = New Global.System.Data.DataColumn("ConnectionBreak", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConnectionBreak)
            Me.columnUncureGlue = New Global.System.Data.DataColumn("UncureGlue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUncureGlue)
            Me.columnExcessiveGlue = New Global.System.Data.DataColumn("ExcessiveGlue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExcessiveGlue)
            Me.columnOverUnderWght = New Global.System.Data.DataColumn("OverUnderWght", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOverUnderWght)
            Me.columnDisColor = New Global.System.Data.DataColumn("DisColor", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDisColor)
            Me.columnLogoSmearing = New Global.System.Data.DataColumn("LogoSmearing", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogoSmearing)
            Me.columnLogoDoubling = New Global.System.Data.DataColumn("LogoDoubling", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogoDoubling)
            Me.columnBarcodeMissing = New Global.System.Data.DataColumn("BarcodeMissing", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBarcodeMissing)
            Me.columnLargerSpots = New Global.System.Data.DataColumn("LargerSpots", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLargerSpots)
            Me.columnSmearing = New Global.System.Data.DataColumn("Smearing", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSmearing)
            Me.columnHFMissAlignment = New Global.System.Data.DataColumn("HFMissAlignment", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHFMissAlignment)
            Me.columnBlurPrinting = New Global.System.Data.DataColumn("BlurPrinting", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlurPrinting)
            Me.columnRCheck = New Global.System.Data.DataColumn("RCheck", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRCheck)
            Me.columnRPass = New Global.System.Data.DataColumn("RPass", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPass)
            Me.columnunevenBallSurface = New Global.System.Data.DataColumn("unevenBallSurface", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnunevenBallSurface)
            Me.columnunshapecut = New Global.System.Data.DataColumn("unshapecut", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnunshapecut)
            Me.columncuttingpanel = New Global.System.Data.DataColumn("cuttingpanel", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncuttingpanel)
            Me.columnzigzagedge = New Global.System.Data.DataColumn("zigzagedge", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnzigzagedge)
            Me.columnheavyprintdefects = New Global.System.Data.DataColumn("heavyprintdefects", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnheavyprintdefects)
            Me.columnNewTouching = New Global.System.Data.DataColumn("NewTouching", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNewTouching)
            Me.columnprintmissallignament = New Global.System.Data.DataColumn("printmissallignament", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprintmissallignament)
            Me.columnanymisprint = New Global.System.Data.DataColumn("anymisprint", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnanymisprint)
            Me.columncolourShape = New Global.System.Data.DataColumn("colourShape", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncolourShape)
            Me.columnwrongartwork = New Global.System.Data.DataColumn("wrongartwork", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwrongartwork)
            Me.columnmaterialdefects = New Global.System.Data.DataColumn("materialdefects", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaterialdefects)
            Me.columnnewopenSeam = New Global.System.Data.DataColumn("newopenSeam", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnewopenSeam)
            Me.columnseamoverlapping = New Global.System.Data.DataColumn("seamoverlapping", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnseamoverlapping)
            Me.columnwrinkles = New Global.System.Data.DataColumn("wrinkles", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwrinkles)
            Me.columnexcussglue = New Global.System.Data.DataColumn("excussglue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexcussglue)
            Me.columnmissingglue = New Global.System.Data.DataColumn("missingglue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmissingglue)
            Me.columnpressoremark = New Global.System.Data.DataColumn("pressoremark", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpressoremark)
            Me.columnairbubble = New Global.System.Data.DataColumn("airbubble", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnairbubble)
            Me.columnDisColor.ReadOnly = true
            Me.columnLogoSmearing.ReadOnly = true
            Me.columnLogoDoubling.ReadOnly = true
            Me.columnBarcodeMissing.ReadOnly = true
            Me.columnLargerSpots.ReadOnly = true
            Me.columnSmearing.ReadOnly = true
            Me.columnHFMissAlignment.ReadOnly = true
            Me.columnBlurPrinting.ReadOnly = true
            Me.columnRCheck.ReadOnly = true
            Me.columnRPass.ReadOnly = true
            Me.columnunevenBallSurface.ReadOnly = true
            Me.columnunshapecut.ReadOnly = true
            Me.columncuttingpanel.ReadOnly = true
            Me.columnzigzagedge.ReadOnly = true
            Me.columnheavyprintdefects.ReadOnly = true
            Me.columnNewTouching.ReadOnly = true
            Me.columnprintmissallignament.ReadOnly = true
            Me.columnanymisprint.ReadOnly = true
            Me.columncolourShape.ReadOnly = true
            Me.columnwrongartwork.ReadOnly = true
            Me.columnmaterialdefects.ReadOnly = true
            Me.columnnewopenSeam.ReadOnly = true
            Me.columnseamoverlapping.ReadOnly = true
            Me.columnwrinkles.ReadOnly = true
            Me.columnexcussglue.ReadOnly = true
            Me.columnmissingglue.ReadOnly = true
            Me.columnpressoremark.ReadOnly = true
            Me.columnairbubble.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewView_AMb_RepairPAssRow() As View_AMb_RepairPAssRow
            Return CType(Me.NewRow,View_AMb_RepairPAssRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New View_AMb_RepairPAssRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(View_AMb_RepairPAssRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.View_AMb_RepairPAssRowChangedEvent) Is Nothing) Then
                RaiseEvent View_AMb_RepairPAssRowChanged(Me, New View_AMb_RepairPAssRowChangeEvent(CType(e.Row,View_AMb_RepairPAssRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.View_AMb_RepairPAssRowChangingEvent) Is Nothing) Then
                RaiseEvent View_AMb_RepairPAssRowChanging(Me, New View_AMb_RepairPAssRowChangeEvent(CType(e.Row,View_AMb_RepairPAssRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.View_AMb_RepairPAssRowDeletedEvent) Is Nothing) Then
                RaiseEvent View_AMb_RepairPAssRowDeleted(Me, New View_AMb_RepairPAssRowChangeEvent(CType(e.Row,View_AMb_RepairPAssRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.View_AMb_RepairPAssRowDeletingEvent) Is Nothing) Then
                RaiseEvent View_AMb_RepairPAssRowDeleting(Me, New View_AMb_RepairPAssRowChangeEvent(CType(e.Row,View_AMb_RepairPAssRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveView_AMb_RepairPAssRow(ByVal row As View_AMb_RepairPAssRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSAMB = New DSAMB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "View_AMb_RepairPAssDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Froming_HourllyDataTable
        Inherits Global.System.Data.TypedTableBase(Of Froming_HourllyRow)
        
        Private columnChecked As Global.System.Data.DataColumn
        
        Private columnPass As Global.System.Data.DataColumn
        
        Private columnFail As Global.System.Data.DataColumn
        
        Private columnHourName As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Froming_Hourlly"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CheckedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChecked
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PassColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPass
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property HourNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHourName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Froming_HourllyRow
            Get
                Return CType(Me.Rows(index),Froming_HourllyRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event Froming_HourllyRowChanging As Froming_HourllyRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event Froming_HourllyRowChanged As Froming_HourllyRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event Froming_HourllyRowDeleting As Froming_HourllyRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event Froming_HourllyRowDeleted As Froming_HourllyRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddFroming_HourllyRow(ByVal row As Froming_HourllyRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddFroming_HourllyRow(ByVal Checked As Decimal, ByVal Pass As Decimal, ByVal Fail As Decimal, ByVal HourName As String) As Froming_HourllyRow
            Dim rowFroming_HourllyRow As Froming_HourllyRow = CType(Me.NewRow,Froming_HourllyRow)
            Dim columnValuesArray() As Object = New Object() {Checked, Pass, Fail, HourName}
            rowFroming_HourllyRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFroming_HourllyRow)
            Return rowFroming_HourllyRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Froming_HourllyDataTable = CType(MyBase.Clone,Froming_HourllyDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Froming_HourllyDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnChecked = MyBase.Columns("Checked")
            Me.columnPass = MyBase.Columns("Pass")
            Me.columnFail = MyBase.Columns("Fail")
            Me.columnHourName = MyBase.Columns("HourName")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnChecked = New Global.System.Data.DataColumn("Checked", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChecked)
            Me.columnPass = New Global.System.Data.DataColumn("Pass", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPass)
            Me.columnFail = New Global.System.Data.DataColumn("Fail", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFail)
            Me.columnHourName = New Global.System.Data.DataColumn("HourName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHourName)
            Me.columnChecked.ReadOnly = true
            Me.columnPass.ReadOnly = true
            Me.columnFail.ReadOnly = true
            Me.columnHourName.MaxLength = 1050
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewFroming_HourllyRow() As Froming_HourllyRow
            Return CType(Me.NewRow,Froming_HourllyRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Froming_HourllyRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Froming_HourllyRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Froming_HourllyRowChangedEvent) Is Nothing) Then
                RaiseEvent Froming_HourllyRowChanged(Me, New Froming_HourllyRowChangeEvent(CType(e.Row,Froming_HourllyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Froming_HourllyRowChangingEvent) Is Nothing) Then
                RaiseEvent Froming_HourllyRowChanging(Me, New Froming_HourllyRowChangeEvent(CType(e.Row,Froming_HourllyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Froming_HourllyRowDeletedEvent) Is Nothing) Then
                RaiseEvent Froming_HourllyRowDeleted(Me, New Froming_HourllyRowChangeEvent(CType(e.Row,Froming_HourllyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Froming_HourllyRowDeletingEvent) Is Nothing) Then
                RaiseEvent Froming_HourllyRowDeleting(Me, New Froming_HourllyRowChangeEvent(CType(e.Row,Froming_HourllyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveFroming_HourllyRow(ByVal row As Froming_HourllyRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSAMB = New DSAMB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Froming_HourllyDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class View_Repair_QtyDataTable
        Inherits Global.System.Data.TypedTableBase(Of View_Repair_QtyRow)
        
        Private columnRCheck As Global.System.Data.DataColumn
        
        Private columnRPass As Global.System.Data.DataColumn
        
        Private columnRFail As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "View_Repair_Qty"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RCheckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRCheck
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RPassColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPass
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RFailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRFail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As View_Repair_QtyRow
            Get
                Return CType(Me.Rows(index),View_Repair_QtyRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_Repair_QtyRowChanging As View_Repair_QtyRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_Repair_QtyRowChanged As View_Repair_QtyRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_Repair_QtyRowDeleting As View_Repair_QtyRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_Repair_QtyRowDeleted As View_Repair_QtyRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddView_Repair_QtyRow(ByVal row As View_Repair_QtyRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddView_Repair_QtyRow(ByVal RCheck As Decimal, ByVal RPass As Decimal, ByVal RFail As Decimal) As View_Repair_QtyRow
            Dim rowView_Repair_QtyRow As View_Repair_QtyRow = CType(Me.NewRow,View_Repair_QtyRow)
            Dim columnValuesArray() As Object = New Object() {RCheck, RPass, RFail}
            rowView_Repair_QtyRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowView_Repair_QtyRow)
            Return rowView_Repair_QtyRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As View_Repair_QtyDataTable = CType(MyBase.Clone,View_Repair_QtyDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New View_Repair_QtyDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRCheck = MyBase.Columns("RCheck")
            Me.columnRPass = MyBase.Columns("RPass")
            Me.columnRFail = MyBase.Columns("RFail")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRCheck = New Global.System.Data.DataColumn("RCheck", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRCheck)
            Me.columnRPass = New Global.System.Data.DataColumn("RPass", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPass)
            Me.columnRFail = New Global.System.Data.DataColumn("RFail", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRFail)
            Me.columnRCheck.ReadOnly = true
            Me.columnRPass.ReadOnly = true
            Me.columnRFail.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewView_Repair_QtyRow() As View_Repair_QtyRow
            Return CType(Me.NewRow,View_Repair_QtyRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New View_Repair_QtyRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(View_Repair_QtyRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.View_Repair_QtyRowChangedEvent) Is Nothing) Then
                RaiseEvent View_Repair_QtyRowChanged(Me, New View_Repair_QtyRowChangeEvent(CType(e.Row,View_Repair_QtyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.View_Repair_QtyRowChangingEvent) Is Nothing) Then
                RaiseEvent View_Repair_QtyRowChanging(Me, New View_Repair_QtyRowChangeEvent(CType(e.Row,View_Repair_QtyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.View_Repair_QtyRowDeletedEvent) Is Nothing) Then
                RaiseEvent View_Repair_QtyRowDeleted(Me, New View_Repair_QtyRowChangeEvent(CType(e.Row,View_Repair_QtyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.View_Repair_QtyRowDeletingEvent) Is Nothing) Then
                RaiseEvent View_Repair_QtyRowDeleting(Me, New View_Repair_QtyRowChangeEvent(CType(e.Row,View_Repair_QtyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveView_Repair_QtyRow(ByVal row As View_Repair_QtyRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSAMB = New DSAMB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "View_Repair_QtyDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class View_Article_Wise_FailDataTable
        Inherits Global.System.Data.TypedTableBase(Of View_Article_Wise_FailRow)
        
        Private columnPanelDMG As Global.System.Data.DataColumn
        
        Private columnOverLap As Global.System.Data.DataColumn
        
        Private columnZigZagSeam As Global.System.Data.DataColumn
        
        Private columnWrinkle As Global.System.Data.DataColumn
        
        Private columnArtWork As Global.System.Data.DataColumn
        
        Private columnUnbondedPanels As Global.System.Data.DataColumn
        
        Private columnSingleOpenStrip As Global.System.Data.DataColumn
        
        Private columnOpenSeam As Global.System.Data.DataColumn
        
        Private columnPanelCavity As Global.System.Data.DataColumn
        
        Private columnTouching As Global.System.Data.DataColumn
        
        Private columnOtherPrintingIssue As Global.System.Data.DataColumn
        
        Private columnCoreCavity As Global.System.Data.DataColumn
        
        Private columnPUC As Global.System.Data.DataColumn
        
        Private columnSeamClosingGlue As Global.System.Data.DataColumn
        
        Private columnBGrade As Global.System.Data.DataColumn
        
        Private columnTotalChecked As Global.System.Data.DataColumn
        
        Private columnPass As Global.System.Data.DataColumn
        
        Private columnFail As Global.System.Data.DataColumn
        
        Private columnStraightCut As Global.System.Data.DataColumn
        
        Private columnCuttingResidual As Global.System.Data.DataColumn
        
        Private columnConnectionBreak As Global.System.Data.DataColumn
        
        Private columnUncureGlue As Global.System.Data.DataColumn
        
        Private columnExcessiveGlue As Global.System.Data.DataColumn
        
        Private columnOverUnderWght As Global.System.Data.DataColumn
        
        Private columnMissAlligment As Global.System.Data.DataColumn
        
        Private columnDisColor As Global.System.Data.DataColumn
        
        Private columnLogoSmearing As Global.System.Data.DataColumn
        
        Private columnLogoDoubling As Global.System.Data.DataColumn
        
        Private columnBarcodeMissing As Global.System.Data.DataColumn
        
        Private columnLargerSpots As Global.System.Data.DataColumn
        
        Private columnSmearing As Global.System.Data.DataColumn
        
        Private columnHFMissAlignment As Global.System.Data.DataColumn
        
        Private columnRCheck As Global.System.Data.DataColumn
        
        Private columnRPass As Global.System.Data.DataColumn
        
        Private columnBlurPrinting As Global.System.Data.DataColumn
        
        Private columnRFail As Global.System.Data.DataColumn
        
        Private columnairbubble As Global.System.Data.DataColumn
        
        Private columnpressoremark As Global.System.Data.DataColumn
        
        Private columnmissingglue As Global.System.Data.DataColumn
        
        Private columnexcussglue As Global.System.Data.DataColumn
        
        Private columnwrinkles As Global.System.Data.DataColumn
        
        Private columnseamoverlapping As Global.System.Data.DataColumn
        
        Private columnnewopenSeam As Global.System.Data.DataColumn
        
        Private columnmaterialdefects As Global.System.Data.DataColumn
        
        Private columnwrongartwork As Global.System.Data.DataColumn
        
        Private columncolourShape As Global.System.Data.DataColumn
        
        Private columnanymisprint As Global.System.Data.DataColumn
        
        Private columnprintmissallignament As Global.System.Data.DataColumn
        
        Private columnNewTouching As Global.System.Data.DataColumn
        
        Private columnheavyprintdefects As Global.System.Data.DataColumn
        
        Private columncuttingpanel As Global.System.Data.DataColumn
        
        Private columnzigzagedge As Global.System.Data.DataColumn
        
        Private columnunshapecut As Global.System.Data.DataColumn
        
        Private columnunevenBallSurface As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "View_Article_Wise_Fail"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PanelDMGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPanelDMG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OverLapColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOverLap
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ZigZagSeamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZigZagSeam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WrinkleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWrinkle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ArtWorkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArtWork
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property UnbondedPanelsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnbondedPanels
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SingleOpenStripColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSingleOpenStrip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OpenSeamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOpenSeam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PanelCavityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPanelCavity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TouchingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTouching
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OtherPrintingIssueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOtherPrintingIssue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CoreCavityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCoreCavity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PUCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPUC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SeamClosingGlueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSeamClosingGlue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BGradeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBGrade
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TotalCheckedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalChecked
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PassColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPass
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property StraightCutColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStraightCut
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CuttingResidualColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCuttingResidual
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ConnectionBreakColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConnectionBreak
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property UncureGlueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUncureGlue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ExcessiveGlueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExcessiveGlue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OverUnderWghtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOverUnderWght
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property MissAlligmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMissAlligment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DisColorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDisColor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LogoSmearingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogoSmearing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LogoDoublingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogoDoubling
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BarcodeMissingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBarcodeMissing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LargerSpotsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLargerSpots
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SmearingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSmearing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property HFMissAlignmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHFMissAlignment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RCheckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRCheck
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RPassColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPass
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BlurPrintingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlurPrinting
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RFailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRFail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property airbubbleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnairbubble
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property pressoremarkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpressoremark
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property missingglueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmissingglue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property excussglueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnexcussglue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property wrinklesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwrinkles
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property seamoverlappingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnseamoverlapping
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property newopenSeamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnewopenSeam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property materialdefectsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmaterialdefects
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property wrongartworkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwrongartwork
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property colourShapeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncolourShape
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property anymisprintColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnanymisprint
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property printmissallignamentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprintmissallignament
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NewTouchingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNewTouching
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property heavyprintdefectsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnheavyprintdefects
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property cuttingpanelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncuttingpanel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property zigzagedgeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnzigzagedge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property unshapecutColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnunshapecut
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property unevenBallSurfaceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnunevenBallSurface
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As View_Article_Wise_FailRow
            Get
                Return CType(Me.Rows(index),View_Article_Wise_FailRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_Article_Wise_FailRowChanging As View_Article_Wise_FailRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_Article_Wise_FailRowChanged As View_Article_Wise_FailRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_Article_Wise_FailRowDeleting As View_Article_Wise_FailRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_Article_Wise_FailRowDeleted As View_Article_Wise_FailRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddView_Article_Wise_FailRow(ByVal row As View_Article_Wise_FailRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddView_Article_Wise_FailRow( _
                    ByVal PanelDMG As Decimal,  _
                    ByVal OverLap As Decimal,  _
                    ByVal ZigZagSeam As Decimal,  _
                    ByVal Wrinkle As Decimal,  _
                    ByVal ArtWork As Decimal,  _
                    ByVal UnbondedPanels As Decimal,  _
                    ByVal SingleOpenStrip As Decimal,  _
                    ByVal OpenSeam As Decimal,  _
                    ByVal PanelCavity As Decimal,  _
                    ByVal Touching As Decimal,  _
                    ByVal OtherPrintingIssue As Decimal,  _
                    ByVal CoreCavity As Decimal,  _
                    ByVal PUC As Decimal,  _
                    ByVal SeamClosingGlue As Decimal,  _
                    ByVal BGrade As Decimal,  _
                    ByVal TotalChecked As Decimal,  _
                    ByVal Pass As Decimal,  _
                    ByVal Fail As Decimal,  _
                    ByVal StraightCut As Decimal,  _
                    ByVal CuttingResidual As Decimal,  _
                    ByVal ConnectionBreak As Decimal,  _
                    ByVal UncureGlue As Decimal,  _
                    ByVal ExcessiveGlue As Decimal,  _
                    ByVal OverUnderWght As Decimal,  _
                    ByVal MissAlligment As Decimal,  _
                    ByVal DisColor As Decimal,  _
                    ByVal LogoSmearing As Decimal,  _
                    ByVal LogoDoubling As Decimal,  _
                    ByVal BarcodeMissing As Decimal,  _
                    ByVal LargerSpots As Decimal,  _
                    ByVal Smearing As Decimal,  _
                    ByVal HFMissAlignment As Decimal,  _
                    ByVal RCheck As Decimal,  _
                    ByVal RPass As Decimal,  _
                    ByVal BlurPrinting As Decimal,  _
                    ByVal RFail As Decimal,  _
                    ByVal airbubble As Decimal,  _
                    ByVal pressoremark As Decimal,  _
                    ByVal missingglue As Decimal,  _
                    ByVal excussglue As Decimal,  _
                    ByVal wrinkles As Decimal,  _
                    ByVal seamoverlapping As Decimal,  _
                    ByVal newopenSeam As Decimal,  _
                    ByVal materialdefects As Decimal,  _
                    ByVal wrongartwork As Decimal,  _
                    ByVal colourShape As Decimal,  _
                    ByVal anymisprint As Decimal,  _
                    ByVal printmissallignament As Decimal,  _
                    ByVal NewTouching As Decimal,  _
                    ByVal heavyprintdefects As Decimal,  _
                    ByVal cuttingpanel As Decimal,  _
                    ByVal zigzagedge As Decimal,  _
                    ByVal unshapecut As Decimal,  _
                    ByVal unevenBallSurface As Decimal) As View_Article_Wise_FailRow
            Dim rowView_Article_Wise_FailRow As View_Article_Wise_FailRow = CType(Me.NewRow,View_Article_Wise_FailRow)
            Dim columnValuesArray() As Object = New Object() {PanelDMG, OverLap, ZigZagSeam, Wrinkle, ArtWork, UnbondedPanels, SingleOpenStrip, OpenSeam, PanelCavity, Touching, OtherPrintingIssue, CoreCavity, PUC, SeamClosingGlue, BGrade, TotalChecked, Pass, Fail, StraightCut, CuttingResidual, ConnectionBreak, UncureGlue, ExcessiveGlue, OverUnderWght, MissAlligment, DisColor, LogoSmearing, LogoDoubling, BarcodeMissing, LargerSpots, Smearing, HFMissAlignment, RCheck, RPass, BlurPrinting, RFail, airbubble, pressoremark, missingglue, excussglue, wrinkles, seamoverlapping, newopenSeam, materialdefects, wrongartwork, colourShape, anymisprint, printmissallignament, NewTouching, heavyprintdefects, cuttingpanel, zigzagedge, unshapecut, unevenBallSurface}
            rowView_Article_Wise_FailRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowView_Article_Wise_FailRow)
            Return rowView_Article_Wise_FailRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As View_Article_Wise_FailDataTable = CType(MyBase.Clone,View_Article_Wise_FailDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New View_Article_Wise_FailDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPanelDMG = MyBase.Columns("PanelDMG")
            Me.columnOverLap = MyBase.Columns("OverLap")
            Me.columnZigZagSeam = MyBase.Columns("ZigZagSeam")
            Me.columnWrinkle = MyBase.Columns("Wrinkle")
            Me.columnArtWork = MyBase.Columns("ArtWork")
            Me.columnUnbondedPanels = MyBase.Columns("UnbondedPanels")
            Me.columnSingleOpenStrip = MyBase.Columns("SingleOpenStrip")
            Me.columnOpenSeam = MyBase.Columns("OpenSeam")
            Me.columnPanelCavity = MyBase.Columns("PanelCavity")
            Me.columnTouching = MyBase.Columns("Touching")
            Me.columnOtherPrintingIssue = MyBase.Columns("OtherPrintingIssue")
            Me.columnCoreCavity = MyBase.Columns("CoreCavity")
            Me.columnPUC = MyBase.Columns("PUC")
            Me.columnSeamClosingGlue = MyBase.Columns("SeamClosingGlue")
            Me.columnBGrade = MyBase.Columns("BGrade")
            Me.columnTotalChecked = MyBase.Columns("TotalChecked")
            Me.columnPass = MyBase.Columns("Pass")
            Me.columnFail = MyBase.Columns("Fail")
            Me.columnStraightCut = MyBase.Columns("StraightCut")
            Me.columnCuttingResidual = MyBase.Columns("CuttingResidual")
            Me.columnConnectionBreak = MyBase.Columns("ConnectionBreak")
            Me.columnUncureGlue = MyBase.Columns("UncureGlue")
            Me.columnExcessiveGlue = MyBase.Columns("ExcessiveGlue")
            Me.columnOverUnderWght = MyBase.Columns("OverUnderWght")
            Me.columnMissAlligment = MyBase.Columns("MissAlligment")
            Me.columnDisColor = MyBase.Columns("DisColor")
            Me.columnLogoSmearing = MyBase.Columns("LogoSmearing")
            Me.columnLogoDoubling = MyBase.Columns("LogoDoubling")
            Me.columnBarcodeMissing = MyBase.Columns("BarcodeMissing")
            Me.columnLargerSpots = MyBase.Columns("LargerSpots")
            Me.columnSmearing = MyBase.Columns("Smearing")
            Me.columnHFMissAlignment = MyBase.Columns("HFMissAlignment")
            Me.columnRCheck = MyBase.Columns("RCheck")
            Me.columnRPass = MyBase.Columns("RPass")
            Me.columnBlurPrinting = MyBase.Columns("BlurPrinting")
            Me.columnRFail = MyBase.Columns("RFail")
            Me.columnairbubble = MyBase.Columns("airbubble")
            Me.columnpressoremark = MyBase.Columns("pressoremark")
            Me.columnmissingglue = MyBase.Columns("missingglue")
            Me.columnexcussglue = MyBase.Columns("excussglue")
            Me.columnwrinkles = MyBase.Columns("wrinkles")
            Me.columnseamoverlapping = MyBase.Columns("seamoverlapping")
            Me.columnnewopenSeam = MyBase.Columns("newopenSeam")
            Me.columnmaterialdefects = MyBase.Columns("materialdefects")
            Me.columnwrongartwork = MyBase.Columns("wrongartwork")
            Me.columncolourShape = MyBase.Columns("colourShape")
            Me.columnanymisprint = MyBase.Columns("anymisprint")
            Me.columnprintmissallignament = MyBase.Columns("printmissallignament")
            Me.columnNewTouching = MyBase.Columns("NewTouching")
            Me.columnheavyprintdefects = MyBase.Columns("heavyprintdefects")
            Me.columncuttingpanel = MyBase.Columns("cuttingpanel")
            Me.columnzigzagedge = MyBase.Columns("zigzagedge")
            Me.columnunshapecut = MyBase.Columns("unshapecut")
            Me.columnunevenBallSurface = MyBase.Columns("unevenBallSurface")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPanelDMG = New Global.System.Data.DataColumn("PanelDMG", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPanelDMG)
            Me.columnOverLap = New Global.System.Data.DataColumn("OverLap", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOverLap)
            Me.columnZigZagSeam = New Global.System.Data.DataColumn("ZigZagSeam", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZigZagSeam)
            Me.columnWrinkle = New Global.System.Data.DataColumn("Wrinkle", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWrinkle)
            Me.columnArtWork = New Global.System.Data.DataColumn("ArtWork", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArtWork)
            Me.columnUnbondedPanels = New Global.System.Data.DataColumn("UnbondedPanels", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnbondedPanels)
            Me.columnSingleOpenStrip = New Global.System.Data.DataColumn("SingleOpenStrip", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSingleOpenStrip)
            Me.columnOpenSeam = New Global.System.Data.DataColumn("OpenSeam", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOpenSeam)
            Me.columnPanelCavity = New Global.System.Data.DataColumn("PanelCavity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPanelCavity)
            Me.columnTouching = New Global.System.Data.DataColumn("Touching", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTouching)
            Me.columnOtherPrintingIssue = New Global.System.Data.DataColumn("OtherPrintingIssue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOtherPrintingIssue)
            Me.columnCoreCavity = New Global.System.Data.DataColumn("CoreCavity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCoreCavity)
            Me.columnPUC = New Global.System.Data.DataColumn("PUC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPUC)
            Me.columnSeamClosingGlue = New Global.System.Data.DataColumn("SeamClosingGlue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSeamClosingGlue)
            Me.columnBGrade = New Global.System.Data.DataColumn("BGrade", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBGrade)
            Me.columnTotalChecked = New Global.System.Data.DataColumn("TotalChecked", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalChecked)
            Me.columnPass = New Global.System.Data.DataColumn("Pass", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPass)
            Me.columnFail = New Global.System.Data.DataColumn("Fail", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFail)
            Me.columnStraightCut = New Global.System.Data.DataColumn("StraightCut", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStraightCut)
            Me.columnCuttingResidual = New Global.System.Data.DataColumn("CuttingResidual", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCuttingResidual)
            Me.columnConnectionBreak = New Global.System.Data.DataColumn("ConnectionBreak", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConnectionBreak)
            Me.columnUncureGlue = New Global.System.Data.DataColumn("UncureGlue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUncureGlue)
            Me.columnExcessiveGlue = New Global.System.Data.DataColumn("ExcessiveGlue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExcessiveGlue)
            Me.columnOverUnderWght = New Global.System.Data.DataColumn("OverUnderWght", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOverUnderWght)
            Me.columnMissAlligment = New Global.System.Data.DataColumn("MissAlligment", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMissAlligment)
            Me.columnDisColor = New Global.System.Data.DataColumn("DisColor", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDisColor)
            Me.columnLogoSmearing = New Global.System.Data.DataColumn("LogoSmearing", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogoSmearing)
            Me.columnLogoDoubling = New Global.System.Data.DataColumn("LogoDoubling", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogoDoubling)
            Me.columnBarcodeMissing = New Global.System.Data.DataColumn("BarcodeMissing", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBarcodeMissing)
            Me.columnLargerSpots = New Global.System.Data.DataColumn("LargerSpots", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLargerSpots)
            Me.columnSmearing = New Global.System.Data.DataColumn("Smearing", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSmearing)
            Me.columnHFMissAlignment = New Global.System.Data.DataColumn("HFMissAlignment", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHFMissAlignment)
            Me.columnRCheck = New Global.System.Data.DataColumn("RCheck", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRCheck)
            Me.columnRPass = New Global.System.Data.DataColumn("RPass", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPass)
            Me.columnBlurPrinting = New Global.System.Data.DataColumn("BlurPrinting", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlurPrinting)
            Me.columnRFail = New Global.System.Data.DataColumn("RFail", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRFail)
            Me.columnairbubble = New Global.System.Data.DataColumn("airbubble", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnairbubble)
            Me.columnpressoremark = New Global.System.Data.DataColumn("pressoremark", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpressoremark)
            Me.columnmissingglue = New Global.System.Data.DataColumn("missingglue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmissingglue)
            Me.columnexcussglue = New Global.System.Data.DataColumn("excussglue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexcussglue)
            Me.columnwrinkles = New Global.System.Data.DataColumn("wrinkles", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwrinkles)
            Me.columnseamoverlapping = New Global.System.Data.DataColumn("seamoverlapping", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnseamoverlapping)
            Me.columnnewopenSeam = New Global.System.Data.DataColumn("newopenSeam", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnewopenSeam)
            Me.columnmaterialdefects = New Global.System.Data.DataColumn("materialdefects", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaterialdefects)
            Me.columnwrongartwork = New Global.System.Data.DataColumn("wrongartwork", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwrongartwork)
            Me.columncolourShape = New Global.System.Data.DataColumn("colourShape", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncolourShape)
            Me.columnanymisprint = New Global.System.Data.DataColumn("anymisprint", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnanymisprint)
            Me.columnprintmissallignament = New Global.System.Data.DataColumn("printmissallignament", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprintmissallignament)
            Me.columnNewTouching = New Global.System.Data.DataColumn("NewTouching", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNewTouching)
            Me.columnheavyprintdefects = New Global.System.Data.DataColumn("heavyprintdefects", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnheavyprintdefects)
            Me.columncuttingpanel = New Global.System.Data.DataColumn("cuttingpanel", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncuttingpanel)
            Me.columnzigzagedge = New Global.System.Data.DataColumn("zigzagedge", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnzigzagedge)
            Me.columnunshapecut = New Global.System.Data.DataColumn("unshapecut", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnunshapecut)
            Me.columnunevenBallSurface = New Global.System.Data.DataColumn("unevenBallSurface", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnunevenBallSurface)
            Me.columnPanelDMG.ReadOnly = true
            Me.columnOverLap.ReadOnly = true
            Me.columnZigZagSeam.ReadOnly = true
            Me.columnWrinkle.ReadOnly = true
            Me.columnArtWork.ReadOnly = true
            Me.columnUnbondedPanels.ReadOnly = true
            Me.columnSingleOpenStrip.ReadOnly = true
            Me.columnOpenSeam.ReadOnly = true
            Me.columnPanelCavity.ReadOnly = true
            Me.columnTouching.ReadOnly = true
            Me.columnOtherPrintingIssue.ReadOnly = true
            Me.columnCoreCavity.ReadOnly = true
            Me.columnPUC.ReadOnly = true
            Me.columnSeamClosingGlue.ReadOnly = true
            Me.columnBGrade.ReadOnly = true
            Me.columnTotalChecked.ReadOnly = true
            Me.columnPass.ReadOnly = true
            Me.columnFail.ReadOnly = true
            Me.columnStraightCut.ReadOnly = true
            Me.columnCuttingResidual.ReadOnly = true
            Me.columnConnectionBreak.ReadOnly = true
            Me.columnUncureGlue.ReadOnly = true
            Me.columnExcessiveGlue.ReadOnly = true
            Me.columnOverUnderWght.ReadOnly = true
            Me.columnMissAlligment.ReadOnly = true
            Me.columnDisColor.ReadOnly = true
            Me.columnLogoSmearing.ReadOnly = true
            Me.columnLogoDoubling.ReadOnly = true
            Me.columnBarcodeMissing.ReadOnly = true
            Me.columnLargerSpots.ReadOnly = true
            Me.columnSmearing.ReadOnly = true
            Me.columnHFMissAlignment.ReadOnly = true
            Me.columnRCheck.ReadOnly = true
            Me.columnRPass.ReadOnly = true
            Me.columnBlurPrinting.ReadOnly = true
            Me.columnRFail.ReadOnly = true
            Me.columnpressoremark.ReadOnly = true
            Me.columnmissingglue.ReadOnly = true
            Me.columnexcussglue.ReadOnly = true
            Me.columnwrinkles.ReadOnly = true
            Me.columnseamoverlapping.ReadOnly = true
            Me.columnnewopenSeam.ReadOnly = true
            Me.columnmaterialdefects.ReadOnly = true
            Me.columnwrongartwork.ReadOnly = true
            Me.columncolourShape.ReadOnly = true
            Me.columnanymisprint.ReadOnly = true
            Me.columnprintmissallignament.ReadOnly = true
            Me.columnNewTouching.ReadOnly = true
            Me.columnheavyprintdefects.ReadOnly = true
            Me.columncuttingpanel.ReadOnly = true
            Me.columnzigzagedge.ReadOnly = true
            Me.columnunshapecut.ReadOnly = true
            Me.columnunevenBallSurface.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewView_Article_Wise_FailRow() As View_Article_Wise_FailRow
            Return CType(Me.NewRow,View_Article_Wise_FailRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New View_Article_Wise_FailRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(View_Article_Wise_FailRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.View_Article_Wise_FailRowChangedEvent) Is Nothing) Then
                RaiseEvent View_Article_Wise_FailRowChanged(Me, New View_Article_Wise_FailRowChangeEvent(CType(e.Row,View_Article_Wise_FailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.View_Article_Wise_FailRowChangingEvent) Is Nothing) Then
                RaiseEvent View_Article_Wise_FailRowChanging(Me, New View_Article_Wise_FailRowChangeEvent(CType(e.Row,View_Article_Wise_FailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.View_Article_Wise_FailRowDeletedEvent) Is Nothing) Then
                RaiseEvent View_Article_Wise_FailRowDeleted(Me, New View_Article_Wise_FailRowChangeEvent(CType(e.Row,View_Article_Wise_FailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.View_Article_Wise_FailRowDeletingEvent) Is Nothing) Then
                RaiseEvent View_Article_Wise_FailRowDeleting(Me, New View_Article_Wise_FailRowChangeEvent(CType(e.Row,View_Article_Wise_FailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveView_Article_Wise_FailRow(ByVal row As View_Article_Wise_FailRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSAMB = New DSAMB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "View_Article_Wise_FailDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class View_AMb_Forming_RepairDataTable
        Inherits Global.System.Data.TypedTableBase(Of View_AMb_Forming_RepairRow)
        
        Private columnPanelDMG As Global.System.Data.DataColumn
        
        Private columnOverLap As Global.System.Data.DataColumn
        
        Private columnZigZagSeam As Global.System.Data.DataColumn
        
        Private columnWrinkle As Global.System.Data.DataColumn
        
        Private columnArtWork As Global.System.Data.DataColumn
        
        Private columnUnbondedPanels As Global.System.Data.DataColumn
        
        Private columnSingleOpenStrip As Global.System.Data.DataColumn
        
        Private columnOpenSeam As Global.System.Data.DataColumn
        
        Private columnPanelCavity As Global.System.Data.DataColumn
        
        Private columnTouching As Global.System.Data.DataColumn
        
        Private columnOtherPrintingIssue As Global.System.Data.DataColumn
        
        Private columnCoreCavity As Global.System.Data.DataColumn
        
        Private columnPUC As Global.System.Data.DataColumn
        
        Private columnSeamClosingGlue As Global.System.Data.DataColumn
        
        Private columnBGrade As Global.System.Data.DataColumn
        
        Private columnTotalChecked As Global.System.Data.DataColumn
        
        Private columnPass As Global.System.Data.DataColumn
        
        Private columnFail As Global.System.Data.DataColumn
        
        Private columnStraightCut As Global.System.Data.DataColumn
        
        Private columnCuttingResidual As Global.System.Data.DataColumn
        
        Private columnConnectionBreak As Global.System.Data.DataColumn
        
        Private columnUncureGlue As Global.System.Data.DataColumn
        
        Private columnExcessiveGlue As Global.System.Data.DataColumn
        
        Private columnOverUnderWght As Global.System.Data.DataColumn
        
        Private columnDisColor As Global.System.Data.DataColumn
        
        Private columnLogoSmearing As Global.System.Data.DataColumn
        
        Private columnLogoDoubling As Global.System.Data.DataColumn
        
        Private columnBarcodeMissing As Global.System.Data.DataColumn
        
        Private columnLargerSpots As Global.System.Data.DataColumn
        
        Private columnSmearing As Global.System.Data.DataColumn
        
        Private columnHFMissAlignment As Global.System.Data.DataColumn
        
        Private columnBlurPrinting As Global.System.Data.DataColumn
        
        Private columnRCheck As Global.System.Data.DataColumn
        
        Private columnRPass As Global.System.Data.DataColumn
        
        Private columnRFail As Global.System.Data.DataColumn
        
        Private columnairbubble As Global.System.Data.DataColumn
        
        Private columnpressoremark As Global.System.Data.DataColumn
        
        Private columnmissingglue As Global.System.Data.DataColumn
        
        Private columnexcussglue As Global.System.Data.DataColumn
        
        Private columnwrinkles As Global.System.Data.DataColumn
        
        Private columnseamoverlapping As Global.System.Data.DataColumn
        
        Private columnnewopenSeam As Global.System.Data.DataColumn
        
        Private columnmaterialdefects As Global.System.Data.DataColumn
        
        Private columnwrongartwork As Global.System.Data.DataColumn
        
        Private columncolourShape As Global.System.Data.DataColumn
        
        Private columnanymisprint As Global.System.Data.DataColumn
        
        Private columnprintmissallignament As Global.System.Data.DataColumn
        
        Private columnNewTouching As Global.System.Data.DataColumn
        
        Private columnheavyprintdefects As Global.System.Data.DataColumn
        
        Private columncuttingpanel As Global.System.Data.DataColumn
        
        Private columnzigzagedge As Global.System.Data.DataColumn
        
        Private columnunshapecut As Global.System.Data.DataColumn
        
        Private columnunevenBallSurface As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "View_AMb_Forming_Repair"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PanelDMGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPanelDMG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OverLapColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOverLap
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ZigZagSeamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZigZagSeam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WrinkleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWrinkle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ArtWorkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArtWork
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property UnbondedPanelsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnbondedPanels
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SingleOpenStripColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSingleOpenStrip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OpenSeamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOpenSeam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PanelCavityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPanelCavity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TouchingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTouching
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OtherPrintingIssueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOtherPrintingIssue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CoreCavityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCoreCavity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PUCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPUC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SeamClosingGlueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSeamClosingGlue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BGradeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBGrade
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TotalCheckedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalChecked
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PassColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPass
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property StraightCutColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStraightCut
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CuttingResidualColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCuttingResidual
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ConnectionBreakColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConnectionBreak
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property UncureGlueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUncureGlue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ExcessiveGlueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExcessiveGlue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OverUnderWghtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOverUnderWght
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DisColorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDisColor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LogoSmearingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogoSmearing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LogoDoublingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogoDoubling
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BarcodeMissingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBarcodeMissing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LargerSpotsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLargerSpots
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SmearingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSmearing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property HFMissAlignmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHFMissAlignment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BlurPrintingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlurPrinting
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RCheckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRCheck
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RPassColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPass
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RFailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRFail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property airbubbleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnairbubble
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property pressoremarkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpressoremark
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property missingglueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmissingglue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property excussglueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnexcussglue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property wrinklesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwrinkles
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property seamoverlappingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnseamoverlapping
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property newopenSeamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnewopenSeam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property materialdefectsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmaterialdefects
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property wrongartworkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwrongartwork
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property colourShapeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncolourShape
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property anymisprintColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnanymisprint
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property printmissallignamentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprintmissallignament
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NewTouchingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNewTouching
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property heavyprintdefectsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnheavyprintdefects
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property cuttingpanelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncuttingpanel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property zigzagedgeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnzigzagedge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property unshapecutColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnunshapecut
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property unevenBallSurfaceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnunevenBallSurface
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As View_AMb_Forming_RepairRow
            Get
                Return CType(Me.Rows(index),View_AMb_Forming_RepairRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_AMb_Forming_RepairRowChanging As View_AMb_Forming_RepairRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_AMb_Forming_RepairRowChanged As View_AMb_Forming_RepairRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_AMb_Forming_RepairRowDeleting As View_AMb_Forming_RepairRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_AMb_Forming_RepairRowDeleted As View_AMb_Forming_RepairRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddView_AMb_Forming_RepairRow(ByVal row As View_AMb_Forming_RepairRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddView_AMb_Forming_RepairRow( _
                    ByVal PanelDMG As Decimal,  _
                    ByVal OverLap As Decimal,  _
                    ByVal ZigZagSeam As Decimal,  _
                    ByVal Wrinkle As Decimal,  _
                    ByVal ArtWork As Decimal,  _
                    ByVal UnbondedPanels As Decimal,  _
                    ByVal SingleOpenStrip As Decimal,  _
                    ByVal OpenSeam As Decimal,  _
                    ByVal PanelCavity As Decimal,  _
                    ByVal Touching As Decimal,  _
                    ByVal OtherPrintingIssue As Decimal,  _
                    ByVal CoreCavity As Decimal,  _
                    ByVal PUC As Decimal,  _
                    ByVal SeamClosingGlue As Decimal,  _
                    ByVal BGrade As Decimal,  _
                    ByVal TotalChecked As Decimal,  _
                    ByVal Pass As Decimal,  _
                    ByVal Fail As Decimal,  _
                    ByVal StraightCut As Decimal,  _
                    ByVal CuttingResidual As Decimal,  _
                    ByVal ConnectionBreak As Decimal,  _
                    ByVal UncureGlue As Decimal,  _
                    ByVal ExcessiveGlue As Decimal,  _
                    ByVal OverUnderWght As Decimal,  _
                    ByVal DisColor As Decimal,  _
                    ByVal LogoSmearing As Decimal,  _
                    ByVal LogoDoubling As Decimal,  _
                    ByVal BarcodeMissing As Decimal,  _
                    ByVal LargerSpots As Decimal,  _
                    ByVal Smearing As Decimal,  _
                    ByVal HFMissAlignment As Decimal,  _
                    ByVal BlurPrinting As Decimal,  _
                    ByVal RCheck As Decimal,  _
                    ByVal RPass As Decimal,  _
                    ByVal RFail As Decimal,  _
                    ByVal airbubble As Decimal,  _
                    ByVal pressoremark As Decimal,  _
                    ByVal missingglue As Decimal,  _
                    ByVal excussglue As Decimal,  _
                    ByVal wrinkles As Decimal,  _
                    ByVal seamoverlapping As Decimal,  _
                    ByVal newopenSeam As Decimal,  _
                    ByVal materialdefects As Decimal,  _
                    ByVal wrongartwork As Decimal,  _
                    ByVal colourShape As Decimal,  _
                    ByVal anymisprint As Decimal,  _
                    ByVal printmissallignament As Decimal,  _
                    ByVal NewTouching As Decimal,  _
                    ByVal heavyprintdefects As Decimal,  _
                    ByVal cuttingpanel As Decimal,  _
                    ByVal zigzagedge As Decimal,  _
                    ByVal unshapecut As Decimal,  _
                    ByVal unevenBallSurface As Decimal) As View_AMb_Forming_RepairRow
            Dim rowView_AMb_Forming_RepairRow As View_AMb_Forming_RepairRow = CType(Me.NewRow,View_AMb_Forming_RepairRow)
            Dim columnValuesArray() As Object = New Object() {PanelDMG, OverLap, ZigZagSeam, Wrinkle, ArtWork, UnbondedPanels, SingleOpenStrip, OpenSeam, PanelCavity, Touching, OtherPrintingIssue, CoreCavity, PUC, SeamClosingGlue, BGrade, TotalChecked, Pass, Fail, StraightCut, CuttingResidual, ConnectionBreak, UncureGlue, ExcessiveGlue, OverUnderWght, DisColor, LogoSmearing, LogoDoubling, BarcodeMissing, LargerSpots, Smearing, HFMissAlignment, BlurPrinting, RCheck, RPass, RFail, airbubble, pressoremark, missingglue, excussglue, wrinkles, seamoverlapping, newopenSeam, materialdefects, wrongartwork, colourShape, anymisprint, printmissallignament, NewTouching, heavyprintdefects, cuttingpanel, zigzagedge, unshapecut, unevenBallSurface}
            rowView_AMb_Forming_RepairRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowView_AMb_Forming_RepairRow)
            Return rowView_AMb_Forming_RepairRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As View_AMb_Forming_RepairDataTable = CType(MyBase.Clone,View_AMb_Forming_RepairDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New View_AMb_Forming_RepairDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPanelDMG = MyBase.Columns("PanelDMG")
            Me.columnOverLap = MyBase.Columns("OverLap")
            Me.columnZigZagSeam = MyBase.Columns("ZigZagSeam")
            Me.columnWrinkle = MyBase.Columns("Wrinkle")
            Me.columnArtWork = MyBase.Columns("ArtWork")
            Me.columnUnbondedPanels = MyBase.Columns("UnbondedPanels")
            Me.columnSingleOpenStrip = MyBase.Columns("SingleOpenStrip")
            Me.columnOpenSeam = MyBase.Columns("OpenSeam")
            Me.columnPanelCavity = MyBase.Columns("PanelCavity")
            Me.columnTouching = MyBase.Columns("Touching")
            Me.columnOtherPrintingIssue = MyBase.Columns("OtherPrintingIssue")
            Me.columnCoreCavity = MyBase.Columns("CoreCavity")
            Me.columnPUC = MyBase.Columns("PUC")
            Me.columnSeamClosingGlue = MyBase.Columns("SeamClosingGlue")
            Me.columnBGrade = MyBase.Columns("BGrade")
            Me.columnTotalChecked = MyBase.Columns("TotalChecked")
            Me.columnPass = MyBase.Columns("Pass")
            Me.columnFail = MyBase.Columns("Fail")
            Me.columnStraightCut = MyBase.Columns("StraightCut")
            Me.columnCuttingResidual = MyBase.Columns("CuttingResidual")
            Me.columnConnectionBreak = MyBase.Columns("ConnectionBreak")
            Me.columnUncureGlue = MyBase.Columns("UncureGlue")
            Me.columnExcessiveGlue = MyBase.Columns("ExcessiveGlue")
            Me.columnOverUnderWght = MyBase.Columns("OverUnderWght")
            Me.columnDisColor = MyBase.Columns("DisColor")
            Me.columnLogoSmearing = MyBase.Columns("LogoSmearing")
            Me.columnLogoDoubling = MyBase.Columns("LogoDoubling")
            Me.columnBarcodeMissing = MyBase.Columns("BarcodeMissing")
            Me.columnLargerSpots = MyBase.Columns("LargerSpots")
            Me.columnSmearing = MyBase.Columns("Smearing")
            Me.columnHFMissAlignment = MyBase.Columns("HFMissAlignment")
            Me.columnBlurPrinting = MyBase.Columns("BlurPrinting")
            Me.columnRCheck = MyBase.Columns("RCheck")
            Me.columnRPass = MyBase.Columns("RPass")
            Me.columnRFail = MyBase.Columns("RFail")
            Me.columnairbubble = MyBase.Columns("airbubble")
            Me.columnpressoremark = MyBase.Columns("pressoremark")
            Me.columnmissingglue = MyBase.Columns("missingglue")
            Me.columnexcussglue = MyBase.Columns("excussglue")
            Me.columnwrinkles = MyBase.Columns("wrinkles")
            Me.columnseamoverlapping = MyBase.Columns("seamoverlapping")
            Me.columnnewopenSeam = MyBase.Columns("newopenSeam")
            Me.columnmaterialdefects = MyBase.Columns("materialdefects")
            Me.columnwrongartwork = MyBase.Columns("wrongartwork")
            Me.columncolourShape = MyBase.Columns("colourShape")
            Me.columnanymisprint = MyBase.Columns("anymisprint")
            Me.columnprintmissallignament = MyBase.Columns("printmissallignament")
            Me.columnNewTouching = MyBase.Columns("NewTouching")
            Me.columnheavyprintdefects = MyBase.Columns("heavyprintdefects")
            Me.columncuttingpanel = MyBase.Columns("cuttingpanel")
            Me.columnzigzagedge = MyBase.Columns("zigzagedge")
            Me.columnunshapecut = MyBase.Columns("unshapecut")
            Me.columnunevenBallSurface = MyBase.Columns("unevenBallSurface")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPanelDMG = New Global.System.Data.DataColumn("PanelDMG", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPanelDMG)
            Me.columnOverLap = New Global.System.Data.DataColumn("OverLap", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOverLap)
            Me.columnZigZagSeam = New Global.System.Data.DataColumn("ZigZagSeam", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZigZagSeam)
            Me.columnWrinkle = New Global.System.Data.DataColumn("Wrinkle", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWrinkle)
            Me.columnArtWork = New Global.System.Data.DataColumn("ArtWork", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArtWork)
            Me.columnUnbondedPanels = New Global.System.Data.DataColumn("UnbondedPanels", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnbondedPanels)
            Me.columnSingleOpenStrip = New Global.System.Data.DataColumn("SingleOpenStrip", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSingleOpenStrip)
            Me.columnOpenSeam = New Global.System.Data.DataColumn("OpenSeam", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOpenSeam)
            Me.columnPanelCavity = New Global.System.Data.DataColumn("PanelCavity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPanelCavity)
            Me.columnTouching = New Global.System.Data.DataColumn("Touching", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTouching)
            Me.columnOtherPrintingIssue = New Global.System.Data.DataColumn("OtherPrintingIssue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOtherPrintingIssue)
            Me.columnCoreCavity = New Global.System.Data.DataColumn("CoreCavity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCoreCavity)
            Me.columnPUC = New Global.System.Data.DataColumn("PUC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPUC)
            Me.columnSeamClosingGlue = New Global.System.Data.DataColumn("SeamClosingGlue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSeamClosingGlue)
            Me.columnBGrade = New Global.System.Data.DataColumn("BGrade", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBGrade)
            Me.columnTotalChecked = New Global.System.Data.DataColumn("TotalChecked", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalChecked)
            Me.columnPass = New Global.System.Data.DataColumn("Pass", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPass)
            Me.columnFail = New Global.System.Data.DataColumn("Fail", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFail)
            Me.columnStraightCut = New Global.System.Data.DataColumn("StraightCut", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStraightCut)
            Me.columnCuttingResidual = New Global.System.Data.DataColumn("CuttingResidual", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCuttingResidual)
            Me.columnConnectionBreak = New Global.System.Data.DataColumn("ConnectionBreak", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConnectionBreak)
            Me.columnUncureGlue = New Global.System.Data.DataColumn("UncureGlue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUncureGlue)
            Me.columnExcessiveGlue = New Global.System.Data.DataColumn("ExcessiveGlue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExcessiveGlue)
            Me.columnOverUnderWght = New Global.System.Data.DataColumn("OverUnderWght", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOverUnderWght)
            Me.columnDisColor = New Global.System.Data.DataColumn("DisColor", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDisColor)
            Me.columnLogoSmearing = New Global.System.Data.DataColumn("LogoSmearing", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogoSmearing)
            Me.columnLogoDoubling = New Global.System.Data.DataColumn("LogoDoubling", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogoDoubling)
            Me.columnBarcodeMissing = New Global.System.Data.DataColumn("BarcodeMissing", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBarcodeMissing)
            Me.columnLargerSpots = New Global.System.Data.DataColumn("LargerSpots", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLargerSpots)
            Me.columnSmearing = New Global.System.Data.DataColumn("Smearing", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSmearing)
            Me.columnHFMissAlignment = New Global.System.Data.DataColumn("HFMissAlignment", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHFMissAlignment)
            Me.columnBlurPrinting = New Global.System.Data.DataColumn("BlurPrinting", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlurPrinting)
            Me.columnRCheck = New Global.System.Data.DataColumn("RCheck", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRCheck)
            Me.columnRPass = New Global.System.Data.DataColumn("RPass", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPass)
            Me.columnRFail = New Global.System.Data.DataColumn("RFail", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRFail)
            Me.columnairbubble = New Global.System.Data.DataColumn("airbubble", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnairbubble)
            Me.columnpressoremark = New Global.System.Data.DataColumn("pressoremark", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpressoremark)
            Me.columnmissingglue = New Global.System.Data.DataColumn("missingglue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmissingglue)
            Me.columnexcussglue = New Global.System.Data.DataColumn("excussglue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexcussglue)
            Me.columnwrinkles = New Global.System.Data.DataColumn("wrinkles", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwrinkles)
            Me.columnseamoverlapping = New Global.System.Data.DataColumn("seamoverlapping", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnseamoverlapping)
            Me.columnnewopenSeam = New Global.System.Data.DataColumn("newopenSeam", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnewopenSeam)
            Me.columnmaterialdefects = New Global.System.Data.DataColumn("materialdefects", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaterialdefects)
            Me.columnwrongartwork = New Global.System.Data.DataColumn("wrongartwork", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwrongartwork)
            Me.columncolourShape = New Global.System.Data.DataColumn("colourShape", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncolourShape)
            Me.columnanymisprint = New Global.System.Data.DataColumn("anymisprint", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnanymisprint)
            Me.columnprintmissallignament = New Global.System.Data.DataColumn("printmissallignament", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprintmissallignament)
            Me.columnNewTouching = New Global.System.Data.DataColumn("NewTouching", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNewTouching)
            Me.columnheavyprintdefects = New Global.System.Data.DataColumn("heavyprintdefects", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnheavyprintdefects)
            Me.columncuttingpanel = New Global.System.Data.DataColumn("cuttingpanel", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncuttingpanel)
            Me.columnzigzagedge = New Global.System.Data.DataColumn("zigzagedge", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnzigzagedge)
            Me.columnunshapecut = New Global.System.Data.DataColumn("unshapecut", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnunshapecut)
            Me.columnunevenBallSurface = New Global.System.Data.DataColumn("unevenBallSurface", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnunevenBallSurface)
            Me.columnDisColor.ReadOnly = true
            Me.columnLogoSmearing.ReadOnly = true
            Me.columnLogoDoubling.ReadOnly = true
            Me.columnBarcodeMissing.ReadOnly = true
            Me.columnLargerSpots.ReadOnly = true
            Me.columnSmearing.ReadOnly = true
            Me.columnHFMissAlignment.ReadOnly = true
            Me.columnBlurPrinting.ReadOnly = true
            Me.columnRCheck.ReadOnly = true
            Me.columnRPass.ReadOnly = true
            Me.columnRFail.ReadOnly = true
            Me.columnairbubble.ReadOnly = true
            Me.columnpressoremark.ReadOnly = true
            Me.columnmissingglue.ReadOnly = true
            Me.columnexcussglue.ReadOnly = true
            Me.columnwrinkles.ReadOnly = true
            Me.columnseamoverlapping.ReadOnly = true
            Me.columnnewopenSeam.ReadOnly = true
            Me.columnmaterialdefects.ReadOnly = true
            Me.columnwrongartwork.ReadOnly = true
            Me.columncolourShape.ReadOnly = true
            Me.columnanymisprint.ReadOnly = true
            Me.columnprintmissallignament.ReadOnly = true
            Me.columnNewTouching.ReadOnly = true
            Me.columnheavyprintdefects.ReadOnly = true
            Me.columncuttingpanel.ReadOnly = true
            Me.columnzigzagedge.ReadOnly = true
            Me.columnunshapecut.ReadOnly = true
            Me.columnunevenBallSurface.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewView_AMb_Forming_RepairRow() As View_AMb_Forming_RepairRow
            Return CType(Me.NewRow,View_AMb_Forming_RepairRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New View_AMb_Forming_RepairRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(View_AMb_Forming_RepairRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.View_AMb_Forming_RepairRowChangedEvent) Is Nothing) Then
                RaiseEvent View_AMb_Forming_RepairRowChanged(Me, New View_AMb_Forming_RepairRowChangeEvent(CType(e.Row,View_AMb_Forming_RepairRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.View_AMb_Forming_RepairRowChangingEvent) Is Nothing) Then
                RaiseEvent View_AMb_Forming_RepairRowChanging(Me, New View_AMb_Forming_RepairRowChangeEvent(CType(e.Row,View_AMb_Forming_RepairRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.View_AMb_Forming_RepairRowDeletedEvent) Is Nothing) Then
                RaiseEvent View_AMb_Forming_RepairRowDeleted(Me, New View_AMb_Forming_RepairRowChangeEvent(CType(e.Row,View_AMb_Forming_RepairRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.View_AMb_Forming_RepairRowDeletingEvent) Is Nothing) Then
                RaiseEvent View_AMb_Forming_RepairRowDeleting(Me, New View_AMb_Forming_RepairRowChangeEvent(CType(e.Row,View_AMb_Forming_RepairRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveView_AMb_Forming_RepairRow(ByVal row As View_AMb_Forming_RepairRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSAMB = New DSAMB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "View_AMb_Forming_RepairDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class View_AMb_Fresh_PassDataTable
        Inherits Global.System.Data.TypedTableBase(Of View_AMb_Fresh_PassRow)
        
        Private columnPanelDMG As Global.System.Data.DataColumn
        
        Private columnOverLap As Global.System.Data.DataColumn
        
        Private columnZigZagSeam As Global.System.Data.DataColumn
        
        Private columnWrinkle As Global.System.Data.DataColumn
        
        Private columnArtWork As Global.System.Data.DataColumn
        
        Private columnUnbondedPanels As Global.System.Data.DataColumn
        
        Private columnSingleOpenStrip As Global.System.Data.DataColumn
        
        Private columnOpenSeam As Global.System.Data.DataColumn
        
        Private columnPanelCavity As Global.System.Data.DataColumn
        
        Private columnTouching As Global.System.Data.DataColumn
        
        Private columnOtherPrintingIssue As Global.System.Data.DataColumn
        
        Private columnCoreCavity As Global.System.Data.DataColumn
        
        Private columnPUC As Global.System.Data.DataColumn
        
        Private columnSeamClosingGlue As Global.System.Data.DataColumn
        
        Private columnBGrade As Global.System.Data.DataColumn
        
        Private columnTotalChecked As Global.System.Data.DataColumn
        
        Private columnPass As Global.System.Data.DataColumn
        
        Private columnFail As Global.System.Data.DataColumn
        
        Private columnStraightCut As Global.System.Data.DataColumn
        
        Private columnCuttingResidual As Global.System.Data.DataColumn
        
        Private columnConnectionBreak As Global.System.Data.DataColumn
        
        Private columnUncureGlue As Global.System.Data.DataColumn
        
        Private columnExcessiveGlue As Global.System.Data.DataColumn
        
        Private columnOverUnderWght As Global.System.Data.DataColumn
        
        Private columnDisColor As Global.System.Data.DataColumn
        
        Private columnLogoSmearing As Global.System.Data.DataColumn
        
        Private columnLogoDoubling As Global.System.Data.DataColumn
        
        Private columnBarcodeMissing As Global.System.Data.DataColumn
        
        Private columnLargerSpots As Global.System.Data.DataColumn
        
        Private columnSmearing As Global.System.Data.DataColumn
        
        Private columnHFMissAlignment As Global.System.Data.DataColumn
        
        Private columnBlurPrinting As Global.System.Data.DataColumn
        
        Private columnRCheck As Global.System.Data.DataColumn
        
        Private columnRPass As Global.System.Data.DataColumn
        
        Private columnOpeningBlance As Global.System.Data.DataColumn
        
        Private columnunevenBallSurface As Global.System.Data.DataColumn
        
        Private columnunshapecut As Global.System.Data.DataColumn
        
        Private columnzigzagedge As Global.System.Data.DataColumn
        
        Private columncuttingpanel As Global.System.Data.DataColumn
        
        Private columnheavyprintdefects As Global.System.Data.DataColumn
        
        Private columnNewTouching As Global.System.Data.DataColumn
        
        Private columnprintmissallignament As Global.System.Data.DataColumn
        
        Private columnanymisprint As Global.System.Data.DataColumn
        
        Private columncolourShape As Global.System.Data.DataColumn
        
        Private columnwrongartwork As Global.System.Data.DataColumn
        
        Private columnmaterialdefects As Global.System.Data.DataColumn
        
        Private columnnewopenSeam As Global.System.Data.DataColumn
        
        Private columnseamoverlapping As Global.System.Data.DataColumn
        
        Private columnwrinkles As Global.System.Data.DataColumn
        
        Private columnexcussglue As Global.System.Data.DataColumn
        
        Private columnmissingglue As Global.System.Data.DataColumn
        
        Private columnpressoremark As Global.System.Data.DataColumn
        
        Private columnairbubble As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "View_AMb_Fresh_Pass"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PanelDMGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPanelDMG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OverLapColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOverLap
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ZigZagSeamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZigZagSeam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WrinkleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWrinkle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ArtWorkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArtWork
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property UnbondedPanelsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnbondedPanels
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SingleOpenStripColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSingleOpenStrip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OpenSeamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOpenSeam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PanelCavityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPanelCavity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TouchingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTouching
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OtherPrintingIssueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOtherPrintingIssue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CoreCavityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCoreCavity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PUCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPUC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SeamClosingGlueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSeamClosingGlue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BGradeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBGrade
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TotalCheckedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalChecked
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PassColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPass
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property StraightCutColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStraightCut
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CuttingResidualColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCuttingResidual
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ConnectionBreakColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConnectionBreak
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property UncureGlueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUncureGlue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ExcessiveGlueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExcessiveGlue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OverUnderWghtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOverUnderWght
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DisColorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDisColor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LogoSmearingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogoSmearing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LogoDoublingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogoDoubling
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BarcodeMissingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBarcodeMissing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LargerSpotsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLargerSpots
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SmearingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSmearing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property HFMissAlignmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHFMissAlignment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BlurPrintingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlurPrinting
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RCheckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRCheck
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RPassColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPass
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OpeningBlanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOpeningBlance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property unevenBallSurfaceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnunevenBallSurface
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property unshapecutColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnunshapecut
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property zigzagedgeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnzigzagedge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property cuttingpanelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncuttingpanel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property heavyprintdefectsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnheavyprintdefects
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NewTouchingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNewTouching
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property printmissallignamentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprintmissallignament
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property anymisprintColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnanymisprint
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property colourShapeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncolourShape
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property wrongartworkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwrongartwork
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property materialdefectsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmaterialdefects
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property newopenSeamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnewopenSeam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property seamoverlappingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnseamoverlapping
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property wrinklesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwrinkles
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property excussglueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnexcussglue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property missingglueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmissingglue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property pressoremarkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpressoremark
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property airbubbleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnairbubble
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As View_AMb_Fresh_PassRow
            Get
                Return CType(Me.Rows(index),View_AMb_Fresh_PassRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_AMb_Fresh_PassRowChanging As View_AMb_Fresh_PassRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_AMb_Fresh_PassRowChanged As View_AMb_Fresh_PassRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_AMb_Fresh_PassRowDeleting As View_AMb_Fresh_PassRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_AMb_Fresh_PassRowDeleted As View_AMb_Fresh_PassRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddView_AMb_Fresh_PassRow(ByVal row As View_AMb_Fresh_PassRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddView_AMb_Fresh_PassRow( _
                    ByVal PanelDMG As Decimal,  _
                    ByVal OverLap As Decimal,  _
                    ByVal ZigZagSeam As Decimal,  _
                    ByVal Wrinkle As Decimal,  _
                    ByVal ArtWork As Decimal,  _
                    ByVal UnbondedPanels As Decimal,  _
                    ByVal SingleOpenStrip As Decimal,  _
                    ByVal OpenSeam As Decimal,  _
                    ByVal PanelCavity As Decimal,  _
                    ByVal Touching As Decimal,  _
                    ByVal OtherPrintingIssue As Decimal,  _
                    ByVal CoreCavity As Decimal,  _
                    ByVal PUC As Decimal,  _
                    ByVal SeamClosingGlue As Decimal,  _
                    ByVal BGrade As Decimal,  _
                    ByVal TotalChecked As Decimal,  _
                    ByVal Pass As Decimal,  _
                    ByVal Fail As Decimal,  _
                    ByVal StraightCut As Decimal,  _
                    ByVal CuttingResidual As Decimal,  _
                    ByVal ConnectionBreak As Decimal,  _
                    ByVal UncureGlue As Decimal,  _
                    ByVal ExcessiveGlue As Decimal,  _
                    ByVal OverUnderWght As Decimal,  _
                    ByVal DisColor As Decimal,  _
                    ByVal LogoSmearing As Decimal,  _
                    ByVal LogoDoubling As Decimal,  _
                    ByVal BarcodeMissing As Decimal,  _
                    ByVal LargerSpots As Decimal,  _
                    ByVal Smearing As Decimal,  _
                    ByVal HFMissAlignment As Decimal,  _
                    ByVal BlurPrinting As Decimal,  _
                    ByVal RCheck As Decimal,  _
                    ByVal RPass As Decimal,  _
                    ByVal OpeningBlance As Decimal,  _
                    ByVal unevenBallSurface As Decimal,  _
                    ByVal unshapecut As Decimal,  _
                    ByVal zigzagedge As Decimal,  _
                    ByVal cuttingpanel As Decimal,  _
                    ByVal heavyprintdefects As Decimal,  _
                    ByVal NewTouching As Decimal,  _
                    ByVal printmissallignament As Decimal,  _
                    ByVal anymisprint As Decimal,  _
                    ByVal colourShape As Decimal,  _
                    ByVal wrongartwork As Decimal,  _
                    ByVal materialdefects As Decimal,  _
                    ByVal newopenSeam As Decimal,  _
                    ByVal seamoverlapping As Decimal,  _
                    ByVal wrinkles As Decimal,  _
                    ByVal excussglue As Decimal,  _
                    ByVal missingglue As Decimal,  _
                    ByVal pressoremark As Decimal,  _
                    ByVal airbubble As Decimal) As View_AMb_Fresh_PassRow
            Dim rowView_AMb_Fresh_PassRow As View_AMb_Fresh_PassRow = CType(Me.NewRow,View_AMb_Fresh_PassRow)
            Dim columnValuesArray() As Object = New Object() {PanelDMG, OverLap, ZigZagSeam, Wrinkle, ArtWork, UnbondedPanels, SingleOpenStrip, OpenSeam, PanelCavity, Touching, OtherPrintingIssue, CoreCavity, PUC, SeamClosingGlue, BGrade, TotalChecked, Pass, Fail, StraightCut, CuttingResidual, ConnectionBreak, UncureGlue, ExcessiveGlue, OverUnderWght, DisColor, LogoSmearing, LogoDoubling, BarcodeMissing, LargerSpots, Smearing, HFMissAlignment, BlurPrinting, RCheck, RPass, OpeningBlance, unevenBallSurface, unshapecut, zigzagedge, cuttingpanel, heavyprintdefects, NewTouching, printmissallignament, anymisprint, colourShape, wrongartwork, materialdefects, newopenSeam, seamoverlapping, wrinkles, excussglue, missingglue, pressoremark, airbubble}
            rowView_AMb_Fresh_PassRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowView_AMb_Fresh_PassRow)
            Return rowView_AMb_Fresh_PassRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As View_AMb_Fresh_PassDataTable = CType(MyBase.Clone,View_AMb_Fresh_PassDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New View_AMb_Fresh_PassDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPanelDMG = MyBase.Columns("PanelDMG")
            Me.columnOverLap = MyBase.Columns("OverLap")
            Me.columnZigZagSeam = MyBase.Columns("ZigZagSeam")
            Me.columnWrinkle = MyBase.Columns("Wrinkle")
            Me.columnArtWork = MyBase.Columns("ArtWork")
            Me.columnUnbondedPanels = MyBase.Columns("UnbondedPanels")
            Me.columnSingleOpenStrip = MyBase.Columns("SingleOpenStrip")
            Me.columnOpenSeam = MyBase.Columns("OpenSeam")
            Me.columnPanelCavity = MyBase.Columns("PanelCavity")
            Me.columnTouching = MyBase.Columns("Touching")
            Me.columnOtherPrintingIssue = MyBase.Columns("OtherPrintingIssue")
            Me.columnCoreCavity = MyBase.Columns("CoreCavity")
            Me.columnPUC = MyBase.Columns("PUC")
            Me.columnSeamClosingGlue = MyBase.Columns("SeamClosingGlue")
            Me.columnBGrade = MyBase.Columns("BGrade")
            Me.columnTotalChecked = MyBase.Columns("TotalChecked")
            Me.columnPass = MyBase.Columns("Pass")
            Me.columnFail = MyBase.Columns("Fail")
            Me.columnStraightCut = MyBase.Columns("StraightCut")
            Me.columnCuttingResidual = MyBase.Columns("CuttingResidual")
            Me.columnConnectionBreak = MyBase.Columns("ConnectionBreak")
            Me.columnUncureGlue = MyBase.Columns("UncureGlue")
            Me.columnExcessiveGlue = MyBase.Columns("ExcessiveGlue")
            Me.columnOverUnderWght = MyBase.Columns("OverUnderWght")
            Me.columnDisColor = MyBase.Columns("DisColor")
            Me.columnLogoSmearing = MyBase.Columns("LogoSmearing")
            Me.columnLogoDoubling = MyBase.Columns("LogoDoubling")
            Me.columnBarcodeMissing = MyBase.Columns("BarcodeMissing")
            Me.columnLargerSpots = MyBase.Columns("LargerSpots")
            Me.columnSmearing = MyBase.Columns("Smearing")
            Me.columnHFMissAlignment = MyBase.Columns("HFMissAlignment")
            Me.columnBlurPrinting = MyBase.Columns("BlurPrinting")
            Me.columnRCheck = MyBase.Columns("RCheck")
            Me.columnRPass = MyBase.Columns("RPass")
            Me.columnOpeningBlance = MyBase.Columns("OpeningBlance")
            Me.columnunevenBallSurface = MyBase.Columns("unevenBallSurface")
            Me.columnunshapecut = MyBase.Columns("unshapecut")
            Me.columnzigzagedge = MyBase.Columns("zigzagedge")
            Me.columncuttingpanel = MyBase.Columns("cuttingpanel")
            Me.columnheavyprintdefects = MyBase.Columns("heavyprintdefects")
            Me.columnNewTouching = MyBase.Columns("NewTouching")
            Me.columnprintmissallignament = MyBase.Columns("printmissallignament")
            Me.columnanymisprint = MyBase.Columns("anymisprint")
            Me.columncolourShape = MyBase.Columns("colourShape")
            Me.columnwrongartwork = MyBase.Columns("wrongartwork")
            Me.columnmaterialdefects = MyBase.Columns("materialdefects")
            Me.columnnewopenSeam = MyBase.Columns("newopenSeam")
            Me.columnseamoverlapping = MyBase.Columns("seamoverlapping")
            Me.columnwrinkles = MyBase.Columns("wrinkles")
            Me.columnexcussglue = MyBase.Columns("excussglue")
            Me.columnmissingglue = MyBase.Columns("missingglue")
            Me.columnpressoremark = MyBase.Columns("pressoremark")
            Me.columnairbubble = MyBase.Columns("airbubble")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPanelDMG = New Global.System.Data.DataColumn("PanelDMG", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPanelDMG)
            Me.columnOverLap = New Global.System.Data.DataColumn("OverLap", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOverLap)
            Me.columnZigZagSeam = New Global.System.Data.DataColumn("ZigZagSeam", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZigZagSeam)
            Me.columnWrinkle = New Global.System.Data.DataColumn("Wrinkle", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWrinkle)
            Me.columnArtWork = New Global.System.Data.DataColumn("ArtWork", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArtWork)
            Me.columnUnbondedPanels = New Global.System.Data.DataColumn("UnbondedPanels", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnbondedPanels)
            Me.columnSingleOpenStrip = New Global.System.Data.DataColumn("SingleOpenStrip", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSingleOpenStrip)
            Me.columnOpenSeam = New Global.System.Data.DataColumn("OpenSeam", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOpenSeam)
            Me.columnPanelCavity = New Global.System.Data.DataColumn("PanelCavity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPanelCavity)
            Me.columnTouching = New Global.System.Data.DataColumn("Touching", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTouching)
            Me.columnOtherPrintingIssue = New Global.System.Data.DataColumn("OtherPrintingIssue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOtherPrintingIssue)
            Me.columnCoreCavity = New Global.System.Data.DataColumn("CoreCavity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCoreCavity)
            Me.columnPUC = New Global.System.Data.DataColumn("PUC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPUC)
            Me.columnSeamClosingGlue = New Global.System.Data.DataColumn("SeamClosingGlue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSeamClosingGlue)
            Me.columnBGrade = New Global.System.Data.DataColumn("BGrade", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBGrade)
            Me.columnTotalChecked = New Global.System.Data.DataColumn("TotalChecked", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalChecked)
            Me.columnPass = New Global.System.Data.DataColumn("Pass", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPass)
            Me.columnFail = New Global.System.Data.DataColumn("Fail", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFail)
            Me.columnStraightCut = New Global.System.Data.DataColumn("StraightCut", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStraightCut)
            Me.columnCuttingResidual = New Global.System.Data.DataColumn("CuttingResidual", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCuttingResidual)
            Me.columnConnectionBreak = New Global.System.Data.DataColumn("ConnectionBreak", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConnectionBreak)
            Me.columnUncureGlue = New Global.System.Data.DataColumn("UncureGlue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUncureGlue)
            Me.columnExcessiveGlue = New Global.System.Data.DataColumn("ExcessiveGlue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExcessiveGlue)
            Me.columnOverUnderWght = New Global.System.Data.DataColumn("OverUnderWght", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOverUnderWght)
            Me.columnDisColor = New Global.System.Data.DataColumn("DisColor", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDisColor)
            Me.columnLogoSmearing = New Global.System.Data.DataColumn("LogoSmearing", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogoSmearing)
            Me.columnLogoDoubling = New Global.System.Data.DataColumn("LogoDoubling", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogoDoubling)
            Me.columnBarcodeMissing = New Global.System.Data.DataColumn("BarcodeMissing", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBarcodeMissing)
            Me.columnLargerSpots = New Global.System.Data.DataColumn("LargerSpots", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLargerSpots)
            Me.columnSmearing = New Global.System.Data.DataColumn("Smearing", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSmearing)
            Me.columnHFMissAlignment = New Global.System.Data.DataColumn("HFMissAlignment", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHFMissAlignment)
            Me.columnBlurPrinting = New Global.System.Data.DataColumn("BlurPrinting", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlurPrinting)
            Me.columnRCheck = New Global.System.Data.DataColumn("RCheck", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRCheck)
            Me.columnRPass = New Global.System.Data.DataColumn("RPass", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPass)
            Me.columnOpeningBlance = New Global.System.Data.DataColumn("OpeningBlance", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOpeningBlance)
            Me.columnunevenBallSurface = New Global.System.Data.DataColumn("unevenBallSurface", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnunevenBallSurface)
            Me.columnunshapecut = New Global.System.Data.DataColumn("unshapecut", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnunshapecut)
            Me.columnzigzagedge = New Global.System.Data.DataColumn("zigzagedge", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnzigzagedge)
            Me.columncuttingpanel = New Global.System.Data.DataColumn("cuttingpanel", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncuttingpanel)
            Me.columnheavyprintdefects = New Global.System.Data.DataColumn("heavyprintdefects", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnheavyprintdefects)
            Me.columnNewTouching = New Global.System.Data.DataColumn("NewTouching", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNewTouching)
            Me.columnprintmissallignament = New Global.System.Data.DataColumn("printmissallignament", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprintmissallignament)
            Me.columnanymisprint = New Global.System.Data.DataColumn("anymisprint", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnanymisprint)
            Me.columncolourShape = New Global.System.Data.DataColumn("colourShape", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncolourShape)
            Me.columnwrongartwork = New Global.System.Data.DataColumn("wrongartwork", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwrongartwork)
            Me.columnmaterialdefects = New Global.System.Data.DataColumn("materialdefects", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaterialdefects)
            Me.columnnewopenSeam = New Global.System.Data.DataColumn("newopenSeam", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnewopenSeam)
            Me.columnseamoverlapping = New Global.System.Data.DataColumn("seamoverlapping", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnseamoverlapping)
            Me.columnwrinkles = New Global.System.Data.DataColumn("wrinkles", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwrinkles)
            Me.columnexcussglue = New Global.System.Data.DataColumn("excussglue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexcussglue)
            Me.columnmissingglue = New Global.System.Data.DataColumn("missingglue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmissingglue)
            Me.columnpressoremark = New Global.System.Data.DataColumn("pressoremark", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpressoremark)
            Me.columnairbubble = New Global.System.Data.DataColumn("airbubble", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnairbubble)
            Me.columnDisColor.ReadOnly = true
            Me.columnLogoSmearing.ReadOnly = true
            Me.columnLogoDoubling.ReadOnly = true
            Me.columnBarcodeMissing.ReadOnly = true
            Me.columnLargerSpots.ReadOnly = true
            Me.columnSmearing.ReadOnly = true
            Me.columnHFMissAlignment.ReadOnly = true
            Me.columnBlurPrinting.ReadOnly = true
            Me.columnRCheck.ReadOnly = true
            Me.columnRPass.ReadOnly = true
            Me.columnOpeningBlance.ReadOnly = true
            Me.columnunevenBallSurface.ReadOnly = true
            Me.columnunshapecut.ReadOnly = true
            Me.columnzigzagedge.ReadOnly = true
            Me.columncuttingpanel.ReadOnly = true
            Me.columnheavyprintdefects.ReadOnly = true
            Me.columnNewTouching.ReadOnly = true
            Me.columnprintmissallignament.ReadOnly = true
            Me.columnanymisprint.ReadOnly = true
            Me.columncolourShape.ReadOnly = true
            Me.columnwrongartwork.ReadOnly = true
            Me.columnmaterialdefects.ReadOnly = true
            Me.columnnewopenSeam.ReadOnly = true
            Me.columnseamoverlapping.ReadOnly = true
            Me.columnwrinkles.ReadOnly = true
            Me.columnexcussglue.ReadOnly = true
            Me.columnmissingglue.ReadOnly = true
            Me.columnpressoremark.ReadOnly = true
            Me.columnairbubble.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewView_AMb_Fresh_PassRow() As View_AMb_Fresh_PassRow
            Return CType(Me.NewRow,View_AMb_Fresh_PassRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New View_AMb_Fresh_PassRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(View_AMb_Fresh_PassRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.View_AMb_Fresh_PassRowChangedEvent) Is Nothing) Then
                RaiseEvent View_AMb_Fresh_PassRowChanged(Me, New View_AMb_Fresh_PassRowChangeEvent(CType(e.Row,View_AMb_Fresh_PassRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.View_AMb_Fresh_PassRowChangingEvent) Is Nothing) Then
                RaiseEvent View_AMb_Fresh_PassRowChanging(Me, New View_AMb_Fresh_PassRowChangeEvent(CType(e.Row,View_AMb_Fresh_PassRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.View_AMb_Fresh_PassRowDeletedEvent) Is Nothing) Then
                RaiseEvent View_AMb_Fresh_PassRowDeleted(Me, New View_AMb_Fresh_PassRowChangeEvent(CType(e.Row,View_AMb_Fresh_PassRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.View_AMb_Fresh_PassRowDeletingEvent) Is Nothing) Then
                RaiseEvent View_AMb_Fresh_PassRowDeleting(Me, New View_AMb_Fresh_PassRowChangeEvent(CType(e.Row,View_AMb_Fresh_PassRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveView_AMb_Fresh_PassRow(ByVal row As View_AMb_Fresh_PassRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSAMB = New DSAMB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "View_AMb_Fresh_PassDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class View_AMb_Article_Wise_FreshDataTable
        Inherits Global.System.Data.TypedTableBase(Of View_AMb_Article_Wise_FreshRow)
        
        Private columnPanelDMG As Global.System.Data.DataColumn
        
        Private columnOverLap As Global.System.Data.DataColumn
        
        Private columnZigZagSeam As Global.System.Data.DataColumn
        
        Private columnWrinkle As Global.System.Data.DataColumn
        
        Private columnArtWork As Global.System.Data.DataColumn
        
        Private columnUnbondedPanels As Global.System.Data.DataColumn
        
        Private columnSingleOpenStrip As Global.System.Data.DataColumn
        
        Private columnOpenSeam As Global.System.Data.DataColumn
        
        Private columnPanelCavity As Global.System.Data.DataColumn
        
        Private columnTouching As Global.System.Data.DataColumn
        
        Private columnOtherPrintingIssue As Global.System.Data.DataColumn
        
        Private columnCoreCavity As Global.System.Data.DataColumn
        
        Private columnPUC As Global.System.Data.DataColumn
        
        Private columnSeamClosingGlue As Global.System.Data.DataColumn
        
        Private columnBGrade As Global.System.Data.DataColumn
        
        Private columnTotalChecked As Global.System.Data.DataColumn
        
        Private columnPass As Global.System.Data.DataColumn
        
        Private columnFail As Global.System.Data.DataColumn
        
        Private columnStraightCut As Global.System.Data.DataColumn
        
        Private columnCuttingResidual As Global.System.Data.DataColumn
        
        Private columnConnectionBreak As Global.System.Data.DataColumn
        
        Private columnUncureGlue As Global.System.Data.DataColumn
        
        Private columnExcessiveGlue As Global.System.Data.DataColumn
        
        Private columnOverUnderWght As Global.System.Data.DataColumn
        
        Private columnMissAlligment As Global.System.Data.DataColumn
        
        Private columnDisColor As Global.System.Data.DataColumn
        
        Private columnLogoSmearing As Global.System.Data.DataColumn
        
        Private columnLogoDoubling As Global.System.Data.DataColumn
        
        Private columnBarcodeMissing As Global.System.Data.DataColumn
        
        Private columnLargerSpots As Global.System.Data.DataColumn
        
        Private columnSmearing As Global.System.Data.DataColumn
        
        Private columnHFMissAlignment As Global.System.Data.DataColumn
        
        Private columnRCheck As Global.System.Data.DataColumn
        
        Private columnRPass As Global.System.Data.DataColumn
        
        Private columnBlurPrinting As Global.System.Data.DataColumn
        
        Private columnOpeningBlance As Global.System.Data.DataColumn
        
        Private columnairbubble As Global.System.Data.DataColumn
        
        Private columnpressoremark As Global.System.Data.DataColumn
        
        Private columnmissingglue As Global.System.Data.DataColumn
        
        Private columnexcussglue As Global.System.Data.DataColumn
        
        Private columnwrinkles As Global.System.Data.DataColumn
        
        Private columnseamoverlapping As Global.System.Data.DataColumn
        
        Private columnnewopenSeam As Global.System.Data.DataColumn
        
        Private columnmaterialdefects As Global.System.Data.DataColumn
        
        Private columnwrongartwork As Global.System.Data.DataColumn
        
        Private columncolourShape As Global.System.Data.DataColumn
        
        Private columnanymisprint As Global.System.Data.DataColumn
        
        Private columnprintmissallignament As Global.System.Data.DataColumn
        
        Private columnNewTouching As Global.System.Data.DataColumn
        
        Private columnheavyprintdefects As Global.System.Data.DataColumn
        
        Private columncuttingpanel As Global.System.Data.DataColumn
        
        Private columnzigzagedge As Global.System.Data.DataColumn
        
        Private columnunshapecut As Global.System.Data.DataColumn
        
        Private columnunevenBallSurface As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "View_AMb_Article Wise_Fresh"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PanelDMGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPanelDMG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OverLapColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOverLap
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ZigZagSeamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZigZagSeam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WrinkleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWrinkle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ArtWorkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArtWork
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property UnbondedPanelsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnbondedPanels
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SingleOpenStripColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSingleOpenStrip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OpenSeamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOpenSeam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PanelCavityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPanelCavity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TouchingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTouching
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OtherPrintingIssueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOtherPrintingIssue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CoreCavityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCoreCavity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PUCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPUC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SeamClosingGlueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSeamClosingGlue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BGradeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBGrade
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TotalCheckedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalChecked
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PassColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPass
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property StraightCutColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStraightCut
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CuttingResidualColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCuttingResidual
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ConnectionBreakColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConnectionBreak
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property UncureGlueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUncureGlue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ExcessiveGlueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExcessiveGlue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OverUnderWghtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOverUnderWght
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property MissAlligmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMissAlligment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DisColorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDisColor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LogoSmearingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogoSmearing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LogoDoublingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogoDoubling
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BarcodeMissingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBarcodeMissing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LargerSpotsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLargerSpots
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SmearingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSmearing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property HFMissAlignmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHFMissAlignment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RCheckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRCheck
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RPassColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPass
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BlurPrintingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlurPrinting
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OpeningBlanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOpeningBlance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property airbubbleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnairbubble
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property pressoremarkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpressoremark
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property missingglueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmissingglue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property excussglueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnexcussglue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property wrinklesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwrinkles
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property seamoverlappingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnseamoverlapping
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property newopenSeamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnewopenSeam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property materialdefectsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmaterialdefects
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property wrongartworkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwrongartwork
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property colourShapeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncolourShape
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property anymisprintColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnanymisprint
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property printmissallignamentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprintmissallignament
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NewTouchingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNewTouching
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property heavyprintdefectsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnheavyprintdefects
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property cuttingpanelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncuttingpanel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property zigzagedgeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnzigzagedge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property unshapecutColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnunshapecut
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property unevenBallSurfaceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnunevenBallSurface
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As View_AMb_Article_Wise_FreshRow
            Get
                Return CType(Me.Rows(index),View_AMb_Article_Wise_FreshRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_AMb_Article_Wise_FreshRowChanging As View_AMb_Article_Wise_FreshRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_AMb_Article_Wise_FreshRowChanged As View_AMb_Article_Wise_FreshRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_AMb_Article_Wise_FreshRowDeleting As View_AMb_Article_Wise_FreshRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event View_AMb_Article_Wise_FreshRowDeleted As View_AMb_Article_Wise_FreshRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddView_AMb_Article_Wise_FreshRow(ByVal row As View_AMb_Article_Wise_FreshRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddView_AMb_Article_Wise_FreshRow( _
                    ByVal PanelDMG As Decimal,  _
                    ByVal OverLap As Decimal,  _
                    ByVal ZigZagSeam As Decimal,  _
                    ByVal Wrinkle As Decimal,  _
                    ByVal ArtWork As Decimal,  _
                    ByVal UnbondedPanels As Decimal,  _
                    ByVal SingleOpenStrip As Decimal,  _
                    ByVal OpenSeam As Decimal,  _
                    ByVal PanelCavity As Decimal,  _
                    ByVal Touching As Decimal,  _
                    ByVal OtherPrintingIssue As Decimal,  _
                    ByVal CoreCavity As Decimal,  _
                    ByVal PUC As Decimal,  _
                    ByVal SeamClosingGlue As Decimal,  _
                    ByVal BGrade As Decimal,  _
                    ByVal TotalChecked As Decimal,  _
                    ByVal Pass As Decimal,  _
                    ByVal Fail As Decimal,  _
                    ByVal StraightCut As Decimal,  _
                    ByVal CuttingResidual As Decimal,  _
                    ByVal ConnectionBreak As Decimal,  _
                    ByVal UncureGlue As Decimal,  _
                    ByVal ExcessiveGlue As Decimal,  _
                    ByVal OverUnderWght As Decimal,  _
                    ByVal MissAlligment As Decimal,  _
                    ByVal DisColor As Decimal,  _
                    ByVal LogoSmearing As Decimal,  _
                    ByVal LogoDoubling As Decimal,  _
                    ByVal BarcodeMissing As Decimal,  _
                    ByVal LargerSpots As Decimal,  _
                    ByVal Smearing As Decimal,  _
                    ByVal HFMissAlignment As Decimal,  _
                    ByVal RCheck As Decimal,  _
                    ByVal RPass As Decimal,  _
                    ByVal BlurPrinting As Decimal,  _
                    ByVal OpeningBlance As Decimal,  _
                    ByVal airbubble As Decimal,  _
                    ByVal pressoremark As Decimal,  _
                    ByVal missingglue As Decimal,  _
                    ByVal excussglue As Decimal,  _
                    ByVal wrinkles As Decimal,  _
                    ByVal seamoverlapping As Decimal,  _
                    ByVal newopenSeam As Decimal,  _
                    ByVal materialdefects As Decimal,  _
                    ByVal wrongartwork As Decimal,  _
                    ByVal colourShape As Decimal,  _
                    ByVal anymisprint As Decimal,  _
                    ByVal printmissallignament As Decimal,  _
                    ByVal NewTouching As Decimal,  _
                    ByVal heavyprintdefects As Decimal,  _
                    ByVal cuttingpanel As Decimal,  _
                    ByVal zigzagedge As Decimal,  _
                    ByVal unshapecut As Decimal,  _
                    ByVal unevenBallSurface As Decimal) As View_AMb_Article_Wise_FreshRow
            Dim rowView_AMb_Article_Wise_FreshRow As View_AMb_Article_Wise_FreshRow = CType(Me.NewRow,View_AMb_Article_Wise_FreshRow)
            Dim columnValuesArray() As Object = New Object() {PanelDMG, OverLap, ZigZagSeam, Wrinkle, ArtWork, UnbondedPanels, SingleOpenStrip, OpenSeam, PanelCavity, Touching, OtherPrintingIssue, CoreCavity, PUC, SeamClosingGlue, BGrade, TotalChecked, Pass, Fail, StraightCut, CuttingResidual, ConnectionBreak, UncureGlue, ExcessiveGlue, OverUnderWght, MissAlligment, DisColor, LogoSmearing, LogoDoubling, BarcodeMissing, LargerSpots, Smearing, HFMissAlignment, RCheck, RPass, BlurPrinting, OpeningBlance, airbubble, pressoremark, missingglue, excussglue, wrinkles, seamoverlapping, newopenSeam, materialdefects, wrongartwork, colourShape, anymisprint, printmissallignament, NewTouching, heavyprintdefects, cuttingpanel, zigzagedge, unshapecut, unevenBallSurface}
            rowView_AMb_Article_Wise_FreshRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowView_AMb_Article_Wise_FreshRow)
            Return rowView_AMb_Article_Wise_FreshRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As View_AMb_Article_Wise_FreshDataTable = CType(MyBase.Clone,View_AMb_Article_Wise_FreshDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New View_AMb_Article_Wise_FreshDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPanelDMG = MyBase.Columns("PanelDMG")
            Me.columnOverLap = MyBase.Columns("OverLap")
            Me.columnZigZagSeam = MyBase.Columns("ZigZagSeam")
            Me.columnWrinkle = MyBase.Columns("Wrinkle")
            Me.columnArtWork = MyBase.Columns("ArtWork")
            Me.columnUnbondedPanels = MyBase.Columns("UnbondedPanels")
            Me.columnSingleOpenStrip = MyBase.Columns("SingleOpenStrip")
            Me.columnOpenSeam = MyBase.Columns("OpenSeam")
            Me.columnPanelCavity = MyBase.Columns("PanelCavity")
            Me.columnTouching = MyBase.Columns("Touching")
            Me.columnOtherPrintingIssue = MyBase.Columns("OtherPrintingIssue")
            Me.columnCoreCavity = MyBase.Columns("CoreCavity")
            Me.columnPUC = MyBase.Columns("PUC")
            Me.columnSeamClosingGlue = MyBase.Columns("SeamClosingGlue")
            Me.columnBGrade = MyBase.Columns("BGrade")
            Me.columnTotalChecked = MyBase.Columns("TotalChecked")
            Me.columnPass = MyBase.Columns("Pass")
            Me.columnFail = MyBase.Columns("Fail")
            Me.columnStraightCut = MyBase.Columns("StraightCut")
            Me.columnCuttingResidual = MyBase.Columns("CuttingResidual")
            Me.columnConnectionBreak = MyBase.Columns("ConnectionBreak")
            Me.columnUncureGlue = MyBase.Columns("UncureGlue")
            Me.columnExcessiveGlue = MyBase.Columns("ExcessiveGlue")
            Me.columnOverUnderWght = MyBase.Columns("OverUnderWght")
            Me.columnMissAlligment = MyBase.Columns("MissAlligment")
            Me.columnDisColor = MyBase.Columns("DisColor")
            Me.columnLogoSmearing = MyBase.Columns("LogoSmearing")
            Me.columnLogoDoubling = MyBase.Columns("LogoDoubling")
            Me.columnBarcodeMissing = MyBase.Columns("BarcodeMissing")
            Me.columnLargerSpots = MyBase.Columns("LargerSpots")
            Me.columnSmearing = MyBase.Columns("Smearing")
            Me.columnHFMissAlignment = MyBase.Columns("HFMissAlignment")
            Me.columnRCheck = MyBase.Columns("RCheck")
            Me.columnRPass = MyBase.Columns("RPass")
            Me.columnBlurPrinting = MyBase.Columns("BlurPrinting")
            Me.columnOpeningBlance = MyBase.Columns("OpeningBlance")
            Me.columnairbubble = MyBase.Columns("airbubble")
            Me.columnpressoremark = MyBase.Columns("pressoremark")
            Me.columnmissingglue = MyBase.Columns("missingglue")
            Me.columnexcussglue = MyBase.Columns("excussglue")
            Me.columnwrinkles = MyBase.Columns("wrinkles")
            Me.columnseamoverlapping = MyBase.Columns("seamoverlapping")
            Me.columnnewopenSeam = MyBase.Columns("newopenSeam")
            Me.columnmaterialdefects = MyBase.Columns("materialdefects")
            Me.columnwrongartwork = MyBase.Columns("wrongartwork")
            Me.columncolourShape = MyBase.Columns("colourShape")
            Me.columnanymisprint = MyBase.Columns("anymisprint")
            Me.columnprintmissallignament = MyBase.Columns("printmissallignament")
            Me.columnNewTouching = MyBase.Columns("NewTouching")
            Me.columnheavyprintdefects = MyBase.Columns("heavyprintdefects")
            Me.columncuttingpanel = MyBase.Columns("cuttingpanel")
            Me.columnzigzagedge = MyBase.Columns("zigzagedge")
            Me.columnunshapecut = MyBase.Columns("unshapecut")
            Me.columnunevenBallSurface = MyBase.Columns("unevenBallSurface")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPanelDMG = New Global.System.Data.DataColumn("PanelDMG", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPanelDMG)
            Me.columnOverLap = New Global.System.Data.DataColumn("OverLap", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOverLap)
            Me.columnZigZagSeam = New Global.System.Data.DataColumn("ZigZagSeam", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZigZagSeam)
            Me.columnWrinkle = New Global.System.Data.DataColumn("Wrinkle", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWrinkle)
            Me.columnArtWork = New Global.System.Data.DataColumn("ArtWork", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArtWork)
            Me.columnUnbondedPanels = New Global.System.Data.DataColumn("UnbondedPanels", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnbondedPanels)
            Me.columnSingleOpenStrip = New Global.System.Data.DataColumn("SingleOpenStrip", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSingleOpenStrip)
            Me.columnOpenSeam = New Global.System.Data.DataColumn("OpenSeam", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOpenSeam)
            Me.columnPanelCavity = New Global.System.Data.DataColumn("PanelCavity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPanelCavity)
            Me.columnTouching = New Global.System.Data.DataColumn("Touching", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTouching)
            Me.columnOtherPrintingIssue = New Global.System.Data.DataColumn("OtherPrintingIssue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOtherPrintingIssue)
            Me.columnCoreCavity = New Global.System.Data.DataColumn("CoreCavity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCoreCavity)
            Me.columnPUC = New Global.System.Data.DataColumn("PUC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPUC)
            Me.columnSeamClosingGlue = New Global.System.Data.DataColumn("SeamClosingGlue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSeamClosingGlue)
            Me.columnBGrade = New Global.System.Data.DataColumn("BGrade", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBGrade)
            Me.columnTotalChecked = New Global.System.Data.DataColumn("TotalChecked", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalChecked)
            Me.columnPass = New Global.System.Data.DataColumn("Pass", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPass)
            Me.columnFail = New Global.System.Data.DataColumn("Fail", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFail)
            Me.columnStraightCut = New Global.System.Data.DataColumn("StraightCut", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStraightCut)
            Me.columnCuttingResidual = New Global.System.Data.DataColumn("CuttingResidual", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCuttingResidual)
            Me.columnConnectionBreak = New Global.System.Data.DataColumn("ConnectionBreak", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConnectionBreak)
            Me.columnUncureGlue = New Global.System.Data.DataColumn("UncureGlue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUncureGlue)
            Me.columnExcessiveGlue = New Global.System.Data.DataColumn("ExcessiveGlue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExcessiveGlue)
            Me.columnOverUnderWght = New Global.System.Data.DataColumn("OverUnderWght", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOverUnderWght)
            Me.columnMissAlligment = New Global.System.Data.DataColumn("MissAlligment", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMissAlligment)
            Me.columnDisColor = New Global.System.Data.DataColumn("DisColor", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDisColor)
            Me.columnLogoSmearing = New Global.System.Data.DataColumn("LogoSmearing", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogoSmearing)
            Me.columnLogoDoubling = New Global.System.Data.DataColumn("LogoDoubling", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogoDoubling)
            Me.columnBarcodeMissing = New Global.System.Data.DataColumn("BarcodeMissing", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBarcodeMissing)
            Me.columnLargerSpots = New Global.System.Data.DataColumn("LargerSpots", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLargerSpots)
            Me.columnSmearing = New Global.System.Data.DataColumn("Smearing", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSmearing)
            Me.columnHFMissAlignment = New Global.System.Data.DataColumn("HFMissAlignment", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHFMissAlignment)
            Me.columnRCheck = New Global.System.Data.DataColumn("RCheck", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRCheck)
            Me.columnRPass = New Global.System.Data.DataColumn("RPass", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPass)
            Me.columnBlurPrinting = New Global.System.Data.DataColumn("BlurPrinting", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlurPrinting)
            Me.columnOpeningBlance = New Global.System.Data.DataColumn("OpeningBlance", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOpeningBlance)
            Me.columnairbubble = New Global.System.Data.DataColumn("airbubble", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnairbubble)
            Me.columnpressoremark = New Global.System.Data.DataColumn("pressoremark", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpressoremark)
            Me.columnmissingglue = New Global.System.Data.DataColumn("missingglue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmissingglue)
            Me.columnexcussglue = New Global.System.Data.DataColumn("excussglue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexcussglue)
            Me.columnwrinkles = New Global.System.Data.DataColumn("wrinkles", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwrinkles)
            Me.columnseamoverlapping = New Global.System.Data.DataColumn("seamoverlapping", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnseamoverlapping)
            Me.columnnewopenSeam = New Global.System.Data.DataColumn("newopenSeam", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnewopenSeam)
            Me.columnmaterialdefects = New Global.System.Data.DataColumn("materialdefects", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaterialdefects)
            Me.columnwrongartwork = New Global.System.Data.DataColumn("wrongartwork", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwrongartwork)
            Me.columncolourShape = New Global.System.Data.DataColumn("colourShape", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncolourShape)
            Me.columnanymisprint = New Global.System.Data.DataColumn("anymisprint", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnanymisprint)
            Me.columnprintmissallignament = New Global.System.Data.DataColumn("printmissallignament", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprintmissallignament)
            Me.columnNewTouching = New Global.System.Data.DataColumn("NewTouching", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNewTouching)
            Me.columnheavyprintdefects = New Global.System.Data.DataColumn("heavyprintdefects", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnheavyprintdefects)
            Me.columncuttingpanel = New Global.System.Data.DataColumn("cuttingpanel", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncuttingpanel)
            Me.columnzigzagedge = New Global.System.Data.DataColumn("zigzagedge", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnzigzagedge)
            Me.columnunshapecut = New Global.System.Data.DataColumn("unshapecut", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnunshapecut)
            Me.columnunevenBallSurface = New Global.System.Data.DataColumn("unevenBallSurface", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnunevenBallSurface)
            Me.columnMissAlligment.ReadOnly = true
            Me.columnDisColor.ReadOnly = true
            Me.columnLogoSmearing.ReadOnly = true
            Me.columnLogoDoubling.ReadOnly = true
            Me.columnBarcodeMissing.ReadOnly = true
            Me.columnLargerSpots.ReadOnly = true
            Me.columnSmearing.ReadOnly = true
            Me.columnHFMissAlignment.ReadOnly = true
            Me.columnRCheck.ReadOnly = true
            Me.columnRPass.ReadOnly = true
            Me.columnBlurPrinting.ReadOnly = true
            Me.columnOpeningBlance.ReadOnly = true
            Me.columnairbubble.ReadOnly = true
            Me.columnpressoremark.ReadOnly = true
            Me.columnmissingglue.ReadOnly = true
            Me.columnexcussglue.ReadOnly = true
            Me.columnwrinkles.ReadOnly = true
            Me.columnseamoverlapping.ReadOnly = true
            Me.columnnewopenSeam.ReadOnly = true
            Me.columnmaterialdefects.ReadOnly = true
            Me.columnwrongartwork.ReadOnly = true
            Me.columncolourShape.ReadOnly = true
            Me.columnanymisprint.ReadOnly = true
            Me.columnprintmissallignament.ReadOnly = true
            Me.columnNewTouching.ReadOnly = true
            Me.columnheavyprintdefects.ReadOnly = true
            Me.columncuttingpanel.ReadOnly = true
            Me.columnzigzagedge.ReadOnly = true
            Me.columnunshapecut.ReadOnly = true
            Me.columnunevenBallSurface.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewView_AMb_Article_Wise_FreshRow() As View_AMb_Article_Wise_FreshRow
            Return CType(Me.NewRow,View_AMb_Article_Wise_FreshRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New View_AMb_Article_Wise_FreshRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(View_AMb_Article_Wise_FreshRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.View_AMb_Article_Wise_FreshRowChangedEvent) Is Nothing) Then
                RaiseEvent View_AMb_Article_Wise_FreshRowChanged(Me, New View_AMb_Article_Wise_FreshRowChangeEvent(CType(e.Row,View_AMb_Article_Wise_FreshRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.View_AMb_Article_Wise_FreshRowChangingEvent) Is Nothing) Then
                RaiseEvent View_AMb_Article_Wise_FreshRowChanging(Me, New View_AMb_Article_Wise_FreshRowChangeEvent(CType(e.Row,View_AMb_Article_Wise_FreshRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.View_AMb_Article_Wise_FreshRowDeletedEvent) Is Nothing) Then
                RaiseEvent View_AMb_Article_Wise_FreshRowDeleted(Me, New View_AMb_Article_Wise_FreshRowChangeEvent(CType(e.Row,View_AMb_Article_Wise_FreshRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.View_AMb_Article_Wise_FreshRowDeletingEvent) Is Nothing) Then
                RaiseEvent View_AMb_Article_Wise_FreshRowDeleting(Me, New View_AMb_Article_Wise_FreshRowChangeEvent(CType(e.Row,View_AMb_Article_Wise_FreshRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveView_AMb_Article_Wise_FreshRow(ByVal row As View_AMb_Article_Wise_FreshRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSAMB = New DSAMB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "View_AMb_Article_Wise_FreshDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_PC_AMB_Line1DataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_PC_AMB_Line1Row)
        
        Private columnLineName As Global.System.Data.DataColumn
        
        Private columnLineID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_PC_AMB_Line1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LineNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLineName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LineIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLineID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_PC_AMB_Line1Row
            Get
                Return CType(Me.Rows(index),tbl_PC_AMB_Line1Row)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event tbl_PC_AMB_Line1RowChanging As tbl_PC_AMB_Line1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event tbl_PC_AMB_Line1RowChanged As tbl_PC_AMB_Line1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event tbl_PC_AMB_Line1RowDeleting As tbl_PC_AMB_Line1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event tbl_PC_AMB_Line1RowDeleted As tbl_PC_AMB_Line1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub Addtbl_PC_AMB_Line1Row(ByVal row As tbl_PC_AMB_Line1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function Addtbl_PC_AMB_Line1Row(ByVal LineName As String) As tbl_PC_AMB_Line1Row
            Dim rowtbl_PC_AMB_Line1Row As tbl_PC_AMB_Line1Row = CType(Me.NewRow,tbl_PC_AMB_Line1Row)
            Dim columnValuesArray() As Object = New Object() {LineName, Nothing}
            rowtbl_PC_AMB_Line1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_PC_AMB_Line1Row)
            Return rowtbl_PC_AMB_Line1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByLineID(ByVal LineID As Integer) As tbl_PC_AMB_Line1Row
            Return CType(Me.Rows.Find(New Object() {LineID}),tbl_PC_AMB_Line1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_PC_AMB_Line1DataTable = CType(MyBase.Clone,tbl_PC_AMB_Line1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_PC_AMB_Line1DataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnLineName = MyBase.Columns("LineName")
            Me.columnLineID = MyBase.Columns("LineID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnLineName = New Global.System.Data.DataColumn("LineName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLineName)
            Me.columnLineID = New Global.System.Data.DataColumn("LineID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLineID)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnLineID}, true))
            Me.columnLineName.AllowDBNull = false
            Me.columnLineName.MaxLength = 150
            Me.columnLineID.AutoIncrement = true
            Me.columnLineID.AutoIncrementSeed = -1
            Me.columnLineID.AutoIncrementStep = -1
            Me.columnLineID.AllowDBNull = false
            Me.columnLineID.ReadOnly = true
            Me.columnLineID.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Newtbl_PC_AMB_Line1Row() As tbl_PC_AMB_Line1Row
            Return CType(Me.NewRow,tbl_PC_AMB_Line1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_PC_AMB_Line1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_PC_AMB_Line1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_PC_AMB_Line1RowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_PC_AMB_Line1RowChanged(Me, New tbl_PC_AMB_Line1RowChangeEvent(CType(e.Row,tbl_PC_AMB_Line1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_PC_AMB_Line1RowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_PC_AMB_Line1RowChanging(Me, New tbl_PC_AMB_Line1RowChangeEvent(CType(e.Row,tbl_PC_AMB_Line1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_PC_AMB_Line1RowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_PC_AMB_Line1RowDeleted(Me, New tbl_PC_AMB_Line1RowChangeEvent(CType(e.Row,tbl_PC_AMB_Line1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_PC_AMB_Line1RowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_PC_AMB_Line1RowDeleting(Me, New tbl_PC_AMB_Line1RowChangeEvent(CType(e.Row,tbl_PC_AMB_Line1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Removetbl_PC_AMB_Line1Row(ByVal row As tbl_PC_AMB_Line1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSAMB = New DSAMB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_PC_AMB_Line1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_Pro_Amb_ArticleDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_Pro_Amb_ArticleRow)
        
        Private columnClientID As Global.System.Data.DataColumn
        
        Private columnModelID As Global.System.Data.DataColumn
        
        Private columnArtID As Global.System.Data.DataColumn
        
        Private columnArtCode As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_Pro_Amb_Article"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ClientIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ModelIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModelID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ArtIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArtID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ArtCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArtCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_Pro_Amb_ArticleRow
            Get
                Return CType(Me.Rows(index),tbl_Pro_Amb_ArticleRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event tbl_Pro_Amb_ArticleRowChanging As tbl_Pro_Amb_ArticleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event tbl_Pro_Amb_ArticleRowChanged As tbl_Pro_Amb_ArticleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event tbl_Pro_Amb_ArticleRowDeleting As tbl_Pro_Amb_ArticleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event tbl_Pro_Amb_ArticleRowDeleted As tbl_Pro_Amb_ArticleRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub Addtbl_Pro_Amb_ArticleRow(ByVal row As tbl_Pro_Amb_ArticleRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function Addtbl_Pro_Amb_ArticleRow(ByVal ClientID As Integer, ByVal ModelID As Integer, ByVal ArtID As Integer, ByVal ArtCode As String) As tbl_Pro_Amb_ArticleRow
            Dim rowtbl_Pro_Amb_ArticleRow As tbl_Pro_Amb_ArticleRow = CType(Me.NewRow,tbl_Pro_Amb_ArticleRow)
            Dim columnValuesArray() As Object = New Object() {ClientID, ModelID, ArtID, ArtCode}
            rowtbl_Pro_Amb_ArticleRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_Pro_Amb_ArticleRow)
            Return rowtbl_Pro_Amb_ArticleRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByClientIDModelIDArtID(ByVal ClientID As Integer, ByVal ModelID As Integer, ByVal ArtID As Integer) As tbl_Pro_Amb_ArticleRow
            Return CType(Me.Rows.Find(New Object() {ClientID, ModelID, ArtID}),tbl_Pro_Amb_ArticleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_Pro_Amb_ArticleDataTable = CType(MyBase.Clone,tbl_Pro_Amb_ArticleDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_Pro_Amb_ArticleDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnClientID = MyBase.Columns("ClientID")
            Me.columnModelID = MyBase.Columns("ModelID")
            Me.columnArtID = MyBase.Columns("ArtID")
            Me.columnArtCode = MyBase.Columns("ArtCode")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnClientID = New Global.System.Data.DataColumn("ClientID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientID)
            Me.columnModelID = New Global.System.Data.DataColumn("ModelID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModelID)
            Me.columnArtID = New Global.System.Data.DataColumn("ArtID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArtID)
            Me.columnArtCode = New Global.System.Data.DataColumn("ArtCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArtCode)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnClientID, Me.columnModelID, Me.columnArtID}, true))
            Me.columnClientID.AllowDBNull = false
            Me.columnModelID.AllowDBNull = false
            Me.columnArtID.AllowDBNull = false
            Me.columnArtCode.AllowDBNull = false
            Me.columnArtCode.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Newtbl_Pro_Amb_ArticleRow() As tbl_Pro_Amb_ArticleRow
            Return CType(Me.NewRow,tbl_Pro_Amb_ArticleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_Pro_Amb_ArticleRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_Pro_Amb_ArticleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_Pro_Amb_ArticleRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_Pro_Amb_ArticleRowChanged(Me, New tbl_Pro_Amb_ArticleRowChangeEvent(CType(e.Row,tbl_Pro_Amb_ArticleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_Pro_Amb_ArticleRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_Pro_Amb_ArticleRowChanging(Me, New tbl_Pro_Amb_ArticleRowChangeEvent(CType(e.Row,tbl_Pro_Amb_ArticleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_Pro_Amb_ArticleRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_Pro_Amb_ArticleRowDeleted(Me, New tbl_Pro_Amb_ArticleRowChangeEvent(CType(e.Row,tbl_Pro_Amb_ArticleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_Pro_Amb_ArticleRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_Pro_Amb_ArticleRowDeleting(Me, New tbl_Pro_Amb_ArticleRowChangeEvent(CType(e.Row,tbl_Pro_Amb_ArticleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Removetbl_Pro_Amb_ArticleRow(ByVal row As tbl_Pro_Amb_ArticleRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSAMB = New DSAMB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_Pro_Amb_ArticleDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tbl_Pro_ArticleRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_Pro_Article As tbl_Pro_ArticleDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_Pro_Article = CType(Me.Table,tbl_Pro_ArticleDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClientID() As Integer
            Get
                Return CType(Me(Me.tabletbl_Pro_Article.ClientIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Pro_Article.ClientIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ModelID() As Integer
            Get
                Return CType(Me(Me.tabletbl_Pro_Article.ModelIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Pro_Article.ModelIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ArtID() As Integer
            Get
                Return CType(Me(Me.tabletbl_Pro_Article.ArtIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Pro_Article.ArtIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ArtCode() As String
            Get
                Return CType(Me(Me.tabletbl_Pro_Article.ArtCodeColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Pro_Article.ArtCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Target() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pro_Article.TargetColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Target' in table 'tbl_Pro_Article' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pro_Article.TargetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SAMForming() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pro_Article.SAMFormingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SAMForming' in table 'tbl_Pro_Article' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pro_Article.SAMFormingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SAMPacking() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pro_Article.SAMPackingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SAMPacking' in table 'tbl_Pro_Article' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pro_Article.SAMPackingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TargetPacking() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pro_Article.TargetPackingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TargetPacking' in table 'tbl_Pro_Article' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pro_Article.TargetPackingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ModelNo() As String
            Get
                Return CType(Me(Me.tabletbl_Pro_Article.ModelNoColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Pro_Article.ModelNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ModelName() As String
            Get
                Return CType(Me(Me.tabletbl_Pro_Article.ModelNameColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Pro_Article.ModelNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FactoryCode() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pro_Article.FactoryCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FactoryCode' in table 'tbl_Pro_Article' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pro_Article.FactoryCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClientName() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pro_Article.ClientNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientName' in table 'tbl_Pro_Article' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pro_Article.ClientNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTargetNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pro_Article.TargetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTargetNull()
            Me(Me.tabletbl_Pro_Article.TargetColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSAMFormingNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pro_Article.SAMFormingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSAMFormingNull()
            Me(Me.tabletbl_Pro_Article.SAMFormingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSAMPackingNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pro_Article.SAMPackingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSAMPackingNull()
            Me(Me.tabletbl_Pro_Article.SAMPackingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTargetPackingNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pro_Article.TargetPackingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTargetPackingNull()
            Me(Me.tabletbl_Pro_Article.TargetPackingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsFactoryCodeNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pro_Article.FactoryCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetFactoryCodeNull()
            Me(Me.tabletbl_Pro_Article.FactoryCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsClientNameNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pro_Article.ClientNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetClientNameNull()
            Me(Me.tabletbl_Pro_Article.ClientNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Gettbl_Pro_Article_DRows() As tbl_Pro_Article_DRow()
            If (Me.Table.ChildRelations("tbl_Pro_Article_tbl_Pro_Article_D") Is Nothing) Then
                Return New tbl_Pro_Article_DRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("tbl_Pro_Article_tbl_Pro_Article_D")),tbl_Pro_Article_DRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tbl_Pro_Article_DRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_Pro_Article_D As tbl_Pro_Article_DDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_Pro_Article_D = CType(Me.Table,tbl_Pro_Article_DDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClientID() As Integer
            Get
                Return CType(Me(Me.tabletbl_Pro_Article_D.ClientIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Pro_Article_D.ClientIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ModelID() As Integer
            Get
                Return CType(Me(Me.tabletbl_Pro_Article_D.ModelIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Pro_Article_D.ModelIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ArtID() As Integer
            Get
                Return CType(Me(Me.tabletbl_Pro_Article_D.ArtIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Pro_Article_D.ArtIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ModelNo() As String
            Get
                Return CType(Me(Me.tabletbl_Pro_Article_D.ModelNoColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Pro_Article_D.ModelNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ModelName() As String
            Get
                Return CType(Me(Me.tabletbl_Pro_Article_D.ModelNameColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Pro_Article_D.ModelNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FactoryCode() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pro_Article_D.FactoryCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FactoryCode' in table 'tbl_Pro_Article_D' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pro_Article_D.FactoryCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ArtSize() As String
            Get
                Return CType(Me(Me.tabletbl_Pro_Article_D.ArtSizeColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Pro_Article_D.ArtSizeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UnitID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pro_Article_D.UnitIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UnitID' in table 'tbl_Pro_Article_D' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pro_Article_D.UnitIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property tbl_Pro_ArticleRowParent() As tbl_Pro_ArticleRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("tbl_Pro_Article_tbl_Pro_Article_D")),tbl_Pro_ArticleRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("tbl_Pro_Article_tbl_Pro_Article_D"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsFactoryCodeNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pro_Article_D.FactoryCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetFactoryCodeNull()
            Me(Me.tabletbl_Pro_Article_D.FactoryCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsUnitIDNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pro_Article_D.UnitIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetUnitIDNull()
            Me(Me.tabletbl_Pro_Article_D.UnitIDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tbl_Inv_Tran_DateRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_Inv_Tran_Date As tbl_Inv_Tran_DateDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_Inv_Tran_Date = CType(Me.Table,tbl_Inv_Tran_DateDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DayNo() As Integer
            Get
                Return CType(Me(Me.tabletbl_Inv_Tran_Date.DayNoColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Date.DayNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DateName() As Date
            Get
                Return CType(Me(Me.tabletbl_Inv_Tran_Date.DateNameColumn),Date)
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Date.DateNameColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tbl_PC_AMB_Hours_TranRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_PC_AMB_Hours_Tran As tbl_PC_AMB_Hours_TranDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_PC_AMB_Hours_Tran = CType(Me.Table,tbl_PC_AMB_Hours_TranDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TranID() As Integer
            Get
                Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.TranIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.TranIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.POColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PO' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.POColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POM() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.POMColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POM' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.POMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POD() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.PODColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POD' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.PODColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ArtSize() As String
            Get
                Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.ArtSizeColumn),String)
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.ArtSizeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DayID() As Integer
            Get
                Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.DayIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.DayIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property HourID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.HourIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HourID' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.HourIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LineID() As Integer
            Get
                Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.LineIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.LineIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ProcessID() As Integer
            Get
                Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.ProcessIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.ProcessIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Strength() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.StrengthColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Strength' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.StrengthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Present() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.PresentColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Present' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.PresentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PackingStrength() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.PackingStrengthColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PackingStrength' in table 'tbl_PC_AMB_Hours_Tran' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.PackingStrengthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PackingPresent() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.PackingPresentColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PackingPresent' in table 'tbl_PC_AMB_Hours_Tran' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.PackingPresentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ArtTarget() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.ArtTargetColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ArtTarget' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.ArtTargetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ArtPackingTarget() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.ArtPackingTargetColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ArtPackingTarget' in table 'tbl_PC_AMB_Hours_Tran' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.ArtPackingTargetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ArtSAM() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.ArtSAMColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ArtSAM' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.ArtSAMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ArtPackingSAM() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.ArtPackingSAMColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ArtPackingSAM' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.ArtPackingSAMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Input() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.InputColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Input' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.InputColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OutPut() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.OutPutColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OutPut' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.OutPutColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Rejection() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.RejectionColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Rejection' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.RejectionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClientID() As Integer
            Get
                Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.ClientIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.ClientIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ModelID() As Integer
            Get
                Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.ModelIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.ModelIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ArtID() As Integer
            Get
                Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.ArtIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.ArtIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SeamClosingGlue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.SeamClosingGlueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SeamClosingGlue' in table 'tbl_PC_AMB_Hours_Tran' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.SeamClosingGlueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PUC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.PUCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PUC' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.PUCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CoreCavity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.CoreCavityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CoreCavity' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.CoreCavityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Touching() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.TouchingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Touching' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.TouchingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OtherPrintingIssue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.OtherPrintingIssueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OtherPrintingIssue' in table 'tbl_PC_AMB_Hours_Tran' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.OtherPrintingIssueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PanelCavity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.PanelCavityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PanelCavity' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.PanelCavityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OpenSeam() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.OpenSeamColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OpenSeam' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.OpenSeamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SingleOpenStrip() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.SingleOpenStripColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SingleOpenStrip' in table 'tbl_PC_AMB_Hours_Tran' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.SingleOpenStripColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UnbondedPanels() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.UnbondedPanelsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UnbondedPanels' in table 'tbl_PC_AMB_Hours_Tran' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.UnbondedPanelsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ArtWork() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.ArtWorkColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ArtWork' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.ArtWorkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Wrinkle() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.WrinkleColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Wrinkle' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.WrinkleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ZigZagSeam() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.ZigZagSeamColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZigZagSeam' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.ZigZagSeamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OverLap() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.OverLapColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OverLap' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.OverLapColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PanelDMG() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.PanelDMGColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PanelDMG' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.PanelDMGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BGrade() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.BGradeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BGrade' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.BGradeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property MissAlligment() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.MissAlligmentColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MissAlligment' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.MissAlligmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DisColor() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.DisColorColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DisColor' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.DisColorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LogoSmearing() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.LogoSmearingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LogoSmearing' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.LogoSmearingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LogoDoubling() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.LogoDoublingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LogoDoubling' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.LogoDoublingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BarcodeMissing() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.BarcodeMissingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BarcodeMissing' in table 'tbl_PC_AMB_Hours_Tran' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.BarcodeMissingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LargerSpots() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.LargerSpotsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LargerSpots' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.LargerSpotsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Smearing() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.SmearingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Smearing' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.SmearingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property HFMissAlignment() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.HFMissAlignmentColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HFMissAlignment' in table 'tbl_PC_AMB_Hours_Tran' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.HFMissAlignmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BlurPrinting() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.BlurPrintingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BlurPrinting' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.BlurPrintingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BallType() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.BallTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BallType' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.BallTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property unevenBallSurface() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.unevenBallSurfaceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'unevenBallSurface' in table 'tbl_PC_AMB_Hours_Tran' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.unevenBallSurfaceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property unshapecut() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.unshapecutColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'unshapecut' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.unshapecutColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property zigzagedge() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.zigzagedgeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'zigzagedge' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.zigzagedgeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property cuttingpanel() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.cuttingpanelColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cuttingpanel' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.cuttingpanelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property heavyprintdefects() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.heavyprintdefectsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'heavyprintdefects' in table 'tbl_PC_AMB_Hours_Tran' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.heavyprintdefectsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NewTouching() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.NewTouchingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NewTouching' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.NewTouchingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property printmissallignament() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.printmissallignamentColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'printmissallignament' in table 'tbl_PC_AMB_Hours_Tran' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.printmissallignamentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property anymisprint() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.anymisprintColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'anymisprint' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.anymisprintColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property colourShape() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.colourShapeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'colourShape' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.colourShapeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property wrongartwork() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.wrongartworkColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'wrongartwork' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.wrongartworkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property materialdefects() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.materialdefectsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'materialdefects' in table 'tbl_PC_AMB_Hours_Tran' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.materialdefectsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property newopenSeam() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.newopenSeamColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'newopenSeam' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.newopenSeamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property seamoverlapping() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.seamoverlappingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'seamoverlapping' in table 'tbl_PC_AMB_Hours_Tran' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.seamoverlappingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property wrinkles() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.wrinklesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'wrinkles' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.wrinklesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property excussglue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.excussglueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'excussglue' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.excussglueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property missingglue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.missingglueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'missingglue' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.missingglueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property pressoremark() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.pressoremarkColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pressoremark' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.pressoremarkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property airbubble() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_PC_AMB_Hours_Tran.airbubbleColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'airbubble' in table 'tbl_PC_AMB_Hours_Tran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Hours_Tran.airbubbleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPONull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.POColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPONull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.POColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOMNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.POMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOMNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.POMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPODNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.PODColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPODNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.PODColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsHourIDNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.HourIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetHourIDNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.HourIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsStrengthNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.StrengthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetStrengthNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.StrengthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPresentNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.PresentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPresentNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.PresentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPackingStrengthNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.PackingStrengthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPackingStrengthNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.PackingStrengthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPackingPresentNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.PackingPresentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPackingPresentNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.PackingPresentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsArtTargetNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.ArtTargetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetArtTargetNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.ArtTargetColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsArtPackingTargetNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.ArtPackingTargetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetArtPackingTargetNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.ArtPackingTargetColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsArtSAMNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.ArtSAMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetArtSAMNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.ArtSAMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsArtPackingSAMNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.ArtPackingSAMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetArtPackingSAMNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.ArtPackingSAMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsInputNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.InputColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetInputNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.InputColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOutPutNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.OutPutColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOutPutNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.OutPutColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRejectionNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.RejectionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRejectionNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.RejectionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSeamClosingGlueNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.SeamClosingGlueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSeamClosingGlueNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.SeamClosingGlueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPUCNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.PUCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPUCNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.PUCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCoreCavityNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.CoreCavityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCoreCavityNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.CoreCavityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTouchingNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.TouchingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTouchingNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.TouchingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOtherPrintingIssueNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.OtherPrintingIssueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOtherPrintingIssueNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.OtherPrintingIssueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPanelCavityNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.PanelCavityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPanelCavityNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.PanelCavityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOpenSeamNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.OpenSeamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOpenSeamNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.OpenSeamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSingleOpenStripNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.SingleOpenStripColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSingleOpenStripNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.SingleOpenStripColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsUnbondedPanelsNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.UnbondedPanelsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetUnbondedPanelsNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.UnbondedPanelsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsArtWorkNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.ArtWorkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetArtWorkNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.ArtWorkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWrinkleNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.WrinkleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWrinkleNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.WrinkleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsZigZagSeamNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.ZigZagSeamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetZigZagSeamNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.ZigZagSeamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOverLapNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.OverLapColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOverLapNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.OverLapColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPanelDMGNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.PanelDMGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPanelDMGNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.PanelDMGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBGradeNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.BGradeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBGradeNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.BGradeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsMissAlligmentNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.MissAlligmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetMissAlligmentNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.MissAlligmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDisColorNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.DisColorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDisColorNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.DisColorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLogoSmearingNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.LogoSmearingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLogoSmearingNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.LogoSmearingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLogoDoublingNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.LogoDoublingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLogoDoublingNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.LogoDoublingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBarcodeMissingNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.BarcodeMissingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBarcodeMissingNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.BarcodeMissingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLargerSpotsNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.LargerSpotsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLargerSpotsNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.LargerSpotsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSmearingNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.SmearingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSmearingNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.SmearingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsHFMissAlignmentNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.HFMissAlignmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetHFMissAlignmentNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.HFMissAlignmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBlurPrintingNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.BlurPrintingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBlurPrintingNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.BlurPrintingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBallTypeNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.BallTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBallTypeNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.BallTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsunevenBallSurfaceNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.unevenBallSurfaceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetunevenBallSurfaceNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.unevenBallSurfaceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsunshapecutNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.unshapecutColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetunshapecutNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.unshapecutColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IszigzagedgeNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.zigzagedgeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetzigzagedgeNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.zigzagedgeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IscuttingpanelNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.cuttingpanelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetcuttingpanelNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.cuttingpanelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsheavyprintdefectsNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.heavyprintdefectsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetheavyprintdefectsNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.heavyprintdefectsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsNewTouchingNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.NewTouchingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetNewTouchingNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.NewTouchingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsprintmissallignamentNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.printmissallignamentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetprintmissallignamentNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.printmissallignamentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsanymisprintNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.anymisprintColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetanymisprintNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.anymisprintColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IscolourShapeNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.colourShapeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetcolourShapeNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.colourShapeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IswrongartworkNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.wrongartworkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetwrongartworkNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.wrongartworkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsmaterialdefectsNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.materialdefectsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetmaterialdefectsNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.materialdefectsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsnewopenSeamNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.newopenSeamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetnewopenSeamNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.newopenSeamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsseamoverlappingNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.seamoverlappingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetseamoverlappingNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.seamoverlappingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IswrinklesNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.wrinklesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetwrinklesNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.wrinklesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsexcussglueNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.excussglueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetexcussglueNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.excussglueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsmissingglueNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.missingglueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetmissingglueNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.missingglueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IspressoremarkNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.pressoremarkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetpressoremarkNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.pressoremarkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsairbubbleNull() As Boolean
            Return Me.IsNull(Me.tabletbl_PC_AMB_Hours_Tran.airbubbleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetairbubbleNull()
            Me(Me.tabletbl_PC_AMB_Hours_Tran.airbubbleColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class View_PODRow
        Inherits Global.System.Data.DataRow
        
        Private tableView_POD As View_PODDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableView_POD = CType(Me.Table,View_PODDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PO() As Integer
            Get
                Return CType(Me(Me.tableView_POD.POColumn),Integer)
            End Get
            Set
                Me(Me.tableView_POD.POColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POM() As Integer
            Get
                Return CType(Me(Me.tableView_POD.POMColumn),Integer)
            End Get
            Set
                Me(Me.tableView_POD.POMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POD() As Integer
            Get
                Return CType(Me(Me.tableView_POD.PODColumn),Integer)
            End Get
            Set
                Me(Me.tableView_POD.PODColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OrderQty() As Integer
            Get
                Return CType(Me(Me.tableView_POD.OrderQtyColumn),Integer)
            End Get
            Set
                Me(Me.tableView_POD.OrderQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FactoryCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_POD.FactoryCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FactoryCode' in table 'View_POD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_POD.FactoryCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OrderType() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_POD.OrderTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OrderType' in table 'View_POD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_POD.OrderTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ArtSize() As String
            Get
                Return CType(Me(Me.tableView_POD.ArtSizeColumn),String)
            End Get
            Set
                Me(Me.tableView_POD.ArtSizeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClientID() As Integer
            Get
                Return CType(Me(Me.tableView_POD.ClientIDColumn),Integer)
            End Get
            Set
                Me(Me.tableView_POD.ClientIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ModelID() As Integer
            Get
                Return CType(Me(Me.tableView_POD.ModelIDColumn),Integer)
            End Get
            Set
                Me(Me.tableView_POD.ModelIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ArtID() As Integer
            Get
                Return CType(Me(Me.tableView_POD.ArtIDColumn),Integer)
            End Get
            Set
                Me(Me.tableView_POD.ArtIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SecondConfDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableView_POD.SecondConfDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SecondConfDate' in table 'View_POD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_POD.SecondConfDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property AlreadyPack() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_POD.AlreadyPackColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AlreadyPack' in table 'View_POD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_POD.AlreadyPackColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Balance() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_POD.BalanceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Balance' in table 'View_POD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_POD.BalanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POCode() As String
            Get
                Return CType(Me(Me.tableView_POD.POCodeColumn),String)
            End Get
            Set
                Me(Me.tableView_POD.POCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property View_PORow() As View_PORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("View_PO_View_POD")),View_PORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("View_PO_View_POD"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsFactoryCodeNull() As Boolean
            Return Me.IsNull(Me.tableView_POD.FactoryCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetFactoryCodeNull()
            Me(Me.tableView_POD.FactoryCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOrderTypeNull() As Boolean
            Return Me.IsNull(Me.tableView_POD.OrderTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOrderTypeNull()
            Me(Me.tableView_POD.OrderTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSecondConfDateNull() As Boolean
            Return Me.IsNull(Me.tableView_POD.SecondConfDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSecondConfDateNull()
            Me(Me.tableView_POD.SecondConfDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsAlreadyPackNull() As Boolean
            Return Me.IsNull(Me.tableView_POD.AlreadyPackColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetAlreadyPackNull()
            Me(Me.tableView_POD.AlreadyPackColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBalanceNull() As Boolean
            Return Me.IsNull(Me.tableView_POD.BalanceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBalanceNull()
            Me(Me.tableView_POD.BalanceColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class View_PORow
        Inherits Global.System.Data.DataRow
        
        Private tableView_PO As View_PODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableView_PO = CType(Me.Table,View_PODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PO() As Integer
            Get
                Return CType(Me(Me.tableView_PO.POColumn),Integer)
            End Get
            Set
                Me(Me.tableView_PO.POColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POCode() As String
            Get
                Return CType(Me(Me.tableView_PO.POCodeColumn),String)
            End Get
            Set
                Me(Me.tableView_PO.POCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OrderType() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_PO.OrderTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OrderType' in table 'View_PO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_PO.OrderTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FactoryCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_PO.FactoryCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FactoryCode' in table 'View_PO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_PO.FactoryCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ArtCode() As String
            Get
                Return CType(Me(Me.tableView_PO.ArtCodeColumn),String)
            End Get
            Set
                Me(Me.tableView_PO.ArtCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ModelName() As String
            Get
                Return CType(Me(Me.tableView_PO.ModelNameColumn),String)
            End Get
            Set
                Me(Me.tableView_PO.ModelNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Target() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_PO.TargetColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Target' in table 'View_PO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_PO.TargetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SAMForming() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_PO.SAMFormingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SAMForming' in table 'View_PO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_PO.SAMFormingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SAMPacking() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_PO.SAMPackingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SAMPacking' in table 'View_PO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_PO.SAMPackingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TargetPacking() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_PO.TargetPackingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TargetPacking' in table 'View_PO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_PO.TargetPackingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClientID() As Integer
            Get
                Return CType(Me(Me.tableView_PO.ClientIDColumn),Integer)
            End Get
            Set
                Me(Me.tableView_PO.ClientIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SecondConfDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableView_PO.SecondConfDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SecondConfDate' in table 'View_PO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_PO.SecondConfDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POM() As Integer
            Get
                Return CType(Me(Me.tableView_PO.POMColumn),Integer)
            End Get
            Set
                Me(Me.tableView_PO.POMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOrderTypeNull() As Boolean
            Return Me.IsNull(Me.tableView_PO.OrderTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOrderTypeNull()
            Me(Me.tableView_PO.OrderTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsFactoryCodeNull() As Boolean
            Return Me.IsNull(Me.tableView_PO.FactoryCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetFactoryCodeNull()
            Me(Me.tableView_PO.FactoryCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTargetNull() As Boolean
            Return Me.IsNull(Me.tableView_PO.TargetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTargetNull()
            Me(Me.tableView_PO.TargetColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSAMFormingNull() As Boolean
            Return Me.IsNull(Me.tableView_PO.SAMFormingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSAMFormingNull()
            Me(Me.tableView_PO.SAMFormingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSAMPackingNull() As Boolean
            Return Me.IsNull(Me.tableView_PO.SAMPackingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSAMPackingNull()
            Me(Me.tableView_PO.SAMPackingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTargetPackingNull() As Boolean
            Return Me.IsNull(Me.tableView_PO.TargetPackingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTargetPackingNull()
            Me(Me.tableView_PO.TargetPackingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSecondConfDateNull() As Boolean
            Return Me.IsNull(Me.tableView_PO.SecondConfDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSecondConfDateNull()
            Me(Me.tableView_PO.SecondConfDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetView_PODRows() As View_PODRow()
            If (Me.Table.ChildRelations("View_PO_View_POD") Is Nothing) Then
                Return New View_PODRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("View_PO_View_POD")),View_PODRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class View_AMb_FormingRow
        Inherits Global.System.Data.DataRow
        
        Private tableView_AMb_Forming As View_AMb_FormingDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableView_AMb_Forming = CType(Me.Table,View_AMb_FormingDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PanelDMG() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.PanelDMGColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PanelDMG' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.PanelDMGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OverLap() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.OverLapColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OverLap' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.OverLapColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ZigZagSeam() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.ZigZagSeamColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZigZagSeam' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.ZigZagSeamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Wrinkle() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.WrinkleColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Wrinkle' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.WrinkleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ArtWork() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.ArtWorkColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ArtWork' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.ArtWorkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UnbondedPanels() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.UnbondedPanelsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UnbondedPanels' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.UnbondedPanelsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SingleOpenStrip() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.SingleOpenStripColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SingleOpenStrip' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.SingleOpenStripColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OpenSeam() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.OpenSeamColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OpenSeam' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.OpenSeamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PanelCavity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.PanelCavityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PanelCavity' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.PanelCavityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Touching() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.TouchingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Touching' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.TouchingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OtherPrintingIssue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.OtherPrintingIssueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OtherPrintingIssue' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.OtherPrintingIssueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CoreCavity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.CoreCavityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CoreCavity' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.CoreCavityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PUC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.PUCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PUC' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.PUCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SeamClosingGlue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.SeamClosingGlueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SeamClosingGlue' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.SeamClosingGlueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BGrade() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.BGradeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BGrade' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.BGradeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TotalChecked() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.TotalCheckedColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalChecked' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.TotalCheckedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Pass() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.PassColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pass' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.PassColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Fail() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.FailColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Fail' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.FailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property StraightCut() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.StraightCutColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StraightCut' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.StraightCutColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CuttingResidual() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.CuttingResidualColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CuttingResidual' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.CuttingResidualColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ConnectionBreak() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.ConnectionBreakColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConnectionBreak' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.ConnectionBreakColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UncureGlue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.UncureGlueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UncureGlue' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.UncureGlueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ExcessiveGlue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.ExcessiveGlueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExcessiveGlue' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.ExcessiveGlueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OverUnderWght() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.OverUnderWghtColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OverUnderWght' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.OverUnderWghtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DisColor() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.DisColorColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DisColor' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.DisColorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LogoSmearing() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.LogoSmearingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LogoSmearing' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.LogoSmearingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LogoDoubling() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.LogoDoublingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LogoDoubling' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.LogoDoublingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BarcodeMissing() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.BarcodeMissingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BarcodeMissing' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.BarcodeMissingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LargerSpots() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.LargerSpotsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LargerSpots' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.LargerSpotsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Smearing() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.SmearingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Smearing' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.SmearingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property HFMissAlignment() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.HFMissAlignmentColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HFMissAlignment' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.HFMissAlignmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BlurPrinting() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.BlurPrintingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BlurPrinting' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.BlurPrintingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RCheck() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.RCheckColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RCheck' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.RCheckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RPass() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.RPassColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RPass' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.RPassColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property airbubble() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.airbubbleColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'airbubble' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.airbubbleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property pressoremark() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.pressoremarkColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pressoremark' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.pressoremarkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property missingglue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.missingglueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'missingglue' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.missingglueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property excussglue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.excussglueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'excussglue' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.excussglueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property wrinkles() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.wrinklesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'wrinkles' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.wrinklesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property seamoverlapping() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.seamoverlappingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'seamoverlapping' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.seamoverlappingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property newopenSeam() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.newopenSeamColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'newopenSeam' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.newopenSeamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property materialdefects() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.materialdefectsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'materialdefects' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.materialdefectsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property wrongartwork() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.wrongartworkColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'wrongartwork' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.wrongartworkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property colourShape() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.colourShapeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'colourShape' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.colourShapeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property anymisprint() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.anymisprintColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'anymisprint' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.anymisprintColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property printmissallignament() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.printmissallignamentColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'printmissallignament' in table 'View_AMb_Forming' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.printmissallignamentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NewTouching() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.NewTouchingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NewTouching' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.NewTouchingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property heavyprintdefects() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.heavyprintdefectsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'heavyprintdefects' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.heavyprintdefectsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property cuttingpanel() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.cuttingpanelColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cuttingpanel' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.cuttingpanelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property zigzagedge() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.zigzagedgeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'zigzagedge' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.zigzagedgeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property unshapecut() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.unshapecutColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'unshapecut' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.unshapecutColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property unevenBallSurface() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming.unevenBallSurfaceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'unevenBallSurface' in table 'View_AMb_Forming' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming.unevenBallSurfaceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPanelDMGNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.PanelDMGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPanelDMGNull()
            Me(Me.tableView_AMb_Forming.PanelDMGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOverLapNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.OverLapColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOverLapNull()
            Me(Me.tableView_AMb_Forming.OverLapColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsZigZagSeamNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.ZigZagSeamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetZigZagSeamNull()
            Me(Me.tableView_AMb_Forming.ZigZagSeamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWrinkleNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.WrinkleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWrinkleNull()
            Me(Me.tableView_AMb_Forming.WrinkleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsArtWorkNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.ArtWorkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetArtWorkNull()
            Me(Me.tableView_AMb_Forming.ArtWorkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsUnbondedPanelsNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.UnbondedPanelsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetUnbondedPanelsNull()
            Me(Me.tableView_AMb_Forming.UnbondedPanelsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSingleOpenStripNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.SingleOpenStripColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSingleOpenStripNull()
            Me(Me.tableView_AMb_Forming.SingleOpenStripColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOpenSeamNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.OpenSeamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOpenSeamNull()
            Me(Me.tableView_AMb_Forming.OpenSeamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPanelCavityNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.PanelCavityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPanelCavityNull()
            Me(Me.tableView_AMb_Forming.PanelCavityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTouchingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.TouchingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTouchingNull()
            Me(Me.tableView_AMb_Forming.TouchingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOtherPrintingIssueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.OtherPrintingIssueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOtherPrintingIssueNull()
            Me(Me.tableView_AMb_Forming.OtherPrintingIssueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCoreCavityNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.CoreCavityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCoreCavityNull()
            Me(Me.tableView_AMb_Forming.CoreCavityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPUCNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.PUCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPUCNull()
            Me(Me.tableView_AMb_Forming.PUCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSeamClosingGlueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.SeamClosingGlueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSeamClosingGlueNull()
            Me(Me.tableView_AMb_Forming.SeamClosingGlueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBGradeNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.BGradeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBGradeNull()
            Me(Me.tableView_AMb_Forming.BGradeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTotalCheckedNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.TotalCheckedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTotalCheckedNull()
            Me(Me.tableView_AMb_Forming.TotalCheckedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPassNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.PassColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPassNull()
            Me(Me.tableView_AMb_Forming.PassColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsFailNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.FailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetFailNull()
            Me(Me.tableView_AMb_Forming.FailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsStraightCutNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.StraightCutColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetStraightCutNull()
            Me(Me.tableView_AMb_Forming.StraightCutColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCuttingResidualNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.CuttingResidualColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCuttingResidualNull()
            Me(Me.tableView_AMb_Forming.CuttingResidualColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsConnectionBreakNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.ConnectionBreakColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetConnectionBreakNull()
            Me(Me.tableView_AMb_Forming.ConnectionBreakColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsUncureGlueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.UncureGlueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetUncureGlueNull()
            Me(Me.tableView_AMb_Forming.UncureGlueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsExcessiveGlueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.ExcessiveGlueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetExcessiveGlueNull()
            Me(Me.tableView_AMb_Forming.ExcessiveGlueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOverUnderWghtNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.OverUnderWghtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOverUnderWghtNull()
            Me(Me.tableView_AMb_Forming.OverUnderWghtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDisColorNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.DisColorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDisColorNull()
            Me(Me.tableView_AMb_Forming.DisColorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLogoSmearingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.LogoSmearingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLogoSmearingNull()
            Me(Me.tableView_AMb_Forming.LogoSmearingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLogoDoublingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.LogoDoublingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLogoDoublingNull()
            Me(Me.tableView_AMb_Forming.LogoDoublingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBarcodeMissingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.BarcodeMissingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBarcodeMissingNull()
            Me(Me.tableView_AMb_Forming.BarcodeMissingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLargerSpotsNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.LargerSpotsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLargerSpotsNull()
            Me(Me.tableView_AMb_Forming.LargerSpotsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSmearingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.SmearingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSmearingNull()
            Me(Me.tableView_AMb_Forming.SmearingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsHFMissAlignmentNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.HFMissAlignmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetHFMissAlignmentNull()
            Me(Me.tableView_AMb_Forming.HFMissAlignmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBlurPrintingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.BlurPrintingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBlurPrintingNull()
            Me(Me.tableView_AMb_Forming.BlurPrintingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRCheckNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.RCheckColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRCheckNull()
            Me(Me.tableView_AMb_Forming.RCheckColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRPassNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.RPassColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRPassNull()
            Me(Me.tableView_AMb_Forming.RPassColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsairbubbleNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.airbubbleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetairbubbleNull()
            Me(Me.tableView_AMb_Forming.airbubbleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IspressoremarkNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.pressoremarkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetpressoremarkNull()
            Me(Me.tableView_AMb_Forming.pressoremarkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsmissingglueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.missingglueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetmissingglueNull()
            Me(Me.tableView_AMb_Forming.missingglueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsexcussglueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.excussglueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetexcussglueNull()
            Me(Me.tableView_AMb_Forming.excussglueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IswrinklesNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.wrinklesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetwrinklesNull()
            Me(Me.tableView_AMb_Forming.wrinklesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsseamoverlappingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.seamoverlappingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetseamoverlappingNull()
            Me(Me.tableView_AMb_Forming.seamoverlappingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsnewopenSeamNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.newopenSeamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetnewopenSeamNull()
            Me(Me.tableView_AMb_Forming.newopenSeamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsmaterialdefectsNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.materialdefectsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetmaterialdefectsNull()
            Me(Me.tableView_AMb_Forming.materialdefectsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IswrongartworkNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.wrongartworkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetwrongartworkNull()
            Me(Me.tableView_AMb_Forming.wrongartworkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IscolourShapeNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.colourShapeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetcolourShapeNull()
            Me(Me.tableView_AMb_Forming.colourShapeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsanymisprintNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.anymisprintColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetanymisprintNull()
            Me(Me.tableView_AMb_Forming.anymisprintColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsprintmissallignamentNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.printmissallignamentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetprintmissallignamentNull()
            Me(Me.tableView_AMb_Forming.printmissallignamentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsNewTouchingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.NewTouchingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetNewTouchingNull()
            Me(Me.tableView_AMb_Forming.NewTouchingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsheavyprintdefectsNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.heavyprintdefectsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetheavyprintdefectsNull()
            Me(Me.tableView_AMb_Forming.heavyprintdefectsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IscuttingpanelNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.cuttingpanelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetcuttingpanelNull()
            Me(Me.tableView_AMb_Forming.cuttingpanelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IszigzagedgeNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.zigzagedgeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetzigzagedgeNull()
            Me(Me.tableView_AMb_Forming.zigzagedgeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsunshapecutNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.unshapecutColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetunshapecutNull()
            Me(Me.tableView_AMb_Forming.unshapecutColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsunevenBallSurfaceNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming.unevenBallSurfaceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetunevenBallSurfaceNull()
            Me(Me.tableView_AMb_Forming.unevenBallSurfaceColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class View_Daily_SumRow
        Inherits Global.System.Data.DataRow
        
        Private tableView_Daily_Sum As View_Daily_SumDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableView_Daily_Sum = CType(Me.Table,View_Daily_SumDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PanelDMG() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Daily_Sum.PanelDMGColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PanelDMG' in table 'View_Daily_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Daily_Sum.PanelDMGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OverLap() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Daily_Sum.OverLapColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OverLap' in table 'View_Daily_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Daily_Sum.OverLapColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ZigZagSeam() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Daily_Sum.ZigZagSeamColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZigZagSeam' in table 'View_Daily_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Daily_Sum.ZigZagSeamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Wrinkle() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Daily_Sum.WrinkleColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Wrinkle' in table 'View_Daily_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Daily_Sum.WrinkleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ArtWork() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Daily_Sum.ArtWorkColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ArtWork' in table 'View_Daily_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Daily_Sum.ArtWorkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UnbondedPanels() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Daily_Sum.UnbondedPanelsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UnbondedPanels' in table 'View_Daily_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Daily_Sum.UnbondedPanelsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SingleOpenStrip() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Daily_Sum.SingleOpenStripColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SingleOpenStrip' in table 'View_Daily_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Daily_Sum.SingleOpenStripColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OpenSeam() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Daily_Sum.OpenSeamColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OpenSeam' in table 'View_Daily_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Daily_Sum.OpenSeamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PanelCavity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Daily_Sum.PanelCavityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PanelCavity' in table 'View_Daily_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Daily_Sum.PanelCavityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Touching() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Daily_Sum.TouchingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Touching' in table 'View_Daily_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Daily_Sum.TouchingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OtherPrintingIssue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Daily_Sum.OtherPrintingIssueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OtherPrintingIssue' in table 'View_Daily_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Daily_Sum.OtherPrintingIssueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CoreCavity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Daily_Sum.CoreCavityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CoreCavity' in table 'View_Daily_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Daily_Sum.CoreCavityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PUC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Daily_Sum.PUCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PUC' in table 'View_Daily_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Daily_Sum.PUCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SeamClosingGlue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Daily_Sum.SeamClosingGlueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SeamClosingGlue' in table 'View_Daily_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Daily_Sum.SeamClosingGlueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BGrade() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Daily_Sum.BGradeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BGrade' in table 'View_Daily_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Daily_Sum.BGradeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TotalChecked() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Daily_Sum.TotalCheckedColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalChecked' in table 'View_Daily_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Daily_Sum.TotalCheckedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Pass() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Daily_Sum.PassColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pass' in table 'View_Daily_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Daily_Sum.PassColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Fail() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Daily_Sum.FailColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Fail' in table 'View_Daily_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Daily_Sum.FailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property StraightCut() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Daily_Sum.StraightCutColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StraightCut' in table 'View_Daily_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Daily_Sum.StraightCutColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CuttingResidual() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Daily_Sum.CuttingResidualColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CuttingResidual' in table 'View_Daily_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Daily_Sum.CuttingResidualColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ConnectionBreak() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Daily_Sum.ConnectionBreakColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConnectionBreak' in table 'View_Daily_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Daily_Sum.ConnectionBreakColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UncureGlue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Daily_Sum.UncureGlueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UncureGlue' in table 'View_Daily_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Daily_Sum.UncureGlueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ExcessiveGlue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Daily_Sum.ExcessiveGlueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExcessiveGlue' in table 'View_Daily_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Daily_Sum.ExcessiveGlueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OverUnderWght() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Daily_Sum.OverUnderWghtColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OverUnderWght' in table 'View_Daily_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Daily_Sum.OverUnderWghtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DisColor() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Daily_Sum.DisColorColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DisColor' in table 'View_Daily_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Daily_Sum.DisColorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LogoSmearing() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Daily_Sum.LogoSmearingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LogoSmearing' in table 'View_Daily_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Daily_Sum.LogoSmearingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LogoDoubling() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Daily_Sum.LogoDoublingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LogoDoubling' in table 'View_Daily_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Daily_Sum.LogoDoublingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BarcodeMissing() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Daily_Sum.BarcodeMissingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BarcodeMissing' in table 'View_Daily_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Daily_Sum.BarcodeMissingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LargerSpots() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Daily_Sum.LargerSpotsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LargerSpots' in table 'View_Daily_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Daily_Sum.LargerSpotsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Smearing() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Daily_Sum.SmearingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Smearing' in table 'View_Daily_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Daily_Sum.SmearingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property HFMissAlignment() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Daily_Sum.HFMissAlignmentColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HFMissAlignment' in table 'View_Daily_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Daily_Sum.HFMissAlignmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RCheck() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Daily_Sum.RCheckColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RCheck' in table 'View_Daily_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Daily_Sum.RCheckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RPass() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Daily_Sum.RPassColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RPass' in table 'View_Daily_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Daily_Sum.RPassColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property MissAlligment() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Daily_Sum.MissAlligmentColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MissAlligment' in table 'View_Daily_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Daily_Sum.MissAlligmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BlurPrinting() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Daily_Sum.BlurPrintingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BlurPrinting' in table 'View_Daily_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Daily_Sum.BlurPrintingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPanelDMGNull() As Boolean
            Return Me.IsNull(Me.tableView_Daily_Sum.PanelDMGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPanelDMGNull()
            Me(Me.tableView_Daily_Sum.PanelDMGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOverLapNull() As Boolean
            Return Me.IsNull(Me.tableView_Daily_Sum.OverLapColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOverLapNull()
            Me(Me.tableView_Daily_Sum.OverLapColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsZigZagSeamNull() As Boolean
            Return Me.IsNull(Me.tableView_Daily_Sum.ZigZagSeamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetZigZagSeamNull()
            Me(Me.tableView_Daily_Sum.ZigZagSeamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWrinkleNull() As Boolean
            Return Me.IsNull(Me.tableView_Daily_Sum.WrinkleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWrinkleNull()
            Me(Me.tableView_Daily_Sum.WrinkleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsArtWorkNull() As Boolean
            Return Me.IsNull(Me.tableView_Daily_Sum.ArtWorkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetArtWorkNull()
            Me(Me.tableView_Daily_Sum.ArtWorkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsUnbondedPanelsNull() As Boolean
            Return Me.IsNull(Me.tableView_Daily_Sum.UnbondedPanelsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetUnbondedPanelsNull()
            Me(Me.tableView_Daily_Sum.UnbondedPanelsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSingleOpenStripNull() As Boolean
            Return Me.IsNull(Me.tableView_Daily_Sum.SingleOpenStripColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSingleOpenStripNull()
            Me(Me.tableView_Daily_Sum.SingleOpenStripColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOpenSeamNull() As Boolean
            Return Me.IsNull(Me.tableView_Daily_Sum.OpenSeamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOpenSeamNull()
            Me(Me.tableView_Daily_Sum.OpenSeamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPanelCavityNull() As Boolean
            Return Me.IsNull(Me.tableView_Daily_Sum.PanelCavityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPanelCavityNull()
            Me(Me.tableView_Daily_Sum.PanelCavityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTouchingNull() As Boolean
            Return Me.IsNull(Me.tableView_Daily_Sum.TouchingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTouchingNull()
            Me(Me.tableView_Daily_Sum.TouchingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOtherPrintingIssueNull() As Boolean
            Return Me.IsNull(Me.tableView_Daily_Sum.OtherPrintingIssueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOtherPrintingIssueNull()
            Me(Me.tableView_Daily_Sum.OtherPrintingIssueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCoreCavityNull() As Boolean
            Return Me.IsNull(Me.tableView_Daily_Sum.CoreCavityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCoreCavityNull()
            Me(Me.tableView_Daily_Sum.CoreCavityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPUCNull() As Boolean
            Return Me.IsNull(Me.tableView_Daily_Sum.PUCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPUCNull()
            Me(Me.tableView_Daily_Sum.PUCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSeamClosingGlueNull() As Boolean
            Return Me.IsNull(Me.tableView_Daily_Sum.SeamClosingGlueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSeamClosingGlueNull()
            Me(Me.tableView_Daily_Sum.SeamClosingGlueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBGradeNull() As Boolean
            Return Me.IsNull(Me.tableView_Daily_Sum.BGradeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBGradeNull()
            Me(Me.tableView_Daily_Sum.BGradeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTotalCheckedNull() As Boolean
            Return Me.IsNull(Me.tableView_Daily_Sum.TotalCheckedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTotalCheckedNull()
            Me(Me.tableView_Daily_Sum.TotalCheckedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPassNull() As Boolean
            Return Me.IsNull(Me.tableView_Daily_Sum.PassColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPassNull()
            Me(Me.tableView_Daily_Sum.PassColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsFailNull() As Boolean
            Return Me.IsNull(Me.tableView_Daily_Sum.FailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetFailNull()
            Me(Me.tableView_Daily_Sum.FailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsStraightCutNull() As Boolean
            Return Me.IsNull(Me.tableView_Daily_Sum.StraightCutColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetStraightCutNull()
            Me(Me.tableView_Daily_Sum.StraightCutColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCuttingResidualNull() As Boolean
            Return Me.IsNull(Me.tableView_Daily_Sum.CuttingResidualColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCuttingResidualNull()
            Me(Me.tableView_Daily_Sum.CuttingResidualColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsConnectionBreakNull() As Boolean
            Return Me.IsNull(Me.tableView_Daily_Sum.ConnectionBreakColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetConnectionBreakNull()
            Me(Me.tableView_Daily_Sum.ConnectionBreakColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsUncureGlueNull() As Boolean
            Return Me.IsNull(Me.tableView_Daily_Sum.UncureGlueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetUncureGlueNull()
            Me(Me.tableView_Daily_Sum.UncureGlueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsExcessiveGlueNull() As Boolean
            Return Me.IsNull(Me.tableView_Daily_Sum.ExcessiveGlueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetExcessiveGlueNull()
            Me(Me.tableView_Daily_Sum.ExcessiveGlueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOverUnderWghtNull() As Boolean
            Return Me.IsNull(Me.tableView_Daily_Sum.OverUnderWghtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOverUnderWghtNull()
            Me(Me.tableView_Daily_Sum.OverUnderWghtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDisColorNull() As Boolean
            Return Me.IsNull(Me.tableView_Daily_Sum.DisColorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDisColorNull()
            Me(Me.tableView_Daily_Sum.DisColorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLogoSmearingNull() As Boolean
            Return Me.IsNull(Me.tableView_Daily_Sum.LogoSmearingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLogoSmearingNull()
            Me(Me.tableView_Daily_Sum.LogoSmearingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLogoDoublingNull() As Boolean
            Return Me.IsNull(Me.tableView_Daily_Sum.LogoDoublingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLogoDoublingNull()
            Me(Me.tableView_Daily_Sum.LogoDoublingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBarcodeMissingNull() As Boolean
            Return Me.IsNull(Me.tableView_Daily_Sum.BarcodeMissingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBarcodeMissingNull()
            Me(Me.tableView_Daily_Sum.BarcodeMissingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLargerSpotsNull() As Boolean
            Return Me.IsNull(Me.tableView_Daily_Sum.LargerSpotsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLargerSpotsNull()
            Me(Me.tableView_Daily_Sum.LargerSpotsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSmearingNull() As Boolean
            Return Me.IsNull(Me.tableView_Daily_Sum.SmearingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSmearingNull()
            Me(Me.tableView_Daily_Sum.SmearingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsHFMissAlignmentNull() As Boolean
            Return Me.IsNull(Me.tableView_Daily_Sum.HFMissAlignmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetHFMissAlignmentNull()
            Me(Me.tableView_Daily_Sum.HFMissAlignmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRCheckNull() As Boolean
            Return Me.IsNull(Me.tableView_Daily_Sum.RCheckColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRCheckNull()
            Me(Me.tableView_Daily_Sum.RCheckColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRPassNull() As Boolean
            Return Me.IsNull(Me.tableView_Daily_Sum.RPassColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRPassNull()
            Me(Me.tableView_Daily_Sum.RPassColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsMissAlligmentNull() As Boolean
            Return Me.IsNull(Me.tableView_Daily_Sum.MissAlligmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetMissAlligmentNull()
            Me(Me.tableView_Daily_Sum.MissAlligmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBlurPrintingNull() As Boolean
            Return Me.IsNull(Me.tableView_Daily_Sum.BlurPrintingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBlurPrintingNull()
            Me(Me.tableView_Daily_Sum.BlurPrintingColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class View_AMb_Article_Wise_SumRow
        Inherits Global.System.Data.DataRow
        
        Private tableView_AMb_Article_Wise_Sum As View_AMb_Article_Wise_SumDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableView_AMb_Article_Wise_Sum = CType(Me.Table,View_AMb_Article_Wise_SumDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PanelDMG() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.PanelDMGColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PanelDMG' in table 'View_AMb_Article Wise_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.PanelDMGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OverLap() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.OverLapColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OverLap' in table 'View_AMb_Article Wise_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.OverLapColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ZigZagSeam() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.ZigZagSeamColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZigZagSeam' in table 'View_AMb_Article Wise_Sum' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.ZigZagSeamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Wrinkle() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.WrinkleColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Wrinkle' in table 'View_AMb_Article Wise_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.WrinkleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ArtWork() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.ArtWorkColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ArtWork' in table 'View_AMb_Article Wise_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.ArtWorkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UnbondedPanels() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.UnbondedPanelsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UnbondedPanels' in table 'View_AMb_Article Wise_Sum' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.UnbondedPanelsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SingleOpenStrip() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.SingleOpenStripColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SingleOpenStrip' in table 'View_AMb_Article Wise_Sum' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.SingleOpenStripColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OpenSeam() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.OpenSeamColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OpenSeam' in table 'View_AMb_Article Wise_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.OpenSeamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PanelCavity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.PanelCavityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PanelCavity' in table 'View_AMb_Article Wise_Sum' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.PanelCavityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Touching() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.TouchingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Touching' in table 'View_AMb_Article Wise_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.TouchingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OtherPrintingIssue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.OtherPrintingIssueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OtherPrintingIssue' in table 'View_AMb_Article Wise_Sum' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.OtherPrintingIssueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CoreCavity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.CoreCavityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CoreCavity' in table 'View_AMb_Article Wise_Sum' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.CoreCavityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PUC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.PUCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PUC' in table 'View_AMb_Article Wise_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.PUCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SeamClosingGlue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.SeamClosingGlueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SeamClosingGlue' in table 'View_AMb_Article Wise_Sum' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.SeamClosingGlueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BGrade() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.BGradeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BGrade' in table 'View_AMb_Article Wise_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.BGradeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TotalChecked() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.TotalCheckedColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalChecked' in table 'View_AMb_Article Wise_Sum' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.TotalCheckedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Pass() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.PassColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pass' in table 'View_AMb_Article Wise_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.PassColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Fail() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.FailColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Fail' in table 'View_AMb_Article Wise_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.FailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property StraightCut() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.StraightCutColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StraightCut' in table 'View_AMb_Article Wise_Sum' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.StraightCutColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CuttingResidual() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.CuttingResidualColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CuttingResidual' in table 'View_AMb_Article Wise_Sum' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.CuttingResidualColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ConnectionBreak() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.ConnectionBreakColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConnectionBreak' in table 'View_AMb_Article Wise_Sum' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.ConnectionBreakColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UncureGlue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.UncureGlueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UncureGlue' in table 'View_AMb_Article Wise_Sum' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.UncureGlueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ExcessiveGlue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.ExcessiveGlueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExcessiveGlue' in table 'View_AMb_Article Wise_Sum' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.ExcessiveGlueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OverUnderWght() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.OverUnderWghtColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OverUnderWght' in table 'View_AMb_Article Wise_Sum' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.OverUnderWghtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property MissAlligment() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.MissAlligmentColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MissAlligment' in table 'View_AMb_Article Wise_Sum' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.MissAlligmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DisColor() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.DisColorColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DisColor' in table 'View_AMb_Article Wise_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.DisColorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LogoSmearing() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.LogoSmearingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LogoSmearing' in table 'View_AMb_Article Wise_Sum' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.LogoSmearingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LogoDoubling() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.LogoDoublingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LogoDoubling' in table 'View_AMb_Article Wise_Sum' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.LogoDoublingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BarcodeMissing() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.BarcodeMissingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BarcodeMissing' in table 'View_AMb_Article Wise_Sum' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.BarcodeMissingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LargerSpots() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.LargerSpotsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LargerSpots' in table 'View_AMb_Article Wise_Sum' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.LargerSpotsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Smearing() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.SmearingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Smearing' in table 'View_AMb_Article Wise_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.SmearingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property HFMissAlignment() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.HFMissAlignmentColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HFMissAlignment' in table 'View_AMb_Article Wise_Sum' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.HFMissAlignmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RCheck() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.RCheckColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RCheck' in table 'View_AMb_Article Wise_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.RCheckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RPass() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.RPassColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RPass' in table 'View_AMb_Article Wise_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.RPassColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BlurPrinting() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.BlurPrintingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BlurPrinting' in table 'View_AMb_Article Wise_Sum' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.BlurPrintingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property airbubble() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.airbubbleColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'airbubble' in table 'View_AMb_Article Wise_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.airbubbleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property pressoremark() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.pressoremarkColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pressoremark' in table 'View_AMb_Article Wise_Sum' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.pressoremarkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property missingglue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.missingglueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'missingglue' in table 'View_AMb_Article Wise_Sum' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.missingglueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property excussglue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.excussglueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'excussglue' in table 'View_AMb_Article Wise_Sum' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.excussglueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property wrinkles() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.wrinklesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'wrinkles' in table 'View_AMb_Article Wise_Sum' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.wrinklesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property seamoverlapping() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.seamoverlappingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'seamoverlapping' in table 'View_AMb_Article Wise_Sum' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.seamoverlappingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property newopenSeam() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.newopenSeamColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'newopenSeam' in table 'View_AMb_Article Wise_Sum' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.newopenSeamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property materialdefects() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.materialdefectsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'materialdefects' in table 'View_AMb_Article Wise_Sum' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.materialdefectsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property colourShape() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.colourShapeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'colourShape' in table 'View_AMb_Article Wise_Sum' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.colourShapeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property anymisprint() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.anymisprintColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'anymisprint' in table 'View_AMb_Article Wise_Sum' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.anymisprintColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property printmissallignament() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.printmissallignamentColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'printmissallignament' in table 'View_AMb_Article Wise_Sum' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.printmissallignamentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NewTouching() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.NewTouchingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NewTouching' in table 'View_AMb_Article Wise_Sum' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.NewTouchingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property heavyprintdefects() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.heavyprintdefectsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'heavyprintdefects' in table 'View_AMb_Article Wise_Sum' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.heavyprintdefectsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property cuttingpanel() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.cuttingpanelColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cuttingpanel' in table 'View_AMb_Article Wise_Sum' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.cuttingpanelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property zigzagedge() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.zigzagedgeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'zigzagedge' in table 'View_AMb_Article Wise_Sum' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.zigzagedgeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property unshapecut() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.unshapecutColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'unshapecut' in table 'View_AMb_Article Wise_Sum' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.unshapecutColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property unevenBallSurface() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.unevenBallSurfaceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'unevenBallSurface' in table 'View_AMb_Article Wise_Sum' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.unevenBallSurfaceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property wrongartwork() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Sum.wrongartworkColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'wrongartwork' in table 'View_AMb_Article Wise_Sum' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Sum.wrongartworkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPanelDMGNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.PanelDMGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPanelDMGNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.PanelDMGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOverLapNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.OverLapColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOverLapNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.OverLapColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsZigZagSeamNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.ZigZagSeamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetZigZagSeamNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.ZigZagSeamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWrinkleNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.WrinkleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWrinkleNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.WrinkleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsArtWorkNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.ArtWorkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetArtWorkNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.ArtWorkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsUnbondedPanelsNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.UnbondedPanelsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetUnbondedPanelsNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.UnbondedPanelsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSingleOpenStripNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.SingleOpenStripColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSingleOpenStripNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.SingleOpenStripColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOpenSeamNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.OpenSeamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOpenSeamNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.OpenSeamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPanelCavityNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.PanelCavityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPanelCavityNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.PanelCavityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTouchingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.TouchingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTouchingNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.TouchingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOtherPrintingIssueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.OtherPrintingIssueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOtherPrintingIssueNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.OtherPrintingIssueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCoreCavityNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.CoreCavityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCoreCavityNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.CoreCavityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPUCNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.PUCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPUCNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.PUCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSeamClosingGlueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.SeamClosingGlueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSeamClosingGlueNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.SeamClosingGlueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBGradeNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.BGradeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBGradeNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.BGradeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTotalCheckedNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.TotalCheckedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTotalCheckedNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.TotalCheckedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPassNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.PassColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPassNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.PassColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsFailNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.FailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetFailNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.FailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsStraightCutNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.StraightCutColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetStraightCutNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.StraightCutColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCuttingResidualNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.CuttingResidualColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCuttingResidualNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.CuttingResidualColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsConnectionBreakNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.ConnectionBreakColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetConnectionBreakNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.ConnectionBreakColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsUncureGlueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.UncureGlueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetUncureGlueNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.UncureGlueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsExcessiveGlueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.ExcessiveGlueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetExcessiveGlueNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.ExcessiveGlueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOverUnderWghtNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.OverUnderWghtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOverUnderWghtNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.OverUnderWghtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsMissAlligmentNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.MissAlligmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetMissAlligmentNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.MissAlligmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDisColorNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.DisColorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDisColorNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.DisColorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLogoSmearingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.LogoSmearingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLogoSmearingNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.LogoSmearingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLogoDoublingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.LogoDoublingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLogoDoublingNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.LogoDoublingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBarcodeMissingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.BarcodeMissingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBarcodeMissingNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.BarcodeMissingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLargerSpotsNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.LargerSpotsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLargerSpotsNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.LargerSpotsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSmearingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.SmearingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSmearingNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.SmearingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsHFMissAlignmentNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.HFMissAlignmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetHFMissAlignmentNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.HFMissAlignmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRCheckNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.RCheckColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRCheckNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.RCheckColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRPassNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.RPassColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRPassNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.RPassColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBlurPrintingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.BlurPrintingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBlurPrintingNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.BlurPrintingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsairbubbleNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.airbubbleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetairbubbleNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.airbubbleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IspressoremarkNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.pressoremarkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetpressoremarkNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.pressoremarkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsmissingglueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.missingglueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetmissingglueNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.missingglueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsexcussglueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.excussglueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetexcussglueNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.excussglueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IswrinklesNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.wrinklesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetwrinklesNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.wrinklesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsseamoverlappingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.seamoverlappingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetseamoverlappingNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.seamoverlappingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsnewopenSeamNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.newopenSeamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetnewopenSeamNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.newopenSeamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsmaterialdefectsNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.materialdefectsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetmaterialdefectsNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.materialdefectsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IscolourShapeNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.colourShapeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetcolourShapeNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.colourShapeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsanymisprintNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.anymisprintColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetanymisprintNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.anymisprintColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsprintmissallignamentNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.printmissallignamentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetprintmissallignamentNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.printmissallignamentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsNewTouchingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.NewTouchingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetNewTouchingNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.NewTouchingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsheavyprintdefectsNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.heavyprintdefectsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetheavyprintdefectsNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.heavyprintdefectsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IscuttingpanelNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.cuttingpanelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetcuttingpanelNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.cuttingpanelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IszigzagedgeNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.zigzagedgeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetzigzagedgeNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.zigzagedgeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsunshapecutNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.unshapecutColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetunshapecutNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.unshapecutColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsunevenBallSurfaceNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.unevenBallSurfaceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetunevenBallSurfaceNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.unevenBallSurfaceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IswrongartworkNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Sum.wrongartworkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetwrongartworkNull()
            Me(Me.tableView_AMb_Article_Wise_Sum.wrongartworkColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tbl_PC_AMB_LineRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_PC_AMB_Line As tbl_PC_AMB_LineDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_PC_AMB_Line = CType(Me.Table,tbl_PC_AMB_LineDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LineID() As Integer
            Get
                Return CType(Me(Me.tabletbl_PC_AMB_Line.LineIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Line.LineIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LineName() As String
            Get
                Return CType(Me(Me.tabletbl_PC_AMB_Line.LineNameColumn),String)
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Line.LineNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TotalStrength() As Decimal
            Get
                Return CType(Me(Me.tabletbl_PC_AMB_Line.TotalStrengthColumn),Decimal)
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Line.TotalStrengthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PackingStrength() As Decimal
            Get
                Return CType(Me(Me.tabletbl_PC_AMB_Line.PackingStrengthColumn),Decimal)
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Line.PackingStrengthColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class View_max_FromingRow
        Inherits Global.System.Data.DataRow
        
        Private tableView_max_Froming As View_max_FromingDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableView_max_Froming = CType(Me.Table,View_max_FromingDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TranID() As Integer
            Get
                Return CType(Me(Me.tableView_max_Froming.TranIDColumn),Integer)
            End Get
            Set
                Me(Me.tableView_max_Froming.TranIDColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class View_AMB_Incentive_RFTRow
        Inherits Global.System.Data.DataRow
        
        Private tableView_AMB_Incentive_RFT As View_AMB_Incentive_RFTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableView_AMB_Incentive_RFT = CType(Me.Table,View_AMB_Incentive_RFTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PassQty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMB_Incentive_RFT.PassQtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PassQty' in table 'View_AMB_Incentive_RFT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMB_Incentive_RFT.PassQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TotalChecked() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMB_Incentive_RFT.TotalCheckedColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalChecked' in table 'View_AMB_Incentive_RFT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMB_Incentive_RFT.TotalCheckedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FailQty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMB_Incentive_RFT.FailQtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FailQty' in table 'View_AMB_Incentive_RFT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMB_Incentive_RFT.FailQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RFT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMB_Incentive_RFT.RFTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RFT' in table 'View_AMB_Incentive_RFT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMB_Incentive_RFT.RFTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPassQtyNull() As Boolean
            Return Me.IsNull(Me.tableView_AMB_Incentive_RFT.PassQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPassQtyNull()
            Me(Me.tableView_AMB_Incentive_RFT.PassQtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTotalCheckedNull() As Boolean
            Return Me.IsNull(Me.tableView_AMB_Incentive_RFT.TotalCheckedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTotalCheckedNull()
            Me(Me.tableView_AMB_Incentive_RFT.TotalCheckedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsFailQtyNull() As Boolean
            Return Me.IsNull(Me.tableView_AMB_Incentive_RFT.FailQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetFailQtyNull()
            Me(Me.tableView_AMB_Incentive_RFT.FailQtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRFTNull() As Boolean
            Return Me.IsNull(Me.tableView_AMB_Incentive_RFT.RFTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRFTNull()
            Me(Me.tableView_AMB_Incentive_RFT.RFTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class View_AMb_RepairRow
        Inherits Global.System.Data.DataRow
        
        Private tableView_AMb_Repair As View_AMb_RepairDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableView_AMb_Repair = CType(Me.Table,View_AMb_RepairDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PanelDMG() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Repair.PanelDMGColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PanelDMG' in table 'View_AMb_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Repair.PanelDMGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OverLap() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Repair.OverLapColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OverLap' in table 'View_AMb_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Repair.OverLapColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ZigZagSeam() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Repair.ZigZagSeamColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZigZagSeam' in table 'View_AMb_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Repair.ZigZagSeamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Wrinkle() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Repair.WrinkleColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Wrinkle' in table 'View_AMb_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Repair.WrinkleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ArtWork() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Repair.ArtWorkColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ArtWork' in table 'View_AMb_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Repair.ArtWorkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UnbondedPanels() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Repair.UnbondedPanelsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UnbondedPanels' in table 'View_AMb_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Repair.UnbondedPanelsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SingleOpenStrip() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Repair.SingleOpenStripColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SingleOpenStrip' in table 'View_AMb_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Repair.SingleOpenStripColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OpenSeam() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Repair.OpenSeamColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OpenSeam' in table 'View_AMb_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Repair.OpenSeamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PanelCavity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Repair.PanelCavityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PanelCavity' in table 'View_AMb_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Repair.PanelCavityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Touching() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Repair.TouchingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Touching' in table 'View_AMb_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Repair.TouchingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OtherPrintingIssue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Repair.OtherPrintingIssueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OtherPrintingIssue' in table 'View_AMb_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Repair.OtherPrintingIssueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CoreCavity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Repair.CoreCavityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CoreCavity' in table 'View_AMb_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Repair.CoreCavityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PUC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Repair.PUCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PUC' in table 'View_AMb_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Repair.PUCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SeamClosingGlue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Repair.SeamClosingGlueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SeamClosingGlue' in table 'View_AMb_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Repair.SeamClosingGlueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BGrade() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Repair.BGradeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BGrade' in table 'View_AMb_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Repair.BGradeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TotalChecked() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Repair.TotalCheckedColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalChecked' in table 'View_AMb_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Repair.TotalCheckedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Pass() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Repair.PassColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pass' in table 'View_AMb_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Repair.PassColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Fail() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Repair.FailColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Fail' in table 'View_AMb_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Repair.FailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property StraightCut() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Repair.StraightCutColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StraightCut' in table 'View_AMb_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Repair.StraightCutColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CuttingResidual() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Repair.CuttingResidualColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CuttingResidual' in table 'View_AMb_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Repair.CuttingResidualColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ConnectionBreak() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Repair.ConnectionBreakColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConnectionBreak' in table 'View_AMb_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Repair.ConnectionBreakColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UncureGlue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Repair.UncureGlueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UncureGlue' in table 'View_AMb_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Repair.UncureGlueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ExcessiveGlue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Repair.ExcessiveGlueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExcessiveGlue' in table 'View_AMb_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Repair.ExcessiveGlueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OverUnderWght() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Repair.OverUnderWghtColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OverUnderWght' in table 'View_AMb_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Repair.OverUnderWghtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DisColor() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Repair.DisColorColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DisColor' in table 'View_AMb_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Repair.DisColorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LogoSmearing() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Repair.LogoSmearingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LogoSmearing' in table 'View_AMb_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Repair.LogoSmearingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LogoDoubling() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Repair.LogoDoublingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LogoDoubling' in table 'View_AMb_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Repair.LogoDoublingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BarcodeMissing() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Repair.BarcodeMissingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BarcodeMissing' in table 'View_AMb_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Repair.BarcodeMissingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LargerSpots() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Repair.LargerSpotsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LargerSpots' in table 'View_AMb_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Repair.LargerSpotsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Smearing() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Repair.SmearingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Smearing' in table 'View_AMb_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Repair.SmearingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property HFMissAlignment() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Repair.HFMissAlignmentColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HFMissAlignment' in table 'View_AMb_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Repair.HFMissAlignmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BlurPrinting() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Repair.BlurPrintingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BlurPrinting' in table 'View_AMb_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Repair.BlurPrintingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RCheck() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Repair.RCheckColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RCheck' in table 'View_AMb_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Repair.RCheckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RPass() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Repair.RPassColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RPass' in table 'View_AMb_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Repair.RPassColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPanelDMGNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Repair.PanelDMGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPanelDMGNull()
            Me(Me.tableView_AMb_Repair.PanelDMGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOverLapNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Repair.OverLapColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOverLapNull()
            Me(Me.tableView_AMb_Repair.OverLapColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsZigZagSeamNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Repair.ZigZagSeamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetZigZagSeamNull()
            Me(Me.tableView_AMb_Repair.ZigZagSeamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWrinkleNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Repair.WrinkleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWrinkleNull()
            Me(Me.tableView_AMb_Repair.WrinkleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsArtWorkNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Repair.ArtWorkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetArtWorkNull()
            Me(Me.tableView_AMb_Repair.ArtWorkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsUnbondedPanelsNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Repair.UnbondedPanelsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetUnbondedPanelsNull()
            Me(Me.tableView_AMb_Repair.UnbondedPanelsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSingleOpenStripNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Repair.SingleOpenStripColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSingleOpenStripNull()
            Me(Me.tableView_AMb_Repair.SingleOpenStripColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOpenSeamNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Repair.OpenSeamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOpenSeamNull()
            Me(Me.tableView_AMb_Repair.OpenSeamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPanelCavityNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Repair.PanelCavityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPanelCavityNull()
            Me(Me.tableView_AMb_Repair.PanelCavityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTouchingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Repair.TouchingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTouchingNull()
            Me(Me.tableView_AMb_Repair.TouchingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOtherPrintingIssueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Repair.OtherPrintingIssueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOtherPrintingIssueNull()
            Me(Me.tableView_AMb_Repair.OtherPrintingIssueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCoreCavityNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Repair.CoreCavityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCoreCavityNull()
            Me(Me.tableView_AMb_Repair.CoreCavityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPUCNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Repair.PUCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPUCNull()
            Me(Me.tableView_AMb_Repair.PUCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSeamClosingGlueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Repair.SeamClosingGlueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSeamClosingGlueNull()
            Me(Me.tableView_AMb_Repair.SeamClosingGlueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBGradeNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Repair.BGradeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBGradeNull()
            Me(Me.tableView_AMb_Repair.BGradeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTotalCheckedNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Repair.TotalCheckedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTotalCheckedNull()
            Me(Me.tableView_AMb_Repair.TotalCheckedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPassNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Repair.PassColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPassNull()
            Me(Me.tableView_AMb_Repair.PassColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsFailNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Repair.FailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetFailNull()
            Me(Me.tableView_AMb_Repair.FailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsStraightCutNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Repair.StraightCutColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetStraightCutNull()
            Me(Me.tableView_AMb_Repair.StraightCutColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCuttingResidualNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Repair.CuttingResidualColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCuttingResidualNull()
            Me(Me.tableView_AMb_Repair.CuttingResidualColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsConnectionBreakNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Repair.ConnectionBreakColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetConnectionBreakNull()
            Me(Me.tableView_AMb_Repair.ConnectionBreakColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsUncureGlueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Repair.UncureGlueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetUncureGlueNull()
            Me(Me.tableView_AMb_Repair.UncureGlueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsExcessiveGlueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Repair.ExcessiveGlueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetExcessiveGlueNull()
            Me(Me.tableView_AMb_Repair.ExcessiveGlueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOverUnderWghtNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Repair.OverUnderWghtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOverUnderWghtNull()
            Me(Me.tableView_AMb_Repair.OverUnderWghtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDisColorNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Repair.DisColorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDisColorNull()
            Me(Me.tableView_AMb_Repair.DisColorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLogoSmearingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Repair.LogoSmearingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLogoSmearingNull()
            Me(Me.tableView_AMb_Repair.LogoSmearingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLogoDoublingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Repair.LogoDoublingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLogoDoublingNull()
            Me(Me.tableView_AMb_Repair.LogoDoublingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBarcodeMissingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Repair.BarcodeMissingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBarcodeMissingNull()
            Me(Me.tableView_AMb_Repair.BarcodeMissingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLargerSpotsNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Repair.LargerSpotsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLargerSpotsNull()
            Me(Me.tableView_AMb_Repair.LargerSpotsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSmearingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Repair.SmearingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSmearingNull()
            Me(Me.tableView_AMb_Repair.SmearingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsHFMissAlignmentNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Repair.HFMissAlignmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetHFMissAlignmentNull()
            Me(Me.tableView_AMb_Repair.HFMissAlignmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBlurPrintingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Repair.BlurPrintingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBlurPrintingNull()
            Me(Me.tableView_AMb_Repair.BlurPrintingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRCheckNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Repair.RCheckColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRCheckNull()
            Me(Me.tableView_AMb_Repair.RCheckColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRPassNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Repair.RPassColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRPassNull()
            Me(Me.tableView_AMb_Repair.RPassColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class View_AMb_RepairPAssRow
        Inherits Global.System.Data.DataRow
        
        Private tableView_AMb_RepairPAss As View_AMb_RepairPAssDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableView_AMb_RepairPAss = CType(Me.Table,View_AMb_RepairPAssDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PanelDMG() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.PanelDMGColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PanelDMG' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.PanelDMGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OverLap() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.OverLapColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OverLap' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.OverLapColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ZigZagSeam() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.ZigZagSeamColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZigZagSeam' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.ZigZagSeamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Wrinkle() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.WrinkleColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Wrinkle' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.WrinkleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ArtWork() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.ArtWorkColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ArtWork' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.ArtWorkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UnbondedPanels() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.UnbondedPanelsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UnbondedPanels' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.UnbondedPanelsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SingleOpenStrip() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.SingleOpenStripColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SingleOpenStrip' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.SingleOpenStripColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OpenSeam() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.OpenSeamColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OpenSeam' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.OpenSeamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PanelCavity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.PanelCavityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PanelCavity' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.PanelCavityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Touching() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.TouchingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Touching' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.TouchingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OtherPrintingIssue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.OtherPrintingIssueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OtherPrintingIssue' in table 'View_AMb_RepairPAss' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.OtherPrintingIssueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CoreCavity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.CoreCavityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CoreCavity' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.CoreCavityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PUC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.PUCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PUC' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.PUCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SeamClosingGlue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.SeamClosingGlueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SeamClosingGlue' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.SeamClosingGlueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BGrade() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.BGradeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BGrade' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.BGradeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TotalChecked() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.TotalCheckedColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalChecked' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.TotalCheckedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Pass() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.PassColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pass' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.PassColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Fail() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.FailColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Fail' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.FailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property StraightCut() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.StraightCutColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StraightCut' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.StraightCutColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CuttingResidual() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.CuttingResidualColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CuttingResidual' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.CuttingResidualColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ConnectionBreak() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.ConnectionBreakColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConnectionBreak' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.ConnectionBreakColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UncureGlue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.UncureGlueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UncureGlue' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.UncureGlueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ExcessiveGlue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.ExcessiveGlueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExcessiveGlue' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.ExcessiveGlueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OverUnderWght() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.OverUnderWghtColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OverUnderWght' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.OverUnderWghtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DisColor() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.DisColorColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DisColor' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.DisColorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LogoSmearing() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.LogoSmearingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LogoSmearing' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.LogoSmearingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LogoDoubling() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.LogoDoublingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LogoDoubling' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.LogoDoublingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BarcodeMissing() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.BarcodeMissingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BarcodeMissing' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.BarcodeMissingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LargerSpots() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.LargerSpotsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LargerSpots' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.LargerSpotsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Smearing() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.SmearingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Smearing' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.SmearingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property HFMissAlignment() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.HFMissAlignmentColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HFMissAlignment' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.HFMissAlignmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BlurPrinting() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.BlurPrintingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BlurPrinting' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.BlurPrintingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RCheck() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.RCheckColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RCheck' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.RCheckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RPass() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.RPassColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RPass' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.RPassColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property unevenBallSurface() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.unevenBallSurfaceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'unevenBallSurface' in table 'View_AMb_RepairPAss' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.unevenBallSurfaceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property unshapecut() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.unshapecutColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'unshapecut' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.unshapecutColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property cuttingpanel() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.cuttingpanelColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cuttingpanel' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.cuttingpanelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property zigzagedge() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.zigzagedgeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'zigzagedge' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.zigzagedgeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property heavyprintdefects() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.heavyprintdefectsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'heavyprintdefects' in table 'View_AMb_RepairPAss' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.heavyprintdefectsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NewTouching() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.NewTouchingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NewTouching' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.NewTouchingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property printmissallignament() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.printmissallignamentColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'printmissallignament' in table 'View_AMb_RepairPAss' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.printmissallignamentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property anymisprint() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.anymisprintColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'anymisprint' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.anymisprintColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property colourShape() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.colourShapeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'colourShape' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.colourShapeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property wrongartwork() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.wrongartworkColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'wrongartwork' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.wrongartworkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property materialdefects() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.materialdefectsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'materialdefects' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.materialdefectsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property newopenSeam() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.newopenSeamColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'newopenSeam' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.newopenSeamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property seamoverlapping() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.seamoverlappingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'seamoverlapping' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.seamoverlappingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property wrinkles() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.wrinklesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'wrinkles' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.wrinklesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property excussglue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.excussglueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'excussglue' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.excussglueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property missingglue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.missingglueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'missingglue' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.missingglueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property pressoremark() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.pressoremarkColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pressoremark' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.pressoremarkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property airbubble() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_RepairPAss.airbubbleColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'airbubble' in table 'View_AMb_RepairPAss' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_RepairPAss.airbubbleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPanelDMGNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.PanelDMGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPanelDMGNull()
            Me(Me.tableView_AMb_RepairPAss.PanelDMGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOverLapNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.OverLapColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOverLapNull()
            Me(Me.tableView_AMb_RepairPAss.OverLapColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsZigZagSeamNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.ZigZagSeamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetZigZagSeamNull()
            Me(Me.tableView_AMb_RepairPAss.ZigZagSeamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWrinkleNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.WrinkleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWrinkleNull()
            Me(Me.tableView_AMb_RepairPAss.WrinkleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsArtWorkNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.ArtWorkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetArtWorkNull()
            Me(Me.tableView_AMb_RepairPAss.ArtWorkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsUnbondedPanelsNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.UnbondedPanelsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetUnbondedPanelsNull()
            Me(Me.tableView_AMb_RepairPAss.UnbondedPanelsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSingleOpenStripNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.SingleOpenStripColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSingleOpenStripNull()
            Me(Me.tableView_AMb_RepairPAss.SingleOpenStripColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOpenSeamNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.OpenSeamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOpenSeamNull()
            Me(Me.tableView_AMb_RepairPAss.OpenSeamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPanelCavityNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.PanelCavityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPanelCavityNull()
            Me(Me.tableView_AMb_RepairPAss.PanelCavityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTouchingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.TouchingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTouchingNull()
            Me(Me.tableView_AMb_RepairPAss.TouchingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOtherPrintingIssueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.OtherPrintingIssueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOtherPrintingIssueNull()
            Me(Me.tableView_AMb_RepairPAss.OtherPrintingIssueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCoreCavityNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.CoreCavityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCoreCavityNull()
            Me(Me.tableView_AMb_RepairPAss.CoreCavityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPUCNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.PUCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPUCNull()
            Me(Me.tableView_AMb_RepairPAss.PUCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSeamClosingGlueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.SeamClosingGlueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSeamClosingGlueNull()
            Me(Me.tableView_AMb_RepairPAss.SeamClosingGlueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBGradeNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.BGradeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBGradeNull()
            Me(Me.tableView_AMb_RepairPAss.BGradeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTotalCheckedNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.TotalCheckedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTotalCheckedNull()
            Me(Me.tableView_AMb_RepairPAss.TotalCheckedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPassNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.PassColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPassNull()
            Me(Me.tableView_AMb_RepairPAss.PassColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsFailNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.FailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetFailNull()
            Me(Me.tableView_AMb_RepairPAss.FailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsStraightCutNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.StraightCutColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetStraightCutNull()
            Me(Me.tableView_AMb_RepairPAss.StraightCutColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCuttingResidualNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.CuttingResidualColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCuttingResidualNull()
            Me(Me.tableView_AMb_RepairPAss.CuttingResidualColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsConnectionBreakNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.ConnectionBreakColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetConnectionBreakNull()
            Me(Me.tableView_AMb_RepairPAss.ConnectionBreakColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsUncureGlueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.UncureGlueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetUncureGlueNull()
            Me(Me.tableView_AMb_RepairPAss.UncureGlueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsExcessiveGlueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.ExcessiveGlueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetExcessiveGlueNull()
            Me(Me.tableView_AMb_RepairPAss.ExcessiveGlueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOverUnderWghtNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.OverUnderWghtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOverUnderWghtNull()
            Me(Me.tableView_AMb_RepairPAss.OverUnderWghtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDisColorNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.DisColorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDisColorNull()
            Me(Me.tableView_AMb_RepairPAss.DisColorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLogoSmearingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.LogoSmearingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLogoSmearingNull()
            Me(Me.tableView_AMb_RepairPAss.LogoSmearingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLogoDoublingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.LogoDoublingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLogoDoublingNull()
            Me(Me.tableView_AMb_RepairPAss.LogoDoublingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBarcodeMissingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.BarcodeMissingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBarcodeMissingNull()
            Me(Me.tableView_AMb_RepairPAss.BarcodeMissingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLargerSpotsNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.LargerSpotsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLargerSpotsNull()
            Me(Me.tableView_AMb_RepairPAss.LargerSpotsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSmearingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.SmearingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSmearingNull()
            Me(Me.tableView_AMb_RepairPAss.SmearingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsHFMissAlignmentNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.HFMissAlignmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetHFMissAlignmentNull()
            Me(Me.tableView_AMb_RepairPAss.HFMissAlignmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBlurPrintingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.BlurPrintingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBlurPrintingNull()
            Me(Me.tableView_AMb_RepairPAss.BlurPrintingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRCheckNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.RCheckColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRCheckNull()
            Me(Me.tableView_AMb_RepairPAss.RCheckColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRPassNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.RPassColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRPassNull()
            Me(Me.tableView_AMb_RepairPAss.RPassColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsunevenBallSurfaceNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.unevenBallSurfaceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetunevenBallSurfaceNull()
            Me(Me.tableView_AMb_RepairPAss.unevenBallSurfaceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsunshapecutNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.unshapecutColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetunshapecutNull()
            Me(Me.tableView_AMb_RepairPAss.unshapecutColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IscuttingpanelNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.cuttingpanelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetcuttingpanelNull()
            Me(Me.tableView_AMb_RepairPAss.cuttingpanelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IszigzagedgeNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.zigzagedgeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetzigzagedgeNull()
            Me(Me.tableView_AMb_RepairPAss.zigzagedgeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsheavyprintdefectsNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.heavyprintdefectsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetheavyprintdefectsNull()
            Me(Me.tableView_AMb_RepairPAss.heavyprintdefectsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsNewTouchingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.NewTouchingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetNewTouchingNull()
            Me(Me.tableView_AMb_RepairPAss.NewTouchingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsprintmissallignamentNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.printmissallignamentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetprintmissallignamentNull()
            Me(Me.tableView_AMb_RepairPAss.printmissallignamentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsanymisprintNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.anymisprintColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetanymisprintNull()
            Me(Me.tableView_AMb_RepairPAss.anymisprintColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IscolourShapeNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.colourShapeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetcolourShapeNull()
            Me(Me.tableView_AMb_RepairPAss.colourShapeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IswrongartworkNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.wrongartworkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetwrongartworkNull()
            Me(Me.tableView_AMb_RepairPAss.wrongartworkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsmaterialdefectsNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.materialdefectsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetmaterialdefectsNull()
            Me(Me.tableView_AMb_RepairPAss.materialdefectsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsnewopenSeamNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.newopenSeamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetnewopenSeamNull()
            Me(Me.tableView_AMb_RepairPAss.newopenSeamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsseamoverlappingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.seamoverlappingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetseamoverlappingNull()
            Me(Me.tableView_AMb_RepairPAss.seamoverlappingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IswrinklesNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.wrinklesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetwrinklesNull()
            Me(Me.tableView_AMb_RepairPAss.wrinklesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsexcussglueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.excussglueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetexcussglueNull()
            Me(Me.tableView_AMb_RepairPAss.excussglueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsmissingglueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.missingglueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetmissingglueNull()
            Me(Me.tableView_AMb_RepairPAss.missingglueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IspressoremarkNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.pressoremarkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetpressoremarkNull()
            Me(Me.tableView_AMb_RepairPAss.pressoremarkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsairbubbleNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_RepairPAss.airbubbleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetairbubbleNull()
            Me(Me.tableView_AMb_RepairPAss.airbubbleColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Froming_HourllyRow
        Inherits Global.System.Data.DataRow
        
        Private tableFroming_Hourlly As Froming_HourllyDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFroming_Hourlly = CType(Me.Table,Froming_HourllyDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Checked() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFroming_Hourlly.CheckedColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Checked' in table 'Froming_Hourlly' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFroming_Hourlly.CheckedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Pass() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFroming_Hourlly.PassColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pass' in table 'Froming_Hourlly' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFroming_Hourlly.PassColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Fail() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFroming_Hourlly.FailColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Fail' in table 'Froming_Hourlly' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFroming_Hourlly.FailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property HourName() As String
            Get
                Try 
                    Return CType(Me(Me.tableFroming_Hourlly.HourNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HourName' in table 'Froming_Hourlly' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFroming_Hourlly.HourNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCheckedNull() As Boolean
            Return Me.IsNull(Me.tableFroming_Hourlly.CheckedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCheckedNull()
            Me(Me.tableFroming_Hourlly.CheckedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPassNull() As Boolean
            Return Me.IsNull(Me.tableFroming_Hourlly.PassColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPassNull()
            Me(Me.tableFroming_Hourlly.PassColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsFailNull() As Boolean
            Return Me.IsNull(Me.tableFroming_Hourlly.FailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetFailNull()
            Me(Me.tableFroming_Hourlly.FailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsHourNameNull() As Boolean
            Return Me.IsNull(Me.tableFroming_Hourlly.HourNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetHourNameNull()
            Me(Me.tableFroming_Hourlly.HourNameColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class View_Repair_QtyRow
        Inherits Global.System.Data.DataRow
        
        Private tableView_Repair_Qty As View_Repair_QtyDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableView_Repair_Qty = CType(Me.Table,View_Repair_QtyDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RCheck() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Repair_Qty.RCheckColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RCheck' in table 'View_Repair_Qty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Repair_Qty.RCheckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RPass() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Repair_Qty.RPassColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RPass' in table 'View_Repair_Qty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Repair_Qty.RPassColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RFail() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Repair_Qty.RFailColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RFail' in table 'View_Repair_Qty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Repair_Qty.RFailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRCheckNull() As Boolean
            Return Me.IsNull(Me.tableView_Repair_Qty.RCheckColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRCheckNull()
            Me(Me.tableView_Repair_Qty.RCheckColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRPassNull() As Boolean
            Return Me.IsNull(Me.tableView_Repair_Qty.RPassColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRPassNull()
            Me(Me.tableView_Repair_Qty.RPassColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRFailNull() As Boolean
            Return Me.IsNull(Me.tableView_Repair_Qty.RFailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRFailNull()
            Me(Me.tableView_Repair_Qty.RFailColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class View_Article_Wise_FailRow
        Inherits Global.System.Data.DataRow
        
        Private tableView_Article_Wise_Fail As View_Article_Wise_FailDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableView_Article_Wise_Fail = CType(Me.Table,View_Article_Wise_FailDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PanelDMG() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.PanelDMGColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PanelDMG' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.PanelDMGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OverLap() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.OverLapColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OverLap' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.OverLapColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ZigZagSeam() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.ZigZagSeamColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZigZagSeam' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.ZigZagSeamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Wrinkle() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.WrinkleColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Wrinkle' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.WrinkleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ArtWork() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.ArtWorkColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ArtWork' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.ArtWorkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UnbondedPanels() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.UnbondedPanelsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UnbondedPanels' in table 'View_Article_Wise_Fail' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.UnbondedPanelsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SingleOpenStrip() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.SingleOpenStripColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SingleOpenStrip' in table 'View_Article_Wise_Fail' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.SingleOpenStripColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OpenSeam() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.OpenSeamColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OpenSeam' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.OpenSeamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PanelCavity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.PanelCavityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PanelCavity' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.PanelCavityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Touching() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.TouchingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Touching' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.TouchingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OtherPrintingIssue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.OtherPrintingIssueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OtherPrintingIssue' in table 'View_Article_Wise_Fail' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.OtherPrintingIssueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CoreCavity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.CoreCavityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CoreCavity' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.CoreCavityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PUC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.PUCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PUC' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.PUCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SeamClosingGlue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.SeamClosingGlueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SeamClosingGlue' in table 'View_Article_Wise_Fail' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.SeamClosingGlueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BGrade() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.BGradeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BGrade' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.BGradeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TotalChecked() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.TotalCheckedColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalChecked' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.TotalCheckedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Pass() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.PassColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pass' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.PassColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Fail() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.FailColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Fail' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.FailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property StraightCut() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.StraightCutColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StraightCut' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.StraightCutColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CuttingResidual() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.CuttingResidualColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CuttingResidual' in table 'View_Article_Wise_Fail' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.CuttingResidualColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ConnectionBreak() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.ConnectionBreakColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConnectionBreak' in table 'View_Article_Wise_Fail' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.ConnectionBreakColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UncureGlue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.UncureGlueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UncureGlue' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.UncureGlueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ExcessiveGlue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.ExcessiveGlueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExcessiveGlue' in table 'View_Article_Wise_Fail' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.ExcessiveGlueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OverUnderWght() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.OverUnderWghtColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OverUnderWght' in table 'View_Article_Wise_Fail' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.OverUnderWghtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property MissAlligment() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.MissAlligmentColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MissAlligment' in table 'View_Article_Wise_Fail' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.MissAlligmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DisColor() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.DisColorColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DisColor' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.DisColorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LogoSmearing() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.LogoSmearingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LogoSmearing' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.LogoSmearingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LogoDoubling() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.LogoDoublingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LogoDoubling' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.LogoDoublingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BarcodeMissing() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.BarcodeMissingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BarcodeMissing' in table 'View_Article_Wise_Fail' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.BarcodeMissingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LargerSpots() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.LargerSpotsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LargerSpots' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.LargerSpotsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Smearing() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.SmearingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Smearing' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.SmearingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property HFMissAlignment() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.HFMissAlignmentColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HFMissAlignment' in table 'View_Article_Wise_Fail' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.HFMissAlignmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RCheck() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.RCheckColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RCheck' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.RCheckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RPass() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.RPassColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RPass' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.RPassColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BlurPrinting() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.BlurPrintingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BlurPrinting' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.BlurPrintingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RFail() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.RFailColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RFail' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.RFailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property airbubble() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.airbubbleColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'airbubble' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.airbubbleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property pressoremark() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.pressoremarkColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pressoremark' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.pressoremarkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property missingglue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.missingglueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'missingglue' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.missingglueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property excussglue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.excussglueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'excussglue' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.excussglueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property wrinkles() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.wrinklesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'wrinkles' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.wrinklesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property seamoverlapping() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.seamoverlappingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'seamoverlapping' in table 'View_Article_Wise_Fail' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.seamoverlappingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property newopenSeam() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.newopenSeamColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'newopenSeam' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.newopenSeamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property materialdefects() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.materialdefectsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'materialdefects' in table 'View_Article_Wise_Fail' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.materialdefectsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property wrongartwork() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.wrongartworkColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'wrongartwork' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.wrongartworkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property colourShape() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.colourShapeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'colourShape' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.colourShapeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property anymisprint() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.anymisprintColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'anymisprint' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.anymisprintColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property printmissallignament() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.printmissallignamentColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'printmissallignament' in table 'View_Article_Wise_Fail' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.printmissallignamentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NewTouching() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.NewTouchingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NewTouching' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.NewTouchingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property heavyprintdefects() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.heavyprintdefectsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'heavyprintdefects' in table 'View_Article_Wise_Fail' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.heavyprintdefectsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property cuttingpanel() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.cuttingpanelColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cuttingpanel' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.cuttingpanelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property zigzagedge() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.zigzagedgeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'zigzagedge' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.zigzagedgeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property unshapecut() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.unshapecutColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'unshapecut' in table 'View_Article_Wise_Fail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.unshapecutColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property unevenBallSurface() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Article_Wise_Fail.unevenBallSurfaceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'unevenBallSurface' in table 'View_Article_Wise_Fail' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Article_Wise_Fail.unevenBallSurfaceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPanelDMGNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.PanelDMGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPanelDMGNull()
            Me(Me.tableView_Article_Wise_Fail.PanelDMGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOverLapNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.OverLapColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOverLapNull()
            Me(Me.tableView_Article_Wise_Fail.OverLapColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsZigZagSeamNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.ZigZagSeamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetZigZagSeamNull()
            Me(Me.tableView_Article_Wise_Fail.ZigZagSeamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWrinkleNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.WrinkleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWrinkleNull()
            Me(Me.tableView_Article_Wise_Fail.WrinkleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsArtWorkNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.ArtWorkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetArtWorkNull()
            Me(Me.tableView_Article_Wise_Fail.ArtWorkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsUnbondedPanelsNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.UnbondedPanelsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetUnbondedPanelsNull()
            Me(Me.tableView_Article_Wise_Fail.UnbondedPanelsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSingleOpenStripNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.SingleOpenStripColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSingleOpenStripNull()
            Me(Me.tableView_Article_Wise_Fail.SingleOpenStripColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOpenSeamNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.OpenSeamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOpenSeamNull()
            Me(Me.tableView_Article_Wise_Fail.OpenSeamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPanelCavityNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.PanelCavityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPanelCavityNull()
            Me(Me.tableView_Article_Wise_Fail.PanelCavityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTouchingNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.TouchingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTouchingNull()
            Me(Me.tableView_Article_Wise_Fail.TouchingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOtherPrintingIssueNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.OtherPrintingIssueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOtherPrintingIssueNull()
            Me(Me.tableView_Article_Wise_Fail.OtherPrintingIssueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCoreCavityNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.CoreCavityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCoreCavityNull()
            Me(Me.tableView_Article_Wise_Fail.CoreCavityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPUCNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.PUCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPUCNull()
            Me(Me.tableView_Article_Wise_Fail.PUCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSeamClosingGlueNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.SeamClosingGlueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSeamClosingGlueNull()
            Me(Me.tableView_Article_Wise_Fail.SeamClosingGlueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBGradeNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.BGradeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBGradeNull()
            Me(Me.tableView_Article_Wise_Fail.BGradeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTotalCheckedNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.TotalCheckedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTotalCheckedNull()
            Me(Me.tableView_Article_Wise_Fail.TotalCheckedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPassNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.PassColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPassNull()
            Me(Me.tableView_Article_Wise_Fail.PassColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsFailNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.FailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetFailNull()
            Me(Me.tableView_Article_Wise_Fail.FailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsStraightCutNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.StraightCutColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetStraightCutNull()
            Me(Me.tableView_Article_Wise_Fail.StraightCutColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCuttingResidualNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.CuttingResidualColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCuttingResidualNull()
            Me(Me.tableView_Article_Wise_Fail.CuttingResidualColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsConnectionBreakNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.ConnectionBreakColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetConnectionBreakNull()
            Me(Me.tableView_Article_Wise_Fail.ConnectionBreakColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsUncureGlueNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.UncureGlueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetUncureGlueNull()
            Me(Me.tableView_Article_Wise_Fail.UncureGlueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsExcessiveGlueNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.ExcessiveGlueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetExcessiveGlueNull()
            Me(Me.tableView_Article_Wise_Fail.ExcessiveGlueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOverUnderWghtNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.OverUnderWghtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOverUnderWghtNull()
            Me(Me.tableView_Article_Wise_Fail.OverUnderWghtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsMissAlligmentNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.MissAlligmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetMissAlligmentNull()
            Me(Me.tableView_Article_Wise_Fail.MissAlligmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDisColorNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.DisColorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDisColorNull()
            Me(Me.tableView_Article_Wise_Fail.DisColorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLogoSmearingNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.LogoSmearingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLogoSmearingNull()
            Me(Me.tableView_Article_Wise_Fail.LogoSmearingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLogoDoublingNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.LogoDoublingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLogoDoublingNull()
            Me(Me.tableView_Article_Wise_Fail.LogoDoublingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBarcodeMissingNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.BarcodeMissingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBarcodeMissingNull()
            Me(Me.tableView_Article_Wise_Fail.BarcodeMissingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLargerSpotsNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.LargerSpotsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLargerSpotsNull()
            Me(Me.tableView_Article_Wise_Fail.LargerSpotsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSmearingNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.SmearingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSmearingNull()
            Me(Me.tableView_Article_Wise_Fail.SmearingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsHFMissAlignmentNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.HFMissAlignmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetHFMissAlignmentNull()
            Me(Me.tableView_Article_Wise_Fail.HFMissAlignmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRCheckNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.RCheckColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRCheckNull()
            Me(Me.tableView_Article_Wise_Fail.RCheckColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRPassNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.RPassColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRPassNull()
            Me(Me.tableView_Article_Wise_Fail.RPassColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBlurPrintingNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.BlurPrintingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBlurPrintingNull()
            Me(Me.tableView_Article_Wise_Fail.BlurPrintingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRFailNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.RFailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRFailNull()
            Me(Me.tableView_Article_Wise_Fail.RFailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsairbubbleNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.airbubbleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetairbubbleNull()
            Me(Me.tableView_Article_Wise_Fail.airbubbleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IspressoremarkNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.pressoremarkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetpressoremarkNull()
            Me(Me.tableView_Article_Wise_Fail.pressoremarkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsmissingglueNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.missingglueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetmissingglueNull()
            Me(Me.tableView_Article_Wise_Fail.missingglueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsexcussglueNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.excussglueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetexcussglueNull()
            Me(Me.tableView_Article_Wise_Fail.excussglueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IswrinklesNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.wrinklesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetwrinklesNull()
            Me(Me.tableView_Article_Wise_Fail.wrinklesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsseamoverlappingNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.seamoverlappingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetseamoverlappingNull()
            Me(Me.tableView_Article_Wise_Fail.seamoverlappingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsnewopenSeamNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.newopenSeamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetnewopenSeamNull()
            Me(Me.tableView_Article_Wise_Fail.newopenSeamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsmaterialdefectsNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.materialdefectsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetmaterialdefectsNull()
            Me(Me.tableView_Article_Wise_Fail.materialdefectsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IswrongartworkNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.wrongartworkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetwrongartworkNull()
            Me(Me.tableView_Article_Wise_Fail.wrongartworkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IscolourShapeNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.colourShapeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetcolourShapeNull()
            Me(Me.tableView_Article_Wise_Fail.colourShapeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsanymisprintNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.anymisprintColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetanymisprintNull()
            Me(Me.tableView_Article_Wise_Fail.anymisprintColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsprintmissallignamentNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.printmissallignamentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetprintmissallignamentNull()
            Me(Me.tableView_Article_Wise_Fail.printmissallignamentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsNewTouchingNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.NewTouchingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetNewTouchingNull()
            Me(Me.tableView_Article_Wise_Fail.NewTouchingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsheavyprintdefectsNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.heavyprintdefectsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetheavyprintdefectsNull()
            Me(Me.tableView_Article_Wise_Fail.heavyprintdefectsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IscuttingpanelNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.cuttingpanelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetcuttingpanelNull()
            Me(Me.tableView_Article_Wise_Fail.cuttingpanelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IszigzagedgeNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.zigzagedgeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetzigzagedgeNull()
            Me(Me.tableView_Article_Wise_Fail.zigzagedgeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsunshapecutNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.unshapecutColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetunshapecutNull()
            Me(Me.tableView_Article_Wise_Fail.unshapecutColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsunevenBallSurfaceNull() As Boolean
            Return Me.IsNull(Me.tableView_Article_Wise_Fail.unevenBallSurfaceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetunevenBallSurfaceNull()
            Me(Me.tableView_Article_Wise_Fail.unevenBallSurfaceColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class View_AMb_Forming_RepairRow
        Inherits Global.System.Data.DataRow
        
        Private tableView_AMb_Forming_Repair As View_AMb_Forming_RepairDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableView_AMb_Forming_Repair = CType(Me.Table,View_AMb_Forming_RepairDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PanelDMG() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.PanelDMGColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PanelDMG' in table 'View_AMb_Forming_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.PanelDMGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OverLap() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.OverLapColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OverLap' in table 'View_AMb_Forming_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.OverLapColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ZigZagSeam() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.ZigZagSeamColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZigZagSeam' in table 'View_AMb_Forming_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.ZigZagSeamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Wrinkle() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.WrinkleColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Wrinkle' in table 'View_AMb_Forming_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.WrinkleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ArtWork() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.ArtWorkColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ArtWork' in table 'View_AMb_Forming_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.ArtWorkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UnbondedPanels() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.UnbondedPanelsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UnbondedPanels' in table 'View_AMb_Forming_Repair' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.UnbondedPanelsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SingleOpenStrip() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.SingleOpenStripColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SingleOpenStrip' in table 'View_AMb_Forming_Repair' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.SingleOpenStripColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OpenSeam() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.OpenSeamColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OpenSeam' in table 'View_AMb_Forming_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.OpenSeamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PanelCavity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.PanelCavityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PanelCavity' in table 'View_AMb_Forming_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.PanelCavityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Touching() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.TouchingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Touching' in table 'View_AMb_Forming_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.TouchingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OtherPrintingIssue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.OtherPrintingIssueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OtherPrintingIssue' in table 'View_AMb_Forming_Repair' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.OtherPrintingIssueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CoreCavity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.CoreCavityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CoreCavity' in table 'View_AMb_Forming_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.CoreCavityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PUC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.PUCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PUC' in table 'View_AMb_Forming_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.PUCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SeamClosingGlue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.SeamClosingGlueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SeamClosingGlue' in table 'View_AMb_Forming_Repair' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.SeamClosingGlueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BGrade() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.BGradeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BGrade' in table 'View_AMb_Forming_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.BGradeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TotalChecked() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.TotalCheckedColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalChecked' in table 'View_AMb_Forming_Repair' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.TotalCheckedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Pass() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.PassColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pass' in table 'View_AMb_Forming_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.PassColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Fail() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.FailColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Fail' in table 'View_AMb_Forming_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.FailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property StraightCut() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.StraightCutColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StraightCut' in table 'View_AMb_Forming_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.StraightCutColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CuttingResidual() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.CuttingResidualColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CuttingResidual' in table 'View_AMb_Forming_Repair' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.CuttingResidualColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ConnectionBreak() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.ConnectionBreakColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConnectionBreak' in table 'View_AMb_Forming_Repair' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.ConnectionBreakColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UncureGlue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.UncureGlueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UncureGlue' in table 'View_AMb_Forming_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.UncureGlueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ExcessiveGlue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.ExcessiveGlueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExcessiveGlue' in table 'View_AMb_Forming_Repair' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.ExcessiveGlueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OverUnderWght() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.OverUnderWghtColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OverUnderWght' in table 'View_AMb_Forming_Repair' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.OverUnderWghtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DisColor() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.DisColorColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DisColor' in table 'View_AMb_Forming_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.DisColorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LogoSmearing() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.LogoSmearingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LogoSmearing' in table 'View_AMb_Forming_Repair' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.LogoSmearingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LogoDoubling() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.LogoDoublingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LogoDoubling' in table 'View_AMb_Forming_Repair' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.LogoDoublingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BarcodeMissing() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.BarcodeMissingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BarcodeMissing' in table 'View_AMb_Forming_Repair' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.BarcodeMissingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LargerSpots() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.LargerSpotsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LargerSpots' in table 'View_AMb_Forming_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.LargerSpotsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Smearing() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.SmearingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Smearing' in table 'View_AMb_Forming_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.SmearingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property HFMissAlignment() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.HFMissAlignmentColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HFMissAlignment' in table 'View_AMb_Forming_Repair' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.HFMissAlignmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BlurPrinting() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.BlurPrintingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BlurPrinting' in table 'View_AMb_Forming_Repair' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.BlurPrintingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RCheck() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.RCheckColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RCheck' in table 'View_AMb_Forming_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.RCheckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RPass() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.RPassColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RPass' in table 'View_AMb_Forming_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.RPassColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RFail() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.RFailColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RFail' in table 'View_AMb_Forming_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.RFailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property airbubble() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.airbubbleColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'airbubble' in table 'View_AMb_Forming_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.airbubbleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property pressoremark() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.pressoremarkColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pressoremark' in table 'View_AMb_Forming_Repair' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.pressoremarkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property missingglue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.missingglueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'missingglue' in table 'View_AMb_Forming_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.missingglueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property excussglue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.excussglueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'excussglue' in table 'View_AMb_Forming_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.excussglueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property wrinkles() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.wrinklesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'wrinkles' in table 'View_AMb_Forming_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.wrinklesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property seamoverlapping() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.seamoverlappingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'seamoverlapping' in table 'View_AMb_Forming_Repair' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.seamoverlappingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property newopenSeam() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.newopenSeamColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'newopenSeam' in table 'View_AMb_Forming_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.newopenSeamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property materialdefects() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.materialdefectsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'materialdefects' in table 'View_AMb_Forming_Repair' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.materialdefectsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property wrongartwork() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.wrongartworkColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'wrongartwork' in table 'View_AMb_Forming_Repair' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.wrongartworkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property colourShape() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.colourShapeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'colourShape' in table 'View_AMb_Forming_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.colourShapeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property anymisprint() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.anymisprintColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'anymisprint' in table 'View_AMb_Forming_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.anymisprintColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property printmissallignament() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.printmissallignamentColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'printmissallignament' in table 'View_AMb_Forming_Repair' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.printmissallignamentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NewTouching() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.NewTouchingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NewTouching' in table 'View_AMb_Forming_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.NewTouchingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property heavyprintdefects() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.heavyprintdefectsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'heavyprintdefects' in table 'View_AMb_Forming_Repair' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.heavyprintdefectsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property cuttingpanel() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.cuttingpanelColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cuttingpanel' in table 'View_AMb_Forming_Repair' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.cuttingpanelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property zigzagedge() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.zigzagedgeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'zigzagedge' in table 'View_AMb_Forming_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.zigzagedgeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property unshapecut() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.unshapecutColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'unshapecut' in table 'View_AMb_Forming_Repair' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.unshapecutColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property unevenBallSurface() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Forming_Repair.unevenBallSurfaceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'unevenBallSurface' in table 'View_AMb_Forming_Repair' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Forming_Repair.unevenBallSurfaceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPanelDMGNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.PanelDMGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPanelDMGNull()
            Me(Me.tableView_AMb_Forming_Repair.PanelDMGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOverLapNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.OverLapColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOverLapNull()
            Me(Me.tableView_AMb_Forming_Repair.OverLapColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsZigZagSeamNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.ZigZagSeamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetZigZagSeamNull()
            Me(Me.tableView_AMb_Forming_Repair.ZigZagSeamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWrinkleNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.WrinkleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWrinkleNull()
            Me(Me.tableView_AMb_Forming_Repair.WrinkleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsArtWorkNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.ArtWorkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetArtWorkNull()
            Me(Me.tableView_AMb_Forming_Repair.ArtWorkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsUnbondedPanelsNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.UnbondedPanelsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetUnbondedPanelsNull()
            Me(Me.tableView_AMb_Forming_Repair.UnbondedPanelsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSingleOpenStripNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.SingleOpenStripColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSingleOpenStripNull()
            Me(Me.tableView_AMb_Forming_Repair.SingleOpenStripColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOpenSeamNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.OpenSeamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOpenSeamNull()
            Me(Me.tableView_AMb_Forming_Repair.OpenSeamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPanelCavityNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.PanelCavityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPanelCavityNull()
            Me(Me.tableView_AMb_Forming_Repair.PanelCavityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTouchingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.TouchingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTouchingNull()
            Me(Me.tableView_AMb_Forming_Repair.TouchingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOtherPrintingIssueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.OtherPrintingIssueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOtherPrintingIssueNull()
            Me(Me.tableView_AMb_Forming_Repair.OtherPrintingIssueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCoreCavityNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.CoreCavityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCoreCavityNull()
            Me(Me.tableView_AMb_Forming_Repair.CoreCavityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPUCNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.PUCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPUCNull()
            Me(Me.tableView_AMb_Forming_Repair.PUCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSeamClosingGlueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.SeamClosingGlueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSeamClosingGlueNull()
            Me(Me.tableView_AMb_Forming_Repair.SeamClosingGlueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBGradeNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.BGradeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBGradeNull()
            Me(Me.tableView_AMb_Forming_Repair.BGradeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTotalCheckedNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.TotalCheckedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTotalCheckedNull()
            Me(Me.tableView_AMb_Forming_Repair.TotalCheckedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPassNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.PassColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPassNull()
            Me(Me.tableView_AMb_Forming_Repair.PassColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsFailNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.FailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetFailNull()
            Me(Me.tableView_AMb_Forming_Repair.FailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsStraightCutNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.StraightCutColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetStraightCutNull()
            Me(Me.tableView_AMb_Forming_Repair.StraightCutColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCuttingResidualNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.CuttingResidualColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCuttingResidualNull()
            Me(Me.tableView_AMb_Forming_Repair.CuttingResidualColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsConnectionBreakNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.ConnectionBreakColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetConnectionBreakNull()
            Me(Me.tableView_AMb_Forming_Repair.ConnectionBreakColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsUncureGlueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.UncureGlueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetUncureGlueNull()
            Me(Me.tableView_AMb_Forming_Repair.UncureGlueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsExcessiveGlueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.ExcessiveGlueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetExcessiveGlueNull()
            Me(Me.tableView_AMb_Forming_Repair.ExcessiveGlueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOverUnderWghtNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.OverUnderWghtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOverUnderWghtNull()
            Me(Me.tableView_AMb_Forming_Repair.OverUnderWghtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDisColorNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.DisColorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDisColorNull()
            Me(Me.tableView_AMb_Forming_Repair.DisColorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLogoSmearingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.LogoSmearingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLogoSmearingNull()
            Me(Me.tableView_AMb_Forming_Repair.LogoSmearingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLogoDoublingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.LogoDoublingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLogoDoublingNull()
            Me(Me.tableView_AMb_Forming_Repair.LogoDoublingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBarcodeMissingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.BarcodeMissingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBarcodeMissingNull()
            Me(Me.tableView_AMb_Forming_Repair.BarcodeMissingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLargerSpotsNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.LargerSpotsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLargerSpotsNull()
            Me(Me.tableView_AMb_Forming_Repair.LargerSpotsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSmearingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.SmearingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSmearingNull()
            Me(Me.tableView_AMb_Forming_Repair.SmearingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsHFMissAlignmentNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.HFMissAlignmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetHFMissAlignmentNull()
            Me(Me.tableView_AMb_Forming_Repair.HFMissAlignmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBlurPrintingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.BlurPrintingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBlurPrintingNull()
            Me(Me.tableView_AMb_Forming_Repair.BlurPrintingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRCheckNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.RCheckColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRCheckNull()
            Me(Me.tableView_AMb_Forming_Repair.RCheckColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRPassNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.RPassColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRPassNull()
            Me(Me.tableView_AMb_Forming_Repair.RPassColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRFailNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.RFailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRFailNull()
            Me(Me.tableView_AMb_Forming_Repair.RFailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsairbubbleNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.airbubbleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetairbubbleNull()
            Me(Me.tableView_AMb_Forming_Repair.airbubbleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IspressoremarkNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.pressoremarkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetpressoremarkNull()
            Me(Me.tableView_AMb_Forming_Repair.pressoremarkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsmissingglueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.missingglueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetmissingglueNull()
            Me(Me.tableView_AMb_Forming_Repair.missingglueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsexcussglueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.excussglueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetexcussglueNull()
            Me(Me.tableView_AMb_Forming_Repair.excussglueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IswrinklesNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.wrinklesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetwrinklesNull()
            Me(Me.tableView_AMb_Forming_Repair.wrinklesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsseamoverlappingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.seamoverlappingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetseamoverlappingNull()
            Me(Me.tableView_AMb_Forming_Repair.seamoverlappingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsnewopenSeamNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.newopenSeamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetnewopenSeamNull()
            Me(Me.tableView_AMb_Forming_Repair.newopenSeamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsmaterialdefectsNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.materialdefectsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetmaterialdefectsNull()
            Me(Me.tableView_AMb_Forming_Repair.materialdefectsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IswrongartworkNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.wrongartworkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetwrongartworkNull()
            Me(Me.tableView_AMb_Forming_Repair.wrongartworkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IscolourShapeNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.colourShapeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetcolourShapeNull()
            Me(Me.tableView_AMb_Forming_Repair.colourShapeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsanymisprintNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.anymisprintColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetanymisprintNull()
            Me(Me.tableView_AMb_Forming_Repair.anymisprintColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsprintmissallignamentNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.printmissallignamentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetprintmissallignamentNull()
            Me(Me.tableView_AMb_Forming_Repair.printmissallignamentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsNewTouchingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.NewTouchingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetNewTouchingNull()
            Me(Me.tableView_AMb_Forming_Repair.NewTouchingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsheavyprintdefectsNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.heavyprintdefectsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetheavyprintdefectsNull()
            Me(Me.tableView_AMb_Forming_Repair.heavyprintdefectsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IscuttingpanelNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.cuttingpanelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetcuttingpanelNull()
            Me(Me.tableView_AMb_Forming_Repair.cuttingpanelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IszigzagedgeNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.zigzagedgeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetzigzagedgeNull()
            Me(Me.tableView_AMb_Forming_Repair.zigzagedgeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsunshapecutNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.unshapecutColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetunshapecutNull()
            Me(Me.tableView_AMb_Forming_Repair.unshapecutColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsunevenBallSurfaceNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Forming_Repair.unevenBallSurfaceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetunevenBallSurfaceNull()
            Me(Me.tableView_AMb_Forming_Repair.unevenBallSurfaceColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class View_AMb_Fresh_PassRow
        Inherits Global.System.Data.DataRow
        
        Private tableView_AMb_Fresh_Pass As View_AMb_Fresh_PassDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableView_AMb_Fresh_Pass = CType(Me.Table,View_AMb_Fresh_PassDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PanelDMG() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.PanelDMGColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PanelDMG' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.PanelDMGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OverLap() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.OverLapColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OverLap' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.OverLapColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ZigZagSeam() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.ZigZagSeamColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZigZagSeam' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.ZigZagSeamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Wrinkle() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.WrinkleColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Wrinkle' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.WrinkleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ArtWork() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.ArtWorkColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ArtWork' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.ArtWorkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UnbondedPanels() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.UnbondedPanelsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UnbondedPanels' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.UnbondedPanelsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SingleOpenStrip() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.SingleOpenStripColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SingleOpenStrip' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.SingleOpenStripColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OpenSeam() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.OpenSeamColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OpenSeam' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.OpenSeamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PanelCavity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.PanelCavityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PanelCavity' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.PanelCavityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Touching() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.TouchingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Touching' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.TouchingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OtherPrintingIssue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.OtherPrintingIssueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OtherPrintingIssue' in table 'View_AMb_Fresh_Pass' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.OtherPrintingIssueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CoreCavity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.CoreCavityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CoreCavity' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.CoreCavityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PUC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.PUCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PUC' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.PUCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SeamClosingGlue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.SeamClosingGlueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SeamClosingGlue' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.SeamClosingGlueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BGrade() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.BGradeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BGrade' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.BGradeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TotalChecked() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.TotalCheckedColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalChecked' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.TotalCheckedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Pass() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.PassColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pass' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.PassColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Fail() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.FailColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Fail' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.FailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property StraightCut() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.StraightCutColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StraightCut' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.StraightCutColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CuttingResidual() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.CuttingResidualColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CuttingResidual' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.CuttingResidualColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ConnectionBreak() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.ConnectionBreakColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConnectionBreak' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.ConnectionBreakColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UncureGlue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.UncureGlueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UncureGlue' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.UncureGlueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ExcessiveGlue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.ExcessiveGlueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExcessiveGlue' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.ExcessiveGlueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OverUnderWght() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.OverUnderWghtColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OverUnderWght' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.OverUnderWghtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DisColor() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.DisColorColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DisColor' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.DisColorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LogoSmearing() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.LogoSmearingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LogoSmearing' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.LogoSmearingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LogoDoubling() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.LogoDoublingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LogoDoubling' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.LogoDoublingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BarcodeMissing() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.BarcodeMissingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BarcodeMissing' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.BarcodeMissingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LargerSpots() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.LargerSpotsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LargerSpots' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.LargerSpotsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Smearing() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.SmearingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Smearing' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.SmearingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property HFMissAlignment() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.HFMissAlignmentColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HFMissAlignment' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.HFMissAlignmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BlurPrinting() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.BlurPrintingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BlurPrinting' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.BlurPrintingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RCheck() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.RCheckColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RCheck' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.RCheckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RPass() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.RPassColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RPass' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.RPassColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OpeningBlance() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.OpeningBlanceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OpeningBlance' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.OpeningBlanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property unevenBallSurface() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.unevenBallSurfaceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'unevenBallSurface' in table 'View_AMb_Fresh_Pass' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.unevenBallSurfaceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property unshapecut() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.unshapecutColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'unshapecut' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.unshapecutColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property zigzagedge() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.zigzagedgeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'zigzagedge' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.zigzagedgeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property cuttingpanel() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.cuttingpanelColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cuttingpanel' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.cuttingpanelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property heavyprintdefects() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.heavyprintdefectsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'heavyprintdefects' in table 'View_AMb_Fresh_Pass' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.heavyprintdefectsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NewTouching() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.NewTouchingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NewTouching' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.NewTouchingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property printmissallignament() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.printmissallignamentColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'printmissallignament' in table 'View_AMb_Fresh_Pass' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.printmissallignamentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property anymisprint() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.anymisprintColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'anymisprint' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.anymisprintColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property colourShape() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.colourShapeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'colourShape' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.colourShapeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property wrongartwork() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.wrongartworkColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'wrongartwork' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.wrongartworkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property materialdefects() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.materialdefectsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'materialdefects' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.materialdefectsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property newopenSeam() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.newopenSeamColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'newopenSeam' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.newopenSeamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property seamoverlapping() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.seamoverlappingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'seamoverlapping' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.seamoverlappingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property wrinkles() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.wrinklesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'wrinkles' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.wrinklesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property excussglue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.excussglueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'excussglue' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.excussglueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property missingglue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.missingglueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'missingglue' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.missingglueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property pressoremark() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.pressoremarkColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pressoremark' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.pressoremarkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property airbubble() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Fresh_Pass.airbubbleColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'airbubble' in table 'View_AMb_Fresh_Pass' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Fresh_Pass.airbubbleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPanelDMGNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.PanelDMGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPanelDMGNull()
            Me(Me.tableView_AMb_Fresh_Pass.PanelDMGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOverLapNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.OverLapColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOverLapNull()
            Me(Me.tableView_AMb_Fresh_Pass.OverLapColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsZigZagSeamNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.ZigZagSeamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetZigZagSeamNull()
            Me(Me.tableView_AMb_Fresh_Pass.ZigZagSeamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWrinkleNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.WrinkleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWrinkleNull()
            Me(Me.tableView_AMb_Fresh_Pass.WrinkleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsArtWorkNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.ArtWorkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetArtWorkNull()
            Me(Me.tableView_AMb_Fresh_Pass.ArtWorkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsUnbondedPanelsNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.UnbondedPanelsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetUnbondedPanelsNull()
            Me(Me.tableView_AMb_Fresh_Pass.UnbondedPanelsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSingleOpenStripNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.SingleOpenStripColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSingleOpenStripNull()
            Me(Me.tableView_AMb_Fresh_Pass.SingleOpenStripColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOpenSeamNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.OpenSeamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOpenSeamNull()
            Me(Me.tableView_AMb_Fresh_Pass.OpenSeamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPanelCavityNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.PanelCavityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPanelCavityNull()
            Me(Me.tableView_AMb_Fresh_Pass.PanelCavityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTouchingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.TouchingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTouchingNull()
            Me(Me.tableView_AMb_Fresh_Pass.TouchingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOtherPrintingIssueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.OtherPrintingIssueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOtherPrintingIssueNull()
            Me(Me.tableView_AMb_Fresh_Pass.OtherPrintingIssueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCoreCavityNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.CoreCavityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCoreCavityNull()
            Me(Me.tableView_AMb_Fresh_Pass.CoreCavityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPUCNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.PUCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPUCNull()
            Me(Me.tableView_AMb_Fresh_Pass.PUCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSeamClosingGlueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.SeamClosingGlueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSeamClosingGlueNull()
            Me(Me.tableView_AMb_Fresh_Pass.SeamClosingGlueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBGradeNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.BGradeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBGradeNull()
            Me(Me.tableView_AMb_Fresh_Pass.BGradeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTotalCheckedNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.TotalCheckedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTotalCheckedNull()
            Me(Me.tableView_AMb_Fresh_Pass.TotalCheckedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPassNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.PassColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPassNull()
            Me(Me.tableView_AMb_Fresh_Pass.PassColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsFailNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.FailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetFailNull()
            Me(Me.tableView_AMb_Fresh_Pass.FailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsStraightCutNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.StraightCutColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetStraightCutNull()
            Me(Me.tableView_AMb_Fresh_Pass.StraightCutColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCuttingResidualNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.CuttingResidualColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCuttingResidualNull()
            Me(Me.tableView_AMb_Fresh_Pass.CuttingResidualColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsConnectionBreakNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.ConnectionBreakColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetConnectionBreakNull()
            Me(Me.tableView_AMb_Fresh_Pass.ConnectionBreakColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsUncureGlueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.UncureGlueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetUncureGlueNull()
            Me(Me.tableView_AMb_Fresh_Pass.UncureGlueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsExcessiveGlueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.ExcessiveGlueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetExcessiveGlueNull()
            Me(Me.tableView_AMb_Fresh_Pass.ExcessiveGlueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOverUnderWghtNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.OverUnderWghtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOverUnderWghtNull()
            Me(Me.tableView_AMb_Fresh_Pass.OverUnderWghtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDisColorNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.DisColorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDisColorNull()
            Me(Me.tableView_AMb_Fresh_Pass.DisColorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLogoSmearingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.LogoSmearingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLogoSmearingNull()
            Me(Me.tableView_AMb_Fresh_Pass.LogoSmearingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLogoDoublingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.LogoDoublingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLogoDoublingNull()
            Me(Me.tableView_AMb_Fresh_Pass.LogoDoublingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBarcodeMissingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.BarcodeMissingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBarcodeMissingNull()
            Me(Me.tableView_AMb_Fresh_Pass.BarcodeMissingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLargerSpotsNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.LargerSpotsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLargerSpotsNull()
            Me(Me.tableView_AMb_Fresh_Pass.LargerSpotsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSmearingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.SmearingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSmearingNull()
            Me(Me.tableView_AMb_Fresh_Pass.SmearingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsHFMissAlignmentNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.HFMissAlignmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetHFMissAlignmentNull()
            Me(Me.tableView_AMb_Fresh_Pass.HFMissAlignmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBlurPrintingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.BlurPrintingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBlurPrintingNull()
            Me(Me.tableView_AMb_Fresh_Pass.BlurPrintingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRCheckNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.RCheckColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRCheckNull()
            Me(Me.tableView_AMb_Fresh_Pass.RCheckColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRPassNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.RPassColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRPassNull()
            Me(Me.tableView_AMb_Fresh_Pass.RPassColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOpeningBlanceNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.OpeningBlanceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOpeningBlanceNull()
            Me(Me.tableView_AMb_Fresh_Pass.OpeningBlanceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsunevenBallSurfaceNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.unevenBallSurfaceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetunevenBallSurfaceNull()
            Me(Me.tableView_AMb_Fresh_Pass.unevenBallSurfaceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsunshapecutNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.unshapecutColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetunshapecutNull()
            Me(Me.tableView_AMb_Fresh_Pass.unshapecutColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IszigzagedgeNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.zigzagedgeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetzigzagedgeNull()
            Me(Me.tableView_AMb_Fresh_Pass.zigzagedgeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IscuttingpanelNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.cuttingpanelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetcuttingpanelNull()
            Me(Me.tableView_AMb_Fresh_Pass.cuttingpanelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsheavyprintdefectsNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.heavyprintdefectsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetheavyprintdefectsNull()
            Me(Me.tableView_AMb_Fresh_Pass.heavyprintdefectsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsNewTouchingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.NewTouchingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetNewTouchingNull()
            Me(Me.tableView_AMb_Fresh_Pass.NewTouchingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsprintmissallignamentNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.printmissallignamentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetprintmissallignamentNull()
            Me(Me.tableView_AMb_Fresh_Pass.printmissallignamentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsanymisprintNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.anymisprintColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetanymisprintNull()
            Me(Me.tableView_AMb_Fresh_Pass.anymisprintColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IscolourShapeNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.colourShapeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetcolourShapeNull()
            Me(Me.tableView_AMb_Fresh_Pass.colourShapeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IswrongartworkNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.wrongartworkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetwrongartworkNull()
            Me(Me.tableView_AMb_Fresh_Pass.wrongartworkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsmaterialdefectsNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.materialdefectsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetmaterialdefectsNull()
            Me(Me.tableView_AMb_Fresh_Pass.materialdefectsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsnewopenSeamNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.newopenSeamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetnewopenSeamNull()
            Me(Me.tableView_AMb_Fresh_Pass.newopenSeamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsseamoverlappingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.seamoverlappingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetseamoverlappingNull()
            Me(Me.tableView_AMb_Fresh_Pass.seamoverlappingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IswrinklesNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.wrinklesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetwrinklesNull()
            Me(Me.tableView_AMb_Fresh_Pass.wrinklesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsexcussglueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.excussglueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetexcussglueNull()
            Me(Me.tableView_AMb_Fresh_Pass.excussglueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsmissingglueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.missingglueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetmissingglueNull()
            Me(Me.tableView_AMb_Fresh_Pass.missingglueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IspressoremarkNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.pressoremarkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetpressoremarkNull()
            Me(Me.tableView_AMb_Fresh_Pass.pressoremarkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsairbubbleNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Fresh_Pass.airbubbleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetairbubbleNull()
            Me(Me.tableView_AMb_Fresh_Pass.airbubbleColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class View_AMb_Article_Wise_FreshRow
        Inherits Global.System.Data.DataRow
        
        Private tableView_AMb_Article_Wise_Fresh As View_AMb_Article_Wise_FreshDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableView_AMb_Article_Wise_Fresh = CType(Me.Table,View_AMb_Article_Wise_FreshDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PanelDMG() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.PanelDMGColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PanelDMG' in table 'View_AMb_Article Wise_Fresh' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.PanelDMGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OverLap() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.OverLapColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OverLap' in table 'View_AMb_Article Wise_Fresh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.OverLapColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ZigZagSeam() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.ZigZagSeamColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZigZagSeam' in table 'View_AMb_Article Wise_Fresh' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.ZigZagSeamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Wrinkle() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.WrinkleColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Wrinkle' in table 'View_AMb_Article Wise_Fresh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.WrinkleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ArtWork() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.ArtWorkColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ArtWork' in table 'View_AMb_Article Wise_Fresh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.ArtWorkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UnbondedPanels() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.UnbondedPanelsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UnbondedPanels' in table 'View_AMb_Article Wise_Fresh' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.UnbondedPanelsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SingleOpenStrip() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.SingleOpenStripColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SingleOpenStrip' in table 'View_AMb_Article Wise_Fresh' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.SingleOpenStripColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OpenSeam() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.OpenSeamColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OpenSeam' in table 'View_AMb_Article Wise_Fresh' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.OpenSeamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PanelCavity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.PanelCavityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PanelCavity' in table 'View_AMb_Article Wise_Fresh' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.PanelCavityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Touching() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.TouchingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Touching' in table 'View_AMb_Article Wise_Fresh' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.TouchingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OtherPrintingIssue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.OtherPrintingIssueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OtherPrintingIssue' in table 'View_AMb_Article Wise_Fresh' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.OtherPrintingIssueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CoreCavity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.CoreCavityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CoreCavity' in table 'View_AMb_Article Wise_Fresh' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.CoreCavityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PUC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.PUCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PUC' in table 'View_AMb_Article Wise_Fresh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.PUCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SeamClosingGlue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.SeamClosingGlueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SeamClosingGlue' in table 'View_AMb_Article Wise_Fresh' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.SeamClosingGlueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BGrade() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.BGradeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BGrade' in table 'View_AMb_Article Wise_Fresh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.BGradeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TotalChecked() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.TotalCheckedColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalChecked' in table 'View_AMb_Article Wise_Fresh' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.TotalCheckedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Pass() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.PassColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pass' in table 'View_AMb_Article Wise_Fresh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.PassColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Fail() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.FailColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Fail' in table 'View_AMb_Article Wise_Fresh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.FailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property StraightCut() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.StraightCutColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StraightCut' in table 'View_AMb_Article Wise_Fresh' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.StraightCutColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CuttingResidual() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.CuttingResidualColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CuttingResidual' in table 'View_AMb_Article Wise_Fresh' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.CuttingResidualColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ConnectionBreak() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.ConnectionBreakColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConnectionBreak' in table 'View_AMb_Article Wise_Fresh' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.ConnectionBreakColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UncureGlue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.UncureGlueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UncureGlue' in table 'View_AMb_Article Wise_Fresh' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.UncureGlueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ExcessiveGlue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.ExcessiveGlueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExcessiveGlue' in table 'View_AMb_Article Wise_Fresh' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.ExcessiveGlueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OverUnderWght() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.OverUnderWghtColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OverUnderWght' in table 'View_AMb_Article Wise_Fresh' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.OverUnderWghtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property MissAlligment() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.MissAlligmentColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MissAlligment' in table 'View_AMb_Article Wise_Fresh' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.MissAlligmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DisColor() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.DisColorColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DisColor' in table 'View_AMb_Article Wise_Fresh' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.DisColorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LogoSmearing() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.LogoSmearingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LogoSmearing' in table 'View_AMb_Article Wise_Fresh' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.LogoSmearingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LogoDoubling() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.LogoDoublingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LogoDoubling' in table 'View_AMb_Article Wise_Fresh' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.LogoDoublingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BarcodeMissing() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.BarcodeMissingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BarcodeMissing' in table 'View_AMb_Article Wise_Fresh' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.BarcodeMissingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LargerSpots() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.LargerSpotsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LargerSpots' in table 'View_AMb_Article Wise_Fresh' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.LargerSpotsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Smearing() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.SmearingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Smearing' in table 'View_AMb_Article Wise_Fresh' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.SmearingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property HFMissAlignment() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.HFMissAlignmentColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HFMissAlignment' in table 'View_AMb_Article Wise_Fresh' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.HFMissAlignmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RCheck() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.RCheckColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RCheck' in table 'View_AMb_Article Wise_Fresh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.RCheckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RPass() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.RPassColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RPass' in table 'View_AMb_Article Wise_Fresh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.RPassColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BlurPrinting() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.BlurPrintingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BlurPrinting' in table 'View_AMb_Article Wise_Fresh' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.BlurPrintingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OpeningBlance() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.OpeningBlanceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OpeningBlance' in table 'View_AMb_Article Wise_Fresh' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.OpeningBlanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property airbubble() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.airbubbleColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'airbubble' in table 'View_AMb_Article Wise_Fresh' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.airbubbleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property pressoremark() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.pressoremarkColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pressoremark' in table 'View_AMb_Article Wise_Fresh' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.pressoremarkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property missingglue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.missingglueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'missingglue' in table 'View_AMb_Article Wise_Fresh' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.missingglueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property excussglue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.excussglueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'excussglue' in table 'View_AMb_Article Wise_Fresh' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.excussglueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property wrinkles() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.wrinklesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'wrinkles' in table 'View_AMb_Article Wise_Fresh' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.wrinklesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property seamoverlapping() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.seamoverlappingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'seamoverlapping' in table 'View_AMb_Article Wise_Fresh' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.seamoverlappingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property newopenSeam() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.newopenSeamColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'newopenSeam' in table 'View_AMb_Article Wise_Fresh' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.newopenSeamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property materialdefects() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.materialdefectsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'materialdefects' in table 'View_AMb_Article Wise_Fresh' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.materialdefectsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property wrongartwork() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.wrongartworkColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'wrongartwork' in table 'View_AMb_Article Wise_Fresh' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.wrongartworkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property colourShape() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.colourShapeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'colourShape' in table 'View_AMb_Article Wise_Fresh' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.colourShapeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property anymisprint() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.anymisprintColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'anymisprint' in table 'View_AMb_Article Wise_Fresh' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.anymisprintColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property printmissallignament() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.printmissallignamentColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'printmissallignament' in table 'View_AMb_Article Wise_Fresh"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.printmissallignamentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NewTouching() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.NewTouchingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NewTouching' in table 'View_AMb_Article Wise_Fresh' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.NewTouchingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property heavyprintdefects() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.heavyprintdefectsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'heavyprintdefects' in table 'View_AMb_Article Wise_Fresh' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.heavyprintdefectsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property cuttingpanel() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.cuttingpanelColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cuttingpanel' in table 'View_AMb_Article Wise_Fresh' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.cuttingpanelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property zigzagedge() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.zigzagedgeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'zigzagedge' in table 'View_AMb_Article Wise_Fresh' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.zigzagedgeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property unshapecut() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.unshapecutColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'unshapecut' in table 'View_AMb_Article Wise_Fresh' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.unshapecutColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property unevenBallSurface() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_AMb_Article_Wise_Fresh.unevenBallSurfaceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'unevenBallSurface' in table 'View_AMb_Article Wise_Fresh' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_AMb_Article_Wise_Fresh.unevenBallSurfaceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPanelDMGNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.PanelDMGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPanelDMGNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.PanelDMGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOverLapNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.OverLapColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOverLapNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.OverLapColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsZigZagSeamNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.ZigZagSeamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetZigZagSeamNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.ZigZagSeamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWrinkleNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.WrinkleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWrinkleNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.WrinkleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsArtWorkNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.ArtWorkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetArtWorkNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.ArtWorkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsUnbondedPanelsNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.UnbondedPanelsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetUnbondedPanelsNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.UnbondedPanelsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSingleOpenStripNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.SingleOpenStripColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSingleOpenStripNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.SingleOpenStripColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOpenSeamNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.OpenSeamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOpenSeamNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.OpenSeamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPanelCavityNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.PanelCavityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPanelCavityNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.PanelCavityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTouchingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.TouchingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTouchingNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.TouchingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOtherPrintingIssueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.OtherPrintingIssueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOtherPrintingIssueNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.OtherPrintingIssueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCoreCavityNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.CoreCavityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCoreCavityNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.CoreCavityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPUCNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.PUCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPUCNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.PUCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSeamClosingGlueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.SeamClosingGlueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSeamClosingGlueNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.SeamClosingGlueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBGradeNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.BGradeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBGradeNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.BGradeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTotalCheckedNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.TotalCheckedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTotalCheckedNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.TotalCheckedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPassNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.PassColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPassNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.PassColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsFailNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.FailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetFailNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.FailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsStraightCutNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.StraightCutColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetStraightCutNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.StraightCutColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCuttingResidualNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.CuttingResidualColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCuttingResidualNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.CuttingResidualColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsConnectionBreakNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.ConnectionBreakColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetConnectionBreakNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.ConnectionBreakColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsUncureGlueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.UncureGlueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetUncureGlueNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.UncureGlueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsExcessiveGlueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.ExcessiveGlueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetExcessiveGlueNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.ExcessiveGlueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOverUnderWghtNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.OverUnderWghtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOverUnderWghtNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.OverUnderWghtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsMissAlligmentNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.MissAlligmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetMissAlligmentNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.MissAlligmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDisColorNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.DisColorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDisColorNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.DisColorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLogoSmearingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.LogoSmearingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLogoSmearingNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.LogoSmearingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLogoDoublingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.LogoDoublingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLogoDoublingNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.LogoDoublingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBarcodeMissingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.BarcodeMissingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBarcodeMissingNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.BarcodeMissingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLargerSpotsNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.LargerSpotsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLargerSpotsNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.LargerSpotsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSmearingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.SmearingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSmearingNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.SmearingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsHFMissAlignmentNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.HFMissAlignmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetHFMissAlignmentNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.HFMissAlignmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRCheckNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.RCheckColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRCheckNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.RCheckColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRPassNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.RPassColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRPassNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.RPassColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBlurPrintingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.BlurPrintingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBlurPrintingNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.BlurPrintingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOpeningBlanceNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.OpeningBlanceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOpeningBlanceNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.OpeningBlanceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsairbubbleNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.airbubbleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetairbubbleNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.airbubbleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IspressoremarkNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.pressoremarkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetpressoremarkNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.pressoremarkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsmissingglueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.missingglueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetmissingglueNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.missingglueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsexcussglueNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.excussglueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetexcussglueNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.excussglueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IswrinklesNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.wrinklesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetwrinklesNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.wrinklesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsseamoverlappingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.seamoverlappingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetseamoverlappingNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.seamoverlappingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsnewopenSeamNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.newopenSeamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetnewopenSeamNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.newopenSeamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsmaterialdefectsNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.materialdefectsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetmaterialdefectsNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.materialdefectsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IswrongartworkNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.wrongartworkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetwrongartworkNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.wrongartworkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IscolourShapeNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.colourShapeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetcolourShapeNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.colourShapeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsanymisprintNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.anymisprintColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetanymisprintNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.anymisprintColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsprintmissallignamentNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.printmissallignamentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetprintmissallignamentNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.printmissallignamentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsNewTouchingNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.NewTouchingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetNewTouchingNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.NewTouchingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsheavyprintdefectsNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.heavyprintdefectsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetheavyprintdefectsNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.heavyprintdefectsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IscuttingpanelNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.cuttingpanelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetcuttingpanelNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.cuttingpanelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IszigzagedgeNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.zigzagedgeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetzigzagedgeNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.zigzagedgeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsunshapecutNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.unshapecutColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetunshapecutNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.unshapecutColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsunevenBallSurfaceNull() As Boolean
            Return Me.IsNull(Me.tableView_AMb_Article_Wise_Fresh.unevenBallSurfaceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetunevenBallSurfaceNull()
            Me(Me.tableView_AMb_Article_Wise_Fresh.unevenBallSurfaceColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tbl_PC_AMB_Line1Row
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_PC_AMB_Line1 As tbl_PC_AMB_Line1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_PC_AMB_Line1 = CType(Me.Table,tbl_PC_AMB_Line1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LineName() As String
            Get
                Return CType(Me(Me.tabletbl_PC_AMB_Line1.LineNameColumn),String)
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Line1.LineNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LineID() As Integer
            Get
                Return CType(Me(Me.tabletbl_PC_AMB_Line1.LineIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_PC_AMB_Line1.LineIDColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tbl_Pro_Amb_ArticleRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_Pro_Amb_Article As tbl_Pro_Amb_ArticleDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_Pro_Amb_Article = CType(Me.Table,tbl_Pro_Amb_ArticleDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClientID() As Integer
            Get
                Return CType(Me(Me.tabletbl_Pro_Amb_Article.ClientIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Pro_Amb_Article.ClientIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ModelID() As Integer
            Get
                Return CType(Me(Me.tabletbl_Pro_Amb_Article.ModelIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Pro_Amb_Article.ModelIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ArtID() As Integer
            Get
                Return CType(Me(Me.tabletbl_Pro_Amb_Article.ArtIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Pro_Amb_Article.ArtIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ArtCode() As String
            Get
                Return CType(Me(Me.tabletbl_Pro_Amb_Article.ArtCodeColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Pro_Amb_Article.ArtCodeColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class tbl_Pro_ArticleRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_Pro_ArticleRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As tbl_Pro_ArticleRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As tbl_Pro_ArticleRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class tbl_Pro_Article_DRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_Pro_Article_DRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As tbl_Pro_Article_DRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As tbl_Pro_Article_DRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class tbl_Inv_Tran_DateRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_Inv_Tran_DateRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As tbl_Inv_Tran_DateRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As tbl_Inv_Tran_DateRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class tbl_PC_AMB_Hours_TranRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_PC_AMB_Hours_TranRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As tbl_PC_AMB_Hours_TranRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As tbl_PC_AMB_Hours_TranRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class View_PODRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As View_PODRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As View_PODRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As View_PODRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class View_PORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As View_PORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As View_PORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As View_PORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class View_AMb_FormingRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As View_AMb_FormingRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As View_AMb_FormingRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As View_AMb_FormingRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class View_Daily_SumRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As View_Daily_SumRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As View_Daily_SumRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As View_Daily_SumRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class View_AMb_Article_Wise_SumRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As View_AMb_Article_Wise_SumRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As View_AMb_Article_Wise_SumRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As View_AMb_Article_Wise_SumRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class tbl_PC_AMB_LineRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_PC_AMB_LineRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As tbl_PC_AMB_LineRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As tbl_PC_AMB_LineRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class View_max_FromingRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As View_max_FromingRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As View_max_FromingRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As View_max_FromingRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class View_AMB_Incentive_RFTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As View_AMB_Incentive_RFTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As View_AMB_Incentive_RFTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As View_AMB_Incentive_RFTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class View_AMb_RepairRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As View_AMb_RepairRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As View_AMb_RepairRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As View_AMb_RepairRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class View_AMb_RepairPAssRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As View_AMb_RepairPAssRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As View_AMb_RepairPAssRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As View_AMb_RepairPAssRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class Froming_HourllyRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Froming_HourllyRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As Froming_HourllyRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As Froming_HourllyRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class View_Repair_QtyRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As View_Repair_QtyRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As View_Repair_QtyRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As View_Repair_QtyRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class View_Article_Wise_FailRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As View_Article_Wise_FailRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As View_Article_Wise_FailRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As View_Article_Wise_FailRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class View_AMb_Forming_RepairRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As View_AMb_Forming_RepairRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As View_AMb_Forming_RepairRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As View_AMb_Forming_RepairRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class View_AMb_Fresh_PassRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As View_AMb_Fresh_PassRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As View_AMb_Fresh_PassRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As View_AMb_Fresh_PassRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class View_AMb_Article_Wise_FreshRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As View_AMb_Article_Wise_FreshRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As View_AMb_Article_Wise_FreshRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As View_AMb_Article_Wise_FreshRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class tbl_PC_AMB_Line1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_PC_AMB_Line1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As tbl_PC_AMB_Line1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As tbl_PC_AMB_Line1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class tbl_Pro_Amb_ArticleRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_Pro_Amb_ArticleRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As tbl_Pro_Amb_ArticleRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As tbl_Pro_Amb_ArticleRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DSAMBTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_Pro_ArticleTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_Pro_Article"
            tableMapping.ColumnMappings.Add("ClientID", "ClientID")
            tableMapping.ColumnMappings.Add("ModelID", "ModelID")
            tableMapping.ColumnMappings.Add("ArtID", "ArtID")
            tableMapping.ColumnMappings.Add("ArtCode", "ArtCode")
            tableMapping.ColumnMappings.Add("Target", "Target")
            tableMapping.ColumnMappings.Add("SAMForming", "SAMForming")
            tableMapping.ColumnMappings.Add("SAMPacking", "SAMPacking")
            tableMapping.ColumnMappings.Add("TargetPacking", "TargetPacking")
            tableMapping.ColumnMappings.Add("ModelNo", "ModelNo")
            tableMapping.ColumnMappings.Add("ModelName", "ModelName")
            tableMapping.ColumnMappings.Add("FactoryCode", "FactoryCode")
            tableMapping.ColumnMappings.Add("ClientName", "ClientName")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.AMB_Froming.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        tbl_Pro_Article.ClientID, tbl_Pro_Article.ModelID, tbl_Pro_Article."& _ 
                "ArtID, tbl_Pro_Article.ArtCode, tbl_Pro_Article.Target, tbl_Pro_Article.SAMFormi"& _ 
                "ng, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         tbl_Pro_Article.SAMPacking, tbl_Pro_Article.Targe"& _ 
                "tPacking, tbl_Pro_Model.ModelNo, tbl_Pro_Model.ModelName, tbl_Pro_Model.FactoryC"& _ 
                "ode, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         tbl_Pro_Client.ClientName"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_P"& _ 
                "ro_Article, tbl_Pro_Model, tbl_Pro_Client"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        tbl_Pro_Article.ClientID"& _ 
                " = tbl_Pro_Model.ClientID AND tbl_Pro_Article.ModelID = tbl_Pro_Model.ModelID AN"& _ 
                "D tbl_Pro_Article.ClientID = tbl_Pro_Client.ClientID AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "    (tbl_Pro_Model.FactoryCode = 'B34006') "
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        dbo.tbl_Pro_Article.ClientID, dbo.tbl_Pro_Article.ModelID, dbo.tbl_"& _ 
                "Pro_Article.ArtID, dbo.tbl_Pro_Article.ArtCode, dbo.tbl_Pro_Article.Target, dbo."& _ 
                "tbl_Pro_Article.SAMForming, dbo.tbl_Pro_Article.SAMPacking, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "       dbo.tbl_Pro_Article.TargetPacking, dbo.tbl_Pro_Model.ModelNo, dbo.tbl_Pro"& _ 
                "_Model.ModelName, dbo.tbl_Pro_Model.FactoryCode"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            dbo.tbl_Pro_Art"& _ 
                "icle INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.tbl_Pro_Model ON dbo.tbl_Pro_Artic"& _ 
                "le.ClientID = dbo.tbl_Pro_Model.ClientID AND dbo.tbl_Pro_Article.ModelID = dbo.t"& _ 
                "bl_Pro_Model.ModelID INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.tbl_Pro_Client ON "& _ 
                "dbo.tbl_Pro_Model.ClientID = dbo.tbl_Pro_Client.ClientID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (dbo.tbl_"& _ 
                "Pro_Model.FactoryCode = 'B34005') AND (dbo.tbl_Pro_Client.UnitID = 1)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        tbl_Pro_Article.ClientID, tbl_Pro_Article.ModelID, tbl_Pro_Article."& _ 
                "ArtID, tbl_Pro_Article.ArtCode, tbl_Pro_Article.Target, tbl_Pro_Article.SAMFormi"& _ 
                "ng, tbl_Pro_Article.SAMPacking, tbl_Pro_Article.TargetPacking, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "          tbl_Pro_Model.ModelNo, tbl_Pro_Model.ModelName, tbl_Pro_Model.FactoryC"& _ 
                "ode"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_Pro_Article, tbl_Pro_Model, tbl_Pro_Client"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE      "& _ 
                "  tbl_Pro_Article.ClientID = tbl_Pro_Model.ClientID AND tbl_Pro_Article.ModelID "& _ 
                "= tbl_Pro_Model.ModelID AND tbl_Pro_Article.ClientID = tbl_Pro_Client.ClientID A"& _ 
                "ND (tbl_Pro_Client.UnitID = 1)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSAMB.tbl_Pro_ArticleDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSAMB.tbl_Pro_ArticleDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSAMB.tbl_Pro_ArticleDataTable = New DSAMB.tbl_Pro_ArticleDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DSAMB.tbl_Pro_ArticleDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy() As DSAMB.tbl_Pro_ArticleDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Dim dataTable As DSAMB.tbl_Pro_ArticleDataTable = New DSAMB.tbl_Pro_ArticleDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy1(ByVal dataTable As DSAMB.tbl_Pro_ArticleDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy1() As DSAMB.tbl_Pro_ArticleDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Dim dataTable As DSAMB.tbl_Pro_ArticleDataTable = New DSAMB.tbl_Pro_ArticleDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_Pro_Article_DTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_Pro_Article_D"
            tableMapping.ColumnMappings.Add("ClientID", "ClientID")
            tableMapping.ColumnMappings.Add("ModelID", "ModelID")
            tableMapping.ColumnMappings.Add("ArtID", "ArtID")
            tableMapping.ColumnMappings.Add("ModelNo", "ModelNo")
            tableMapping.ColumnMappings.Add("ModelName", "ModelName")
            tableMapping.ColumnMappings.Add("FactoryCode", "FactoryCode")
            tableMapping.ColumnMappings.Add("ArtSize", "ArtSize")
            tableMapping.ColumnMappings.Add("UnitID", "UnitID")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.AMB_Froming.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        tbl_Pro_Article_D.ClientID, tbl_Pro_Article_D.ModelID, tbl_Pro_Arti"& _ 
                "cle_D.ArtID, tbl_Pro_Model.ModelNo, tbl_Pro_Model.ModelName, tbl_Pro_Model.Facto"& _ 
                "ryCode, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         tbl_Pro_Article_D.ArtSize, tbl_Pro_Client.Uni"& _ 
                "tID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_Pro_Model, tbl_Pro_Article_D, tbl_Pro_Client"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE    "& _ 
                "    tbl_Pro_Model.ClientID = tbl_Pro_Article_D.ClientID AND tbl_Pro_Model.ModelI"& _ 
                "D = tbl_Pro_Article_D.ModelID AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         tbl_Pro_Model.Clien"& _ 
                "tID = tbl_Pro_Client.ClientID AND (tbl_Pro_Model.FactoryCode = 'B34006') "
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        dbo.tbl_Pro_Article_D.ClientID, dbo.tbl_Pro_Article_D.ModelID, dbo."& _ 
                "tbl_Pro_Article_D.ArtID, dbo.tbl_Pro_Model.ModelNo, dbo.tbl_Pro_Model.ModelName,"& _ 
                " dbo.tbl_Pro_Model.FactoryCode, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.tbl_Pro_Article_D"& _ 
                ".ArtSize"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            dbo.tbl_Pro_Model INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                " dbo.tbl_Pro_Article_D ON dbo.tbl_Pro_Model.ClientID = dbo.tbl_Pro_Article_D.Cli"& _ 
                "entID AND dbo.tbl_Pro_Model.ModelID = dbo.tbl_Pro_Article_D.ModelID INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                         dbo.tbl_Pro_Client ON dbo.tbl_Pro_Model.ClientID = dbo."& _ 
                "tbl_Pro_Client.ClientID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (dbo.tbl_Pro_Model.FactoryCode = 'B34005')"& _ 
                " AND (dbo.tbl_Pro_Client.UnitID = 1)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        tbl_Pro_Article_D.ClientID, tbl_Pro_Article_D.ModelID, tbl_Pro_Arti"& _ 
                "cle_D.ArtID, tbl_Pro_Model.ModelNo, tbl_Pro_Model.ModelName, tbl_Pro_Model.Facto"& _ 
                "ryCode, tbl_Pro_Article_D.ArtSize"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_Pro_Model, tbl_Pro_Articl"& _ 
                "e_D"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        tbl_Pro_Model.ClientID = tbl_Pro_Article_D.ClientID AND tbl_Pr"& _ 
                "o_Model.ModelID = tbl_Pro_Article_D.ModelID AND (tbl_Pro_Article_D.ClientID = 1)"& _ 
                ""
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSAMB.tbl_Pro_Article_DDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSAMB.tbl_Pro_Article_DDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSAMB.tbl_Pro_Article_DDataTable = New DSAMB.tbl_Pro_Article_DDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DSAMB.tbl_Pro_Article_DDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy() As DSAMB.tbl_Pro_Article_DDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Dim dataTable As DSAMB.tbl_Pro_Article_DDataTable = New DSAMB.tbl_Pro_Article_DDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy1(ByVal dataTable As DSAMB.tbl_Pro_Article_DDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy1() As DSAMB.tbl_Pro_Article_DDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Dim dataTable As DSAMB.tbl_Pro_Article_DDataTable = New DSAMB.tbl_Pro_Article_DDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_Inv_Tran_DateTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_Inv_Tran_Date"
            tableMapping.ColumnMappings.Add("DayNo", "DayNo")
            tableMapping.ColumnMappings.Add("DateName", "DateName")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tbl_Inv_Tran_Date] WHERE (([DayNo] = ?) AND ([DateName] = ?))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DayNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DayNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DateName", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tbl_Inv_Tran_Date] ([DateName]) VALUES (?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DateName", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tbl_Inv_Tran_Date] SET [DateName] = ? WHERE (([DayNo] = ?) AND ([DateName"& _ 
                "] = ?))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DateName", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DayNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DayNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DateName", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateName", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.AMB_Froming.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        DayNo, DateName"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_Inv_Tran_Date"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (D"& _ 
                "ateName >= ?)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DateName", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateName", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSAMB.tbl_Inv_Tran_DateDataTable, ByVal DateName As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateName,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal DateName As Date) As DSAMB.tbl_Inv_Tran_DateDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateName,Date)
            Dim dataTable As DSAMB.tbl_Inv_Tran_DateDataTable = New DSAMB.tbl_Inv_Tran_DateDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSAMB.tbl_Inv_Tran_DateDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSAMB) As Integer
            Return Me.Adapter.Update(dataSet, "tbl_Inv_Tran_Date")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_DayNo As Integer, ByVal Original_DateName As Date) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_DayNo,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_DateName,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal DateName As Date) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(DateName,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal DateName As Date, ByVal Original_DayNo As Integer, ByVal Original_DateName As Date) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(DateName,Date)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Original_DayNo,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_DateName,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_PC_AMB_Hours_TranTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_PC_AMB_Hours_Tran"
            tableMapping.ColumnMappings.Add("TranID", "TranID")
            tableMapping.ColumnMappings.Add("PO", "PO")
            tableMapping.ColumnMappings.Add("POM", "POM")
            tableMapping.ColumnMappings.Add("POD", "POD")
            tableMapping.ColumnMappings.Add("ArtSize", "ArtSize")
            tableMapping.ColumnMappings.Add("DayID", "DayID")
            tableMapping.ColumnMappings.Add("HourID", "HourID")
            tableMapping.ColumnMappings.Add("LineID", "LineID")
            tableMapping.ColumnMappings.Add("ProcessID", "ProcessID")
            tableMapping.ColumnMappings.Add("Strength", "Strength")
            tableMapping.ColumnMappings.Add("Present", "Present")
            tableMapping.ColumnMappings.Add("PackingStrength", "PackingStrength")
            tableMapping.ColumnMappings.Add("PackingPresent", "PackingPresent")
            tableMapping.ColumnMappings.Add("ArtTarget", "ArtTarget")
            tableMapping.ColumnMappings.Add("ArtPackingTarget", "ArtPackingTarget")
            tableMapping.ColumnMappings.Add("ArtSAM", "ArtSAM")
            tableMapping.ColumnMappings.Add("ArtPackingSAM", "ArtPackingSAM")
            tableMapping.ColumnMappings.Add("Input", "Input")
            tableMapping.ColumnMappings.Add("OutPut", "OutPut")
            tableMapping.ColumnMappings.Add("Rejection", "Rejection")
            tableMapping.ColumnMappings.Add("ClientID", "ClientID")
            tableMapping.ColumnMappings.Add("ModelID", "ModelID")
            tableMapping.ColumnMappings.Add("ArtID", "ArtID")
            tableMapping.ColumnMappings.Add("SeamClosingGlue", "SeamClosingGlue")
            tableMapping.ColumnMappings.Add("PUC", "PUC")
            tableMapping.ColumnMappings.Add("CoreCavity", "CoreCavity")
            tableMapping.ColumnMappings.Add("Touching", "Touching")
            tableMapping.ColumnMappings.Add("OtherPrintingIssue", "OtherPrintingIssue")
            tableMapping.ColumnMappings.Add("PanelCavity", "PanelCavity")
            tableMapping.ColumnMappings.Add("OpenSeam", "OpenSeam")
            tableMapping.ColumnMappings.Add("SingleOpenStrip", "SingleOpenStrip")
            tableMapping.ColumnMappings.Add("UnbondedPanels", "UnbondedPanels")
            tableMapping.ColumnMappings.Add("ArtWork", "ArtWork")
            tableMapping.ColumnMappings.Add("Wrinkle", "Wrinkle")
            tableMapping.ColumnMappings.Add("ZigZagSeam", "ZigZagSeam")
            tableMapping.ColumnMappings.Add("OverLap", "OverLap")
            tableMapping.ColumnMappings.Add("PanelDMG", "PanelDMG")
            tableMapping.ColumnMappings.Add("BGrade", "BGrade")
            tableMapping.ColumnMappings.Add("MissAlligment", "MissAlligment")
            tableMapping.ColumnMappings.Add("DisColor", "DisColor")
            tableMapping.ColumnMappings.Add("LogoSmearing", "LogoSmearing")
            tableMapping.ColumnMappings.Add("LogoDoubling", "LogoDoubling")
            tableMapping.ColumnMappings.Add("BarcodeMissing", "BarcodeMissing")
            tableMapping.ColumnMappings.Add("LargerSpots", "LargerSpots")
            tableMapping.ColumnMappings.Add("Smearing", "Smearing")
            tableMapping.ColumnMappings.Add("HFMissAlignment", "HFMissAlignment")
            tableMapping.ColumnMappings.Add("BlurPrinting", "BlurPrinting")
            tableMapping.ColumnMappings.Add("BallType", "BallType")
            tableMapping.ColumnMappings.Add("unevenBallSurface", "unevenBallSurface")
            tableMapping.ColumnMappings.Add("unshapecut", "unshapecut")
            tableMapping.ColumnMappings.Add("zigzagedge", "zigzagedge")
            tableMapping.ColumnMappings.Add("cuttingpanel", "cuttingpanel")
            tableMapping.ColumnMappings.Add("heavyprintdefects", "heavyprintdefects")
            tableMapping.ColumnMappings.Add("NewTouching", "NewTouching")
            tableMapping.ColumnMappings.Add("printmissallignament", "printmissallignament")
            tableMapping.ColumnMappings.Add("anymisprint", "anymisprint")
            tableMapping.ColumnMappings.Add("colourShape", "colourShape")
            tableMapping.ColumnMappings.Add("wrongartwork", "wrongartwork")
            tableMapping.ColumnMappings.Add("materialdefects", "materialdefects")
            tableMapping.ColumnMappings.Add("newopenSeam", "newopenSeam")
            tableMapping.ColumnMappings.Add("seamoverlapping", "seamoverlapping")
            tableMapping.ColumnMappings.Add("wrinkles", "wrinkles")
            tableMapping.ColumnMappings.Add("excussglue", "excussglue")
            tableMapping.ColumnMappings.Add("missingglue", "missingglue")
            tableMapping.ColumnMappings.Add("pressoremark", "pressoremark")
            tableMapping.ColumnMappings.Add("airbubble", "airbubble")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tbl_PC_AMB_Hours_Tran] WHERE (([TranID] = ?) AND ((? = 1 AND [PO] IS"& _ 
                " NULL) OR ([PO] = ?)) AND ((? = 1 AND [POM] IS NULL) OR ([POM] = ?)) AND ((? = 1"& _ 
                " AND [POD] IS NULL) OR ([POD] = ?)) AND ([ArtSize] = ?) AND ([DayID] = ?) AND (("& _ 
                "? = 1 AND [HourID] IS NULL) OR ([HourID] = ?)) AND ([LineID] = ?) AND ([ProcessI"& _ 
                "D] = ?) AND ((? = 1 AND [Strength] IS NULL) OR ([Strength] = ?)) AND ((? = 1 AND"& _ 
                " [Present] IS NULL) OR ([Present] = ?)) AND ((? = 1 AND [PackingStrength] IS NUL"& _ 
                "L) OR ([PackingStrength] = ?)) AND ((? = 1 AND [PackingPresent] IS NULL) OR ([Pa"& _ 
                "ckingPresent] = ?)) AND ((? = 1 AND [ArtTarget] IS NULL) OR ([ArtTarget] = ?)) A"& _ 
                "ND ((? = 1 AND [ArtPackingTarget] IS NULL) OR ([ArtPackingTarget] = ?)) AND ((? "& _ 
                "= 1 AND [ArtSAM] IS NULL) OR ([ArtSAM] = ?)) AND ((? = 1 AND [ArtPackingSAM] IS "& _ 
                "NULL) OR ([ArtPackingSAM] = ?)) AND ((? = 1 AND [Input] IS NULL) OR ([Input] = ?"& _ 
                ")) AND ((? = 1 AND [OutPut] IS NULL) OR ([OutPut] = ?)) AND ((? = 1 AND [Rejecti"& _ 
                "on] IS NULL) OR ([Rejection] = ?)) AND ([ClientID] = ?) AND ([ModelID] = ?) AND "& _ 
                "([ArtID] = ?) AND ((? = 1 AND [SeamClosingGlue] IS NULL) OR ([SeamClosingGlue] ="& _ 
                " ?)) AND ((? = 1 AND [PUC] IS NULL) OR ([PUC] = ?)) AND ((? = 1 AND [CoreCavity]"& _ 
                " IS NULL) OR ([CoreCavity] = ?)) AND ((? = 1 AND [Touching] IS NULL) OR ([Touchi"& _ 
                "ng] = ?)) AND ((? = 1 AND [OtherPrintingIssue] IS NULL) OR ([OtherPrintingIssue]"& _ 
                " = ?)) AND ((? = 1 AND [PanelCavity] IS NULL) OR ([PanelCavity] = ?)) AND ((? = "& _ 
                "1 AND [OpenSeam] IS NULL) OR ([OpenSeam] = ?)) AND ((? = 1 AND [SingleOpenStrip]"& _ 
                " IS NULL) OR ([SingleOpenStrip] = ?)) AND ((? = 1 AND [UnbondedPanels] IS NULL) "& _ 
                "OR ([UnbondedPanels] = ?)) AND ((? = 1 AND [ArtWork] IS NULL) OR ([ArtWork] = ?)"& _ 
                ") AND ((? = 1 AND [Wrinkle] IS NULL) OR ([Wrinkle] = ?)) AND ((? = 1 AND [ZigZag"& _ 
                "Seam] IS NULL) OR ([ZigZagSeam] = ?)) AND ((? = 1 AND [OverLap] IS NULL) OR ([Ov"& _ 
                "erLap] = ?)) AND ((? = 1 AND [PanelDMG] IS NULL) OR ([PanelDMG] = ?)) AND ((? = "& _ 
                "1 AND [BGrade] IS NULL) OR ([BGrade] = ?)) AND ((? = 1 AND [MissAlligment] IS NU"& _ 
                "LL) OR ([MissAlligment] = ?)) AND ((? = 1 AND [DisColor] IS NULL) OR ([DisColor]"& _ 
                " = ?)) AND ((? = 1 AND [LogoSmearing] IS NULL) OR ([LogoSmearing] = ?)) AND ((? "& _ 
                "= 1 AND [LogoDoubling] IS NULL) OR ([LogoDoubling] = ?)) AND ((? = 1 AND [Barcod"& _ 
                "eMissing] IS NULL) OR ([BarcodeMissing] = ?)) AND ((? = 1 AND [LargerSpots] IS N"& _ 
                "ULL) OR ([LargerSpots] = ?)) AND ((? = 1 AND [Smearing] IS NULL) OR ([Smearing] "& _ 
                "= ?)) AND ((? = 1 AND [HFMissAlignment] IS NULL) OR ([HFMissAlignment] = ?)) AND"& _ 
                " ((? = 1 AND [BlurPrinting] IS NULL) OR ([BlurPrinting] = ?)) AND ((? = 1 AND [B"& _ 
                "allType] IS NULL) OR ([BallType] = ?)) AND ((? = 1 AND [unevenBallSurface] IS NU"& _ 
                "LL) OR ([unevenBallSurface] = ?)) AND ((? = 1 AND [unshapecut] IS NULL) OR ([uns"& _ 
                "hapecut] = ?)) AND ((? = 1 AND [zigzagedge] IS NULL) OR ([zigzagedge] = ?)) AND "& _ 
                "((? = 1 AND [cuttingpanel] IS NULL) OR ([cuttingpanel] = ?)) AND ((? = 1 AND [he"& _ 
                "avyprintdefects] IS NULL) OR ([heavyprintdefects] = ?)) AND ((? = 1 AND [NewTouc"& _ 
                "hing] IS NULL) OR ([NewTouching] = ?)) AND ((? = 1 AND [printmissallignament] IS"& _ 
                " NULL) OR ([printmissallignament] = ?)) AND ((? = 1 AND [anymisprint] IS NULL) O"& _ 
                "R ([anymisprint] = ?)) AND ((? = 1 AND [colourShape] IS NULL) OR ([colourShape] "& _ 
                "= ?)) AND ((? = 1 AND [wrongartwork] IS NULL) OR ([wrongartwork] = ?)) AND ((? ="& _ 
                " 1 AND [materialdefects] IS NULL) OR ([materialdefects] = ?)) AND ((? = 1 AND [n"& _ 
                "ewopenSeam] IS NULL) OR ([newopenSeam] = ?)) AND ((? = 1 AND [seamoverlapping] I"& _ 
                "S NULL) OR ([seamoverlapping] = ?)) AND ((? = 1 AND [wrinkles] IS NULL) OR ([wri"& _ 
                "nkles] = ?)) AND ((? = 1 AND [excussglue] IS NULL) OR ([excussglue] = ?)) AND (("& _ 
                "? = 1 AND [missingglue] IS NULL) OR ([missingglue] = ?)) AND ((? = 1 AND [presso"& _ 
                "remark] IS NULL) OR ([pressoremark] = ?)) AND ((? = 1 AND [airbubble] IS NULL) O"& _ 
                "R ([airbubble] = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_TranID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TranID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PO", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PO", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_POM", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "POM", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_POM", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "POM", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_POD", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "POD", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_POD", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "POD", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ArtSize", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ArtSize", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DayID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DayID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_HourID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HourID", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_HourID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HourID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LineID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LineID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ProcessID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ProcessID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Strength", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Strength", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Strength", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "Strength", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Present", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Present", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Present", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "Present", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PackingStrength", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PackingStrength", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PackingStrength", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "PackingStrength", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PackingPresent", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PackingPresent", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PackingPresent", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "PackingPresent", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ArtTarget", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ArtTarget", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ArtTarget", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "ArtTarget", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ArtPackingTarget", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ArtPackingTarget", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ArtPackingTarget", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "ArtPackingTarget", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ArtSAM", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ArtSAM", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ArtSAM", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "ArtSAM", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ArtPackingSAM", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ArtPackingSAM", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ArtPackingSAM", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "ArtPackingSAM", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Input", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Input", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Input", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "Input", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_OutPut", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OutPut", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_OutPut", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OutPut", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Rejection", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Rejection", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Rejection", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "Rejection", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ClientID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ClientID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ModelID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ModelID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ArtID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ArtID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_SeamClosingGlue", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SeamClosingGlue", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_SeamClosingGlue", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "SeamClosingGlue", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PUC", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PUC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PUC", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PUC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CoreCavity", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CoreCavity", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CoreCavity", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "CoreCavity", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Touching", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Touching", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Touching", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "Touching", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_OtherPrintingIssue", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OtherPrintingIssue", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_OtherPrintingIssue", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OtherPrintingIssue", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PanelCavity", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PanelCavity", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PanelCavity", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PanelCavity", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_OpenSeam", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OpenSeam", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_OpenSeam", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OpenSeam", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_SingleOpenStrip", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SingleOpenStrip", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_SingleOpenStrip", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "SingleOpenStrip", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_UnbondedPanels", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UnbondedPanels", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_UnbondedPanels", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "UnbondedPanels", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ArtWork", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ArtWork", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ArtWork", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "ArtWork", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Wrinkle", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Wrinkle", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Wrinkle", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "Wrinkle", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ZigZagSeam", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZigZagSeam", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ZigZagSeam", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "ZigZagSeam", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_OverLap", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OverLap", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_OverLap", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OverLap", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PanelDMG", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PanelDMG", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PanelDMG", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PanelDMG", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BGrade", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BGrade", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BGrade", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "BGrade", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_MissAlligment", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MissAlligment", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_MissAlligment", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "MissAlligment", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DisColor", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DisColor", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DisColor", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "DisColor", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LogoSmearing", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LogoSmearing", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LogoSmearing", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "LogoSmearing", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LogoDoubling", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LogoDoubling", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LogoDoubling", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "LogoDoubling", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BarcodeMissing", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BarcodeMissing", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BarcodeMissing", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "BarcodeMissing", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LargerSpots", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LargerSpots", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LargerSpots", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "LargerSpots", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Smearing", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Smearing", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Smearing", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "Smearing", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_HFMissAlignment", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HFMissAlignment", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_HFMissAlignment", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "HFMissAlignment", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BlurPrinting", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BlurPrinting", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BlurPrinting", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "BlurPrinting", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BallType", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BallType", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BallType", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BallType", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_unevenBallSurface", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "unevenBallSurface", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_unevenBallSurface", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "unevenBallSurface", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_unshapecut", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "unshapecut", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_unshapecut", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "unshapecut", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_zigzagedge", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "zigzagedge", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_zigzagedge", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "zigzagedge", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_cuttingpanel", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cuttingpanel", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_cuttingpanel", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "cuttingpanel", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_heavyprintdefects", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "heavyprintdefects", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_heavyprintdefects", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "heavyprintdefects", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_NewTouching", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NewTouching", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_NewTouching", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "NewTouching", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_printmissallignament", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "printmissallignament", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_printmissallignament", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "printmissallignament", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_anymisprint", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "anymisprint", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_anymisprint", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "anymisprint", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_colourShape", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "colourShape", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_colourShape", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "colourShape", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_wrongartwork", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "wrongartwork", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_wrongartwork", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "wrongartwork", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_materialdefects", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "materialdefects", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_materialdefects", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "materialdefects", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_newopenSeam", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "newopenSeam", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_newopenSeam", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "newopenSeam", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_seamoverlapping", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "seamoverlapping", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_seamoverlapping", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "seamoverlapping", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_wrinkles", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "wrinkles", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_wrinkles", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "wrinkles", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_excussglue", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "excussglue", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_excussglue", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "excussglue", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_missingglue", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "missingglue", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_missingglue", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "missingglue", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_pressoremark", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "pressoremark", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_pressoremark", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "pressoremark", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_airbubble", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "airbubble", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_airbubble", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "airbubble", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tbl_PC_AMB_Hours_Tran] ([PO], [POM], [POD], [ArtSize], [DayID], [Hou"& _ 
                "rID], [LineID], [ProcessID], [Strength], [Present], [PackingStrength], [PackingP"& _ 
                "resent], [ArtTarget], [ArtPackingTarget], [ArtSAM], [ArtPackingSAM], [Input], [O"& _ 
                "utPut], [Rejection], [ClientID], [ModelID], [ArtID], [SeamClosingGlue], [PUC], ["& _ 
                "CoreCavity], [Touching], [OtherPrintingIssue], [PanelCavity], [OpenSeam], [Singl"& _ 
                "eOpenStrip], [UnbondedPanels], [ArtWork], [Wrinkle], [ZigZagSeam], [OverLap], [P"& _ 
                "anelDMG], [BGrade], [MissAlligment], [DisColor], [LogoSmearing], [LogoDoubling],"& _ 
                " [BarcodeMissing], [LargerSpots], [Smearing], [HFMissAlignment], [BlurPrinting],"& _ 
                " [BallType], [unevenBallSurface], [unshapecut], [zigzagedge], [cuttingpanel], [h"& _ 
                "eavyprintdefects], [NewTouching], [printmissallignament], [anymisprint], [colour"& _ 
                "Shape], [wrongartwork], [materialdefects], [newopenSeam], [seamoverlapping], [wr"& _ 
                "inkles], [excussglue], [missingglue], [pressoremark], [airbubble]) VALUES (?, ?,"& _ 
                " ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?"& _ 
                ", ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, "& _ 
                "?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PO", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("POM", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "POM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("POD", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "POD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ArtSize", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ArtSize", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DayID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DayID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("HourID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HourID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LineID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LineID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ProcessID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ProcessID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Strength", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "Strength", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Present", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "Present", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PackingStrength", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "PackingStrength", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PackingPresent", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "PackingPresent", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ArtTarget", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "ArtTarget", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ArtPackingTarget", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "ArtPackingTarget", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ArtSAM", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "ArtSAM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ArtPackingSAM", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "ArtPackingSAM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Input", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "Input", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OutPut", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OutPut", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Rejection", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "Rejection", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ClientID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ClientID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ModelID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ModelID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ArtID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ArtID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("SeamClosingGlue", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "SeamClosingGlue", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PUC", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PUC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CoreCavity", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "CoreCavity", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Touching", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "Touching", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OtherPrintingIssue", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OtherPrintingIssue", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PanelCavity", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PanelCavity", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OpenSeam", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OpenSeam", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("SingleOpenStrip", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "SingleOpenStrip", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UnbondedPanels", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "UnbondedPanels", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ArtWork", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "ArtWork", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Wrinkle", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "Wrinkle", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ZigZagSeam", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "ZigZagSeam", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OverLap", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OverLap", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PanelDMG", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PanelDMG", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BGrade", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "BGrade", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("MissAlligment", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "MissAlligment", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DisColor", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "DisColor", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LogoSmearing", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "LogoSmearing", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LogoDoubling", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "LogoDoubling", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BarcodeMissing", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "BarcodeMissing", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LargerSpots", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "LargerSpots", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Smearing", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "Smearing", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("HFMissAlignment", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "HFMissAlignment", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BlurPrinting", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "BlurPrinting", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BallType", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BallType", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("unevenBallSurface", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "unevenBallSurface", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("unshapecut", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "unshapecut", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("zigzagedge", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "zigzagedge", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("cuttingpanel", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "cuttingpanel", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("heavyprintdefects", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "heavyprintdefects", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("NewTouching", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "NewTouching", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("printmissallignament", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "printmissallignament", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("anymisprint", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "anymisprint", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("colourShape", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "colourShape", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("wrongartwork", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "wrongartwork", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("materialdefects", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "materialdefects", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("newopenSeam", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "newopenSeam", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("seamoverlapping", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "seamoverlapping", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("wrinkles", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "wrinkles", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("excussglue", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "excussglue", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("missingglue", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "missingglue", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("pressoremark", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "pressoremark", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("airbubble", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "airbubble", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tbl_PC_AMB_Hours_Tran] SET [PO] = ?, [POM] = ?, [POD] = ?, [ArtSize] = ?,"& _ 
                " [DayID] = ?, [HourID] = ?, [LineID] = ?, [ProcessID] = ?, [Strength] = ?, [Pres"& _ 
                "ent] = ?, [PackingStrength] = ?, [PackingPresent] = ?, [ArtTarget] = ?, [ArtPack"& _ 
                "ingTarget] = ?, [ArtSAM] = ?, [ArtPackingSAM] = ?, [Input] = ?, [OutPut] = ?, [R"& _ 
                "ejection] = ?, [ClientID] = ?, [ModelID] = ?, [ArtID] = ?, [SeamClosingGlue] = ?"& _ 
                ", [PUC] = ?, [CoreCavity] = ?, [Touching] = ?, [OtherPrintingIssue] = ?, [PanelC"& _ 
                "avity] = ?, [OpenSeam] = ?, [SingleOpenStrip] = ?, [UnbondedPanels] = ?, [ArtWor"& _ 
                "k] = ?, [Wrinkle] = ?, [ZigZagSeam] = ?, [OverLap] = ?, [PanelDMG] = ?, [BGrade]"& _ 
                " = ?, [MissAlligment] = ?, [DisColor] = ?, [LogoSmearing] = ?, [LogoDoubling] = "& _ 
                "?, [BarcodeMissing] = ?, [LargerSpots] = ?, [Smearing] = ?, [HFMissAlignment] = "& _ 
                "?, [BlurPrinting] = ?, [BallType] = ?, [unevenBallSurface] = ?, [unshapecut] = ?"& _ 
                ", [zigzagedge] = ?, [cuttingpanel] = ?, [heavyprintdefects] = ?, [NewTouching] ="& _ 
                " ?, [printmissallignament] = ?, [anymisprint] = ?, [colourShape] = ?, [wrongartw"& _ 
                "ork] = ?, [materialdefects] = ?, [newopenSeam] = ?, [seamoverlapping] = ?, [wrin"& _ 
                "kles] = ?, [excussglue] = ?, [missingglue] = ?, [pressoremark] = ?, [airbubble] "& _ 
                "= ? WHERE (([TranID] = ?) AND ((? = 1 AND [PO] IS NULL) OR ([PO] = ?)) AND ((? ="& _ 
                " 1 AND [POM] IS NULL) OR ([POM] = ?)) AND ((? = 1 AND [POD] IS NULL) OR ([POD] ="& _ 
                " ?)) AND ([ArtSize] = ?) AND ([DayID] = ?) AND ((? = 1 AND [HourID] IS NULL) OR "& _ 
                "([HourID] = ?)) AND ([LineID] = ?) AND ([ProcessID] = ?) AND ((? = 1 AND [Streng"& _ 
                "th] IS NULL) OR ([Strength] = ?)) AND ((? = 1 AND [Present] IS NULL) OR ([Presen"& _ 
                "t] = ?)) AND ((? = 1 AND [PackingStrength] IS NULL) OR ([PackingStrength] = ?)) "& _ 
                "AND ((? = 1 AND [PackingPresent] IS NULL) OR ([PackingPresent] = ?)) AND ((? = 1"& _ 
                " AND [ArtTarget] IS NULL) OR ([ArtTarget] = ?)) AND ((? = 1 AND [ArtPackingTarge"& _ 
                "t] IS NULL) OR ([ArtPackingTarget] = ?)) AND ((? = 1 AND [ArtSAM] IS NULL) OR (["& _ 
                "ArtSAM] = ?)) AND ((? = 1 AND [ArtPackingSAM] IS NULL) OR ([ArtPackingSAM] = ?))"& _ 
                " AND ((? = 1 AND [Input] IS NULL) OR ([Input] = ?)) AND ((? = 1 AND [OutPut] IS "& _ 
                "NULL) OR ([OutPut] = ?)) AND ((? = 1 AND [Rejection] IS NULL) OR ([Rejection] = "& _ 
                "?)) AND ([ClientID] = ?) AND ([ModelID] = ?) AND ([ArtID] = ?) AND ((? = 1 AND ["& _ 
                "SeamClosingGlue] IS NULL) OR ([SeamClosingGlue] = ?)) AND ((? = 1 AND [PUC] IS N"& _ 
                "ULL) OR ([PUC] = ?)) AND ((? = 1 AND [CoreCavity] IS NULL) OR ([CoreCavity] = ?)"& _ 
                ") AND ((? = 1 AND [Touching] IS NULL) OR ([Touching] = ?)) AND ((? = 1 AND [Othe"& _ 
                "rPrintingIssue] IS NULL) OR ([OtherPrintingIssue] = ?)) AND ((? = 1 AND [PanelCa"& _ 
                "vity] IS NULL) OR ([PanelCavity] = ?)) AND ((? = 1 AND [OpenSeam] IS NULL) OR (["& _ 
                "OpenSeam] = ?)) AND ((? = 1 AND [SingleOpenStrip] IS NULL) OR ([SingleOpenStrip]"& _ 
                " = ?)) AND ((? = 1 AND [UnbondedPanels] IS NULL) OR ([UnbondedPanels] = ?)) AND "& _ 
                "((? = 1 AND [ArtWork] IS NULL) OR ([ArtWork] = ?)) AND ((? = 1 AND [Wrinkle] IS "& _ 
                "NULL) OR ([Wrinkle] = ?)) AND ((? = 1 AND [ZigZagSeam] IS NULL) OR ([ZigZagSeam]"& _ 
                " = ?)) AND ((? = 1 AND [OverLap] IS NULL) OR ([OverLap] = ?)) AND ((? = 1 AND [P"& _ 
                "anelDMG] IS NULL) OR ([PanelDMG] = ?)) AND ((? = 1 AND [BGrade] IS NULL) OR ([BG"& _ 
                "rade] = ?)) AND ((? = 1 AND [MissAlligment] IS NULL) OR ([MissAlligment] = ?)) A"& _ 
                "ND ((? = 1 AND [DisColor] IS NULL) OR ([DisColor] = ?)) AND ((? = 1 AND [LogoSme"& _ 
                "aring] IS NULL) OR ([LogoSmearing] = ?)) AND ((? = 1 AND [LogoDoubling] IS NULL)"& _ 
                " OR ([LogoDoubling] = ?)) AND ((? = 1 AND [BarcodeMissing] IS NULL) OR ([Barcode"& _ 
                "Missing] = ?)) AND ((? = 1 AND [LargerSpots] IS NULL) OR ([LargerSpots] = ?)) AN"& _ 
                "D ((? = 1 AND [Smearing] IS NULL) OR ([Smearing] = ?)) AND ((? = 1 AND [HFMissAl"& _ 
                "ignment] IS NULL) OR ([HFMissAlignment] = ?)) AND ((? = 1 AND [BlurPrinting] IS "& _ 
                "NULL) OR ([BlurPrinting] = ?)) AND ((? = 1 AND [BallType] IS NULL) OR ([BallType"& _ 
                "] = ?)) AND ((? = 1 AND [unevenBallSurface] IS NULL) OR ([unevenBallSurface] = ?"& _ 
                ")) AND ((? = 1 AND [unshapecut] IS NULL) OR ([unshapecut] = ?)) AND ((? = 1 AND "& _ 
                "[zigzagedge] IS NULL) OR ([zigzagedge] = ?)) AND ((? = 1 AND [cuttingpanel] IS N"& _ 
                "ULL) OR ([cuttingpanel] = ?)) AND ((? = 1 AND [heavyprintdefects] IS NULL) OR (["& _ 
                "heavyprintdefects] = ?)) AND ((? = 1 AND [NewTouching] IS NULL) OR ([NewTouching"& _ 
                "] = ?)) AND ((? = 1 AND [printmissallignament] IS NULL) OR ([printmissallignamen"& _ 
                "t] = ?)) AND ((? = 1 AND [anymisprint] IS NULL) OR ([anymisprint] = ?)) AND ((? "& _ 
                "= 1 AND [colourShape] IS NULL) OR ([colourShape] = ?)) AND ((? = 1 AND [wrongart"& _ 
                "work] IS NULL) OR ([wrongartwork] = ?)) AND ((? = 1 AND [materialdefects] IS NUL"& _ 
                "L) OR ([materialdefects] = ?)) AND ((? = 1 AND [newopenSeam] IS NULL) OR ([newop"& _ 
                "enSeam] = ?)) AND ((? = 1 AND [seamoverlapping] IS NULL) OR ([seamoverlapping] ="& _ 
                " ?)) AND ((? = 1 AND [wrinkles] IS NULL) OR ([wrinkles] = ?)) AND ((? = 1 AND [e"& _ 
                "xcussglue] IS NULL) OR ([excussglue] = ?)) AND ((? = 1 AND [missingglue] IS NULL"& _ 
                ") OR ([missingglue] = ?)) AND ((? = 1 AND [pressoremark] IS NULL) OR ([pressorem"& _ 
                "ark] = ?)) AND ((? = 1 AND [airbubble] IS NULL) OR ([airbubble] = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PO", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("POM", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "POM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("POD", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "POD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ArtSize", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ArtSize", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DayID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DayID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("HourID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HourID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LineID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LineID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ProcessID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ProcessID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Strength", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "Strength", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Present", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "Present", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PackingStrength", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "PackingStrength", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PackingPresent", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "PackingPresent", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ArtTarget", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "ArtTarget", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ArtPackingTarget", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "ArtPackingTarget", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ArtSAM", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "ArtSAM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ArtPackingSAM", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "ArtPackingSAM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Input", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "Input", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OutPut", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OutPut", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Rejection", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "Rejection", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ClientID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ClientID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ModelID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ModelID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ArtID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ArtID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("SeamClosingGlue", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "SeamClosingGlue", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PUC", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PUC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CoreCavity", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "CoreCavity", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Touching", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "Touching", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OtherPrintingIssue", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OtherPrintingIssue", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PanelCavity", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PanelCavity", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OpenSeam", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OpenSeam", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("SingleOpenStrip", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "SingleOpenStrip", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UnbondedPanels", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "UnbondedPanels", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ArtWork", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "ArtWork", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Wrinkle", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "Wrinkle", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ZigZagSeam", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "ZigZagSeam", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OverLap", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OverLap", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PanelDMG", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PanelDMG", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BGrade", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "BGrade", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("MissAlligment", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "MissAlligment", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DisColor", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "DisColor", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LogoSmearing", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "LogoSmearing", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LogoDoubling", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "LogoDoubling", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BarcodeMissing", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "BarcodeMissing", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LargerSpots", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "LargerSpots", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Smearing", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "Smearing", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("HFMissAlignment", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "HFMissAlignment", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BlurPrinting", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "BlurPrinting", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BallType", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BallType", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("unevenBallSurface", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "unevenBallSurface", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("unshapecut", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "unshapecut", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("zigzagedge", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "zigzagedge", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("cuttingpanel", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "cuttingpanel", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("heavyprintdefects", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "heavyprintdefects", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("NewTouching", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "NewTouching", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("printmissallignament", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "printmissallignament", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("anymisprint", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "anymisprint", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("colourShape", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "colourShape", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("wrongartwork", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "wrongartwork", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("materialdefects", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "materialdefects", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("newopenSeam", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "newopenSeam", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("seamoverlapping", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "seamoverlapping", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("wrinkles", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "wrinkles", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("excussglue", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "excussglue", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("missingglue", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "missingglue", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("pressoremark", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "pressoremark", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("airbubble", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "airbubble", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_TranID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TranID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PO", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PO", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_POM", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "POM", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_POM", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "POM", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_POD", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "POD", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_POD", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "POD", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ArtSize", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ArtSize", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DayID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DayID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_HourID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HourID", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_HourID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HourID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LineID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LineID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ProcessID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ProcessID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Strength", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Strength", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Strength", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "Strength", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Present", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Present", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Present", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "Present", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PackingStrength", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PackingStrength", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PackingStrength", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "PackingStrength", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PackingPresent", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PackingPresent", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PackingPresent", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "PackingPresent", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ArtTarget", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ArtTarget", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ArtTarget", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "ArtTarget", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ArtPackingTarget", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ArtPackingTarget", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ArtPackingTarget", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "ArtPackingTarget", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ArtSAM", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ArtSAM", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ArtSAM", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "ArtSAM", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ArtPackingSAM", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ArtPackingSAM", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ArtPackingSAM", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "ArtPackingSAM", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Input", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Input", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Input", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "Input", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_OutPut", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OutPut", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_OutPut", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OutPut", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Rejection", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Rejection", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Rejection", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "Rejection", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ClientID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ClientID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ModelID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ModelID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ArtID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ArtID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_SeamClosingGlue", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SeamClosingGlue", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_SeamClosingGlue", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "SeamClosingGlue", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PUC", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PUC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PUC", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PUC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CoreCavity", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CoreCavity", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CoreCavity", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "CoreCavity", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Touching", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Touching", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Touching", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "Touching", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_OtherPrintingIssue", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OtherPrintingIssue", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_OtherPrintingIssue", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OtherPrintingIssue", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PanelCavity", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PanelCavity", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PanelCavity", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PanelCavity", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_OpenSeam", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OpenSeam", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_OpenSeam", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OpenSeam", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_SingleOpenStrip", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SingleOpenStrip", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_SingleOpenStrip", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "SingleOpenStrip", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_UnbondedPanels", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UnbondedPanels", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_UnbondedPanels", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "UnbondedPanels", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ArtWork", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ArtWork", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ArtWork", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "ArtWork", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Wrinkle", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Wrinkle", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Wrinkle", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "Wrinkle", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ZigZagSeam", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZigZagSeam", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ZigZagSeam", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "ZigZagSeam", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_OverLap", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OverLap", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_OverLap", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OverLap", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PanelDMG", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PanelDMG", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PanelDMG", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PanelDMG", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BGrade", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BGrade", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BGrade", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "BGrade", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_MissAlligment", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MissAlligment", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_MissAlligment", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "MissAlligment", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DisColor", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DisColor", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DisColor", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "DisColor", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LogoSmearing", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LogoSmearing", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LogoSmearing", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "LogoSmearing", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LogoDoubling", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LogoDoubling", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LogoDoubling", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "LogoDoubling", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BarcodeMissing", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BarcodeMissing", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BarcodeMissing", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "BarcodeMissing", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LargerSpots", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LargerSpots", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LargerSpots", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "LargerSpots", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Smearing", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Smearing", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Smearing", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "Smearing", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_HFMissAlignment", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HFMissAlignment", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_HFMissAlignment", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "HFMissAlignment", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BlurPrinting", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BlurPrinting", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BlurPrinting", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "BlurPrinting", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BallType", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BallType", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BallType", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BallType", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_unevenBallSurface", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "unevenBallSurface", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_unevenBallSurface", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "unevenBallSurface", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_unshapecut", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "unshapecut", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_unshapecut", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "unshapecut", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_zigzagedge", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "zigzagedge", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_zigzagedge", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "zigzagedge", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_cuttingpanel", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cuttingpanel", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_cuttingpanel", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "cuttingpanel", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_heavyprintdefects", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "heavyprintdefects", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_heavyprintdefects", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "heavyprintdefects", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_NewTouching", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NewTouching", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_NewTouching", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "NewTouching", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_printmissallignament", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "printmissallignament", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_printmissallignament", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "printmissallignament", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_anymisprint", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "anymisprint", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_anymisprint", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "anymisprint", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_colourShape", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "colourShape", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_colourShape", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "colourShape", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_wrongartwork", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "wrongartwork", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_wrongartwork", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "wrongartwork", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_materialdefects", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "materialdefects", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_materialdefects", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "materialdefects", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_newopenSeam", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "newopenSeam", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_newopenSeam", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "newopenSeam", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_seamoverlapping", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "seamoverlapping", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_seamoverlapping", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "seamoverlapping", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_wrinkles", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "wrinkles", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_wrinkles", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "wrinkles", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_excussglue", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "excussglue", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_excussglue", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "excussglue", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_missingglue", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "missingglue", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_missingglue", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "missingglue", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_pressoremark", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "pressoremark", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_pressoremark", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "pressoremark", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_airbubble", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "airbubble", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_airbubble", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "airbubble", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.AMB_Froming.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        TranID, PO, POM, POD, ArtSize, DayID, HourID, LineID, ProcessID, St"& _ 
                "rength, Present, PackingStrength, PackingPresent, ArtTarget, ArtPackingTarget, A"& _ 
                "rtSAM, ArtPackingSAM, [Input], [OutPut], Rejection, ClientID, ModelID, ArtID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                         SeamClosingGlue, PUC, CoreCavity, Touching, OtherPrinti"& _ 
                "ngIssue, PanelCavity, OpenSeam, SingleOpenStrip, UnbondedPanels, ArtWork, Wrinkl"& _ 
                "e, ZigZagSeam, OverLap, PanelDMG, BGrade, MissAlligment, DisColor, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "              LogoSmearing, LogoDoubling, BarcodeMissing, LargerSpots, Smearing,"& _ 
                " HFMissAlignment, BlurPrinting, BallType, unevenBallSurface, unshapecut, zigzage"& _ 
                "dge, cuttingpanel, heavyprintdefects, NewTouching, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         pr"& _ 
                "intmissallignament, anymisprint, colourShape, wrongartwork, materialdefects, new"& _ 
                "openSeam, seamoverlapping, wrinkles, excussglue, missingglue, pressoremark, airb"& _ 
                "ubble"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_PC_AMB_Hours_Tran"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM tbl_PC_AMB_Hours_Tran"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (TranID = ?)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("TranID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TranID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._commandCollection(2) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "INSERT INTO tbl_PC_AMB_Hours_Tran"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (PO, POM, POD, ArtSiz"& _ 
                "e, DayID, HourID, LineID, ProcessID, Strength, Present, PackingStrength, Packing"& _ 
                "Present, ArtTarget, ArtPackingTarget, ArtSAM, ArtPackingSAM, [Input], [OutPut], "& _ 
                "Rejection, ClientID, ModelID, ArtID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SeamClosingGlue,"& _ 
                " PUC, CoreCavity, Touching, OtherPrintingIssue, PanelCavity, OpenSeam, SingleOpe"& _ 
                "nStrip, UnbondedPanels, ArtWork, Wrinkle, ZigZagSeam, OverLap, PanelDMG, BGrade,"& _ 
                " HourTime, OpenQty, TotalChecked, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Pass, Fail, Straigh"& _ 
                "tCut, CuttingResidual, ConnectionBreak, UncureGlue, ExcessiveGlue, OverUnderWght"& _ 
                ", RCheck, MissAlligment, DisColor, LogoSmearing, LogoDoubling, BarcodeMissing, L"& _ 
                "argerSpots, Smearing, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         HFMissAlignment, Type, RPass, B"& _ 
                "lurPrinting, BallType, OpeningBlance, unevenBallSurface, unshapecut, zigzagedge,"& _ 
                " cuttingpanel, heavyprintdefects, NewTouching, printmissallignament, anymisprint"& _ 
                ", colourShape, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         wrongartwork, materialdefects, newopen"& _ 
                "Seam, seamoverlapping, wrinkles, excussglue, missingglue, pressoremark, airbubbl"& _ 
                "e, SystemName)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"VALUES        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?"& _ 
                ", ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, "& _ 
                "?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,"& _ 
                " ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PO", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("POM", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "POM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("POD", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "POD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ArtSize", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ArtSize", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DayID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DayID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("HourID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HourID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LineID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LineID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ProcessID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ProcessID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Strength", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "Strength", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Present", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "Present", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PackingStrength", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "PackingStrength", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PackingPresent", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "PackingPresent", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ArtTarget", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "ArtTarget", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ArtPackingTarget", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "ArtPackingTarget", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ArtSAM", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "ArtSAM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ArtPackingSAM", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(10,Byte), CType(2,Byte), "ArtPackingSAM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Input", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "Input", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OutPut", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OutPut", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Rejection", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "Rejection", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ClientID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ClientID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ModelID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ModelID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ArtID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ArtID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("SeamClosingGlue", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "SeamClosingGlue", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PUC", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PUC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CoreCavity", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "CoreCavity", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Touching", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "Touching", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OtherPrintingIssue", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OtherPrintingIssue", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PanelCavity", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PanelCavity", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OpenSeam", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OpenSeam", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("SingleOpenStrip", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "SingleOpenStrip", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UnbondedPanels", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "UnbondedPanels", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ArtWork", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "ArtWork", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Wrinkle", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "Wrinkle", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ZigZagSeam", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "ZigZagSeam", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OverLap", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OverLap", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PanelDMG", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PanelDMG", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BGrade", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "BGrade", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("HourTime", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HourTime", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OpenQty", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OpenQty", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("TotalChecked", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "TotalChecked", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Pass", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "Pass", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Fail", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "Fail", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("StraightCut", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "StraightCut", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CuttingResidual", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "CuttingResidual", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ConnectionBreak", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "ConnectionBreak", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UncureGlue", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "UncureGlue", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ExcessiveGlue", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "ExcessiveGlue", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OverUnderWght", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OverUnderWght", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RCheck", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "RCheck", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("MissAlligment", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "MissAlligment", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DisColor", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "DisColor", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LogoSmearing", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "LogoSmearing", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LogoDoubling", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "LogoDoubling", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BarcodeMissing", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "BarcodeMissing", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LargerSpots", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "LargerSpots", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Smearing", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "Smearing", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("HFMissAlignment", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "HFMissAlignment", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Type", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPass", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "RPass", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BlurPrinting", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "BlurPrinting", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BallType", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BallType", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OpeningBlance", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OpeningBlance", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("unevenBallSurface", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "unevenBallSurface", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("unshapecut", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "unshapecut", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("zigzagedge", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "zigzagedge", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("cuttingpanel", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "cuttingpanel", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("heavyprintdefects", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "heavyprintdefects", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("NewTouching", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "NewTouching", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("printmissallignament", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "printmissallignament", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("anymisprint", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "anymisprint", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("colourShape", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "colourShape", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("wrongartwork", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "wrongartwork", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("materialdefects", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "materialdefects", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("newopenSeam", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "newopenSeam", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("seamoverlapping", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "seamoverlapping", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("wrinkles", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "wrinkles", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("excussglue", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "excussglue", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("missingglue", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "missingglue", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("pressoremark", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "pressoremark", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("airbubble", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "airbubble", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("SystemName", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SystemName", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSAMB.tbl_PC_AMB_Hours_TranDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSAMB.tbl_PC_AMB_Hours_TranDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSAMB.tbl_PC_AMB_Hours_TranDataTable = New DSAMB.tbl_PC_AMB_Hours_TranDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSAMB.tbl_PC_AMB_Hours_TranDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSAMB) As Integer
            Return Me.Adapter.Update(dataSet, "tbl_PC_AMB_Hours_Tran")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_TranID As Integer,  _
                    ByVal Original_PO As Global.System.Nullable(Of Integer),  _
                    ByVal Original_POM As Global.System.Nullable(Of Integer),  _
                    ByVal Original_POD As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ArtSize As String,  _
                    ByVal Original_DayID As Integer,  _
                    ByVal Original_HourID As Global.System.Nullable(Of Integer),  _
                    ByVal Original_LineID As Integer,  _
                    ByVal Original_ProcessID As Integer,  _
                    ByVal Original_Strength As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Present As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PackingStrength As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PackingPresent As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_ArtTarget As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_ArtPackingTarget As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_ArtSAM As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_ArtPackingSAM As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Input As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_OutPut As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Rejection As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_ClientID As Integer,  _
                    ByVal Original_ModelID As Integer,  _
                    ByVal Original_ArtID As Integer,  _
                    ByVal Original_SeamClosingGlue As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PUC As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CoreCavity As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Touching As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_OtherPrintingIssue As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PanelCavity As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_OpenSeam As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_SingleOpenStrip As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_UnbondedPanels As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_ArtWork As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Wrinkle As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_ZigZagSeam As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_OverLap As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PanelDMG As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_BGrade As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_MissAlligment As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DisColor As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_LogoSmearing As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_LogoDoubling As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_BarcodeMissing As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_LargerSpots As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Smearing As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_HFMissAlignment As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_BlurPrinting As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_BallType As String,  _
                    ByVal Original_unevenBallSurface As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_unshapecut As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_zigzagedge As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_cuttingpanel As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_heavyprintdefects As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_NewTouching As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_printmissallignament As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_anymisprint As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_colourShape As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_wrongartwork As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_materialdefects As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_newopenSeam As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_seamoverlapping As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_wrinkles As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_excussglue As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_missingglue As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_pressoremark As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_airbubble As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_TranID,Integer)
            If (Original_PO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_PO.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_POM.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_POM.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_POD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_POD.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_ArtSize Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ArtSize")
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_ArtSize,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_DayID,Integer)
            If (Original_HourID.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_HourID.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_LineID,Integer)
            Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_ProcessID,Integer)
            If (Original_Strength.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_Strength.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_Present.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_Present.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_PackingStrength.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_PackingStrength.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_PackingPresent.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_PackingPresent.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_ArtTarget.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_ArtTarget.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_ArtPackingTarget.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_ArtPackingTarget.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_ArtSAM.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_ArtSAM.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_ArtPackingSAM.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_ArtPackingSAM.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_Input.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_Input.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_OutPut.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_OutPut.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_Rejection.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_Rejection.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_ClientID,Integer)
            Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_ModelID,Integer)
            Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_ArtID,Integer)
            If (Original_SeamClosingGlue.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(Original_SeamClosingGlue.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (Original_PUC.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(Original_PUC.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Original_CoreCavity.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(Original_CoreCavity.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (Original_Touching.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(Original_Touching.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (Original_OtherPrintingIssue.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(Original_OtherPrintingIssue.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (Original_PanelCavity.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(Original_PanelCavity.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (Original_OpenSeam.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(Original_OpenSeam.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (Original_SingleOpenStrip.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(Original_SingleOpenStrip.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (Original_UnbondedPanels.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(Original_UnbondedPanels.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (Original_ArtWork.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(Original_ArtWork.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (Original_Wrinkle.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(Original_Wrinkle.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (Original_ZigZagSeam.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(Original_ZigZagSeam.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (Original_OverLap.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(Original_OverLap.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (Original_PanelDMG.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(Original_PanelDMG.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (Original_BGrade.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(Original_BGrade.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (Original_MissAlligment.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(Original_MissAlligment.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (Original_DisColor.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(Original_DisColor.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(71).Value = Global.System.DBNull.Value
            End If
            If (Original_LogoSmearing.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(Original_LogoSmearing.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(73).Value = Global.System.DBNull.Value
            End If
            If (Original_LogoDoubling.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(Original_LogoDoubling.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(75).Value = Global.System.DBNull.Value
            End If
            If (Original_BarcodeMissing.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(Original_BarcodeMissing.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(77).Value = Global.System.DBNull.Value
            End If
            If (Original_LargerSpots.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(Original_LargerSpots.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(79).Value = Global.System.DBNull.Value
            End If
            If (Original_Smearing.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(Original_Smearing.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(81).Value = Global.System.DBNull.Value
            End If
            If (Original_HFMissAlignment.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(Original_HFMissAlignment.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(83).Value = Global.System.DBNull.Value
            End If
            If (Original_BlurPrinting.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(Original_BlurPrinting.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(85).Value = Global.System.DBNull.Value
            End If
            If (Original_BallType Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(87).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(Original_BallType,String)
            End If
            If (Original_unevenBallSurface.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(Original_unevenBallSurface.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(89).Value = Global.System.DBNull.Value
            End If
            If (Original_unshapecut.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(Original_unshapecut.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(91).Value = Global.System.DBNull.Value
            End If
            If (Original_zigzagedge.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(Original_zigzagedge.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(93).Value = Global.System.DBNull.Value
            End If
            If (Original_cuttingpanel.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(95).Value = CType(Original_cuttingpanel.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(95).Value = Global.System.DBNull.Value
            End If
            If (Original_heavyprintdefects.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(Original_heavyprintdefects.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(97).Value = Global.System.DBNull.Value
            End If
            If (Original_NewTouching.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(98).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(Original_NewTouching.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(98).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(99).Value = Global.System.DBNull.Value
            End If
            If (Original_printmissallignament.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(100).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(101).Value = CType(Original_printmissallignament.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(100).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(101).Value = Global.System.DBNull.Value
            End If
            If (Original_anymisprint.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(102).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(103).Value = CType(Original_anymisprint.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(102).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(103).Value = Global.System.DBNull.Value
            End If
            If (Original_colourShape.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(104).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(Original_colourShape.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(104).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(105).Value = Global.System.DBNull.Value
            End If
            If (Original_wrongartwork.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(106).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(Original_wrongartwork.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(106).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(107).Value = Global.System.DBNull.Value
            End If
            If (Original_materialdefects.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(108).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(109).Value = CType(Original_materialdefects.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(108).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(109).Value = Global.System.DBNull.Value
            End If
            If (Original_newopenSeam.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(110).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(111).Value = CType(Original_newopenSeam.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(110).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(111).Value = Global.System.DBNull.Value
            End If
            If (Original_seamoverlapping.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(112).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(113).Value = CType(Original_seamoverlapping.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(112).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(113).Value = Global.System.DBNull.Value
            End If
            If (Original_wrinkles.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(114).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(115).Value = CType(Original_wrinkles.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(114).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(115).Value = Global.System.DBNull.Value
            End If
            If (Original_excussglue.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(116).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(117).Value = CType(Original_excussglue.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(116).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(117).Value = Global.System.DBNull.Value
            End If
            If (Original_missingglue.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(118).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(119).Value = CType(Original_missingglue.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(118).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(119).Value = Global.System.DBNull.Value
            End If
            If (Original_pressoremark.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(120).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(121).Value = CType(Original_pressoremark.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(120).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(121).Value = Global.System.DBNull.Value
            End If
            If (Original_airbubble.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(122).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(123).Value = CType(Original_airbubble.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(122).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(123).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal PO As Global.System.Nullable(Of Integer),  _
                    ByVal POM As Global.System.Nullable(Of Integer),  _
                    ByVal POD As Global.System.Nullable(Of Integer),  _
                    ByVal ArtSize As String,  _
                    ByVal DayID As Integer,  _
                    ByVal HourID As Global.System.Nullable(Of Integer),  _
                    ByVal LineID As Integer,  _
                    ByVal ProcessID As Integer,  _
                    ByVal Strength As Global.System.Nullable(Of Decimal),  _
                    ByVal Present As Global.System.Nullable(Of Decimal),  _
                    ByVal PackingStrength As Global.System.Nullable(Of Decimal),  _
                    ByVal PackingPresent As Global.System.Nullable(Of Decimal),  _
                    ByVal ArtTarget As Global.System.Nullable(Of Decimal),  _
                    ByVal ArtPackingTarget As Global.System.Nullable(Of Decimal),  _
                    ByVal ArtSAM As Global.System.Nullable(Of Decimal),  _
                    ByVal ArtPackingSAM As Global.System.Nullable(Of Decimal),  _
                    ByVal Input As Global.System.Nullable(Of Decimal),  _
                    ByVal OutPut As Global.System.Nullable(Of Decimal),  _
                    ByVal Rejection As Global.System.Nullable(Of Decimal),  _
                    ByVal ClientID As Integer,  _
                    ByVal ModelID As Integer,  _
                    ByVal ArtID As Integer,  _
                    ByVal SeamClosingGlue As Global.System.Nullable(Of Decimal),  _
                    ByVal PUC As Global.System.Nullable(Of Decimal),  _
                    ByVal CoreCavity As Global.System.Nullable(Of Decimal),  _
                    ByVal Touching As Global.System.Nullable(Of Decimal),  _
                    ByVal OtherPrintingIssue As Global.System.Nullable(Of Decimal),  _
                    ByVal PanelCavity As Global.System.Nullable(Of Decimal),  _
                    ByVal OpenSeam As Global.System.Nullable(Of Decimal),  _
                    ByVal SingleOpenStrip As Global.System.Nullable(Of Decimal),  _
                    ByVal UnbondedPanels As Global.System.Nullable(Of Decimal),  _
                    ByVal ArtWork As Global.System.Nullable(Of Decimal),  _
                    ByVal Wrinkle As Global.System.Nullable(Of Decimal),  _
                    ByVal ZigZagSeam As Global.System.Nullable(Of Decimal),  _
                    ByVal OverLap As Global.System.Nullable(Of Decimal),  _
                    ByVal PanelDMG As Global.System.Nullable(Of Decimal),  _
                    ByVal BGrade As Global.System.Nullable(Of Decimal),  _
                    ByVal MissAlligment As Global.System.Nullable(Of Decimal),  _
                    ByVal DisColor As Global.System.Nullable(Of Decimal),  _
                    ByVal LogoSmearing As Global.System.Nullable(Of Decimal),  _
                    ByVal LogoDoubling As Global.System.Nullable(Of Decimal),  _
                    ByVal BarcodeMissing As Global.System.Nullable(Of Decimal),  _
                    ByVal LargerSpots As Global.System.Nullable(Of Decimal),  _
                    ByVal Smearing As Global.System.Nullable(Of Decimal),  _
                    ByVal HFMissAlignment As Global.System.Nullable(Of Decimal),  _
                    ByVal BlurPrinting As Global.System.Nullable(Of Decimal),  _
                    ByVal BallType As String,  _
                    ByVal unevenBallSurface As Global.System.Nullable(Of Decimal),  _
                    ByVal unshapecut As Global.System.Nullable(Of Decimal),  _
                    ByVal zigzagedge As Global.System.Nullable(Of Decimal),  _
                    ByVal cuttingpanel As Global.System.Nullable(Of Decimal),  _
                    ByVal heavyprintdefects As Global.System.Nullable(Of Decimal),  _
                    ByVal NewTouching As Global.System.Nullable(Of Decimal),  _
                    ByVal printmissallignament As Global.System.Nullable(Of Decimal),  _
                    ByVal anymisprint As Global.System.Nullable(Of Decimal),  _
                    ByVal colourShape As Global.System.Nullable(Of Decimal),  _
                    ByVal wrongartwork As Global.System.Nullable(Of Decimal),  _
                    ByVal materialdefects As Global.System.Nullable(Of Decimal),  _
                    ByVal newopenSeam As Global.System.Nullable(Of Decimal),  _
                    ByVal seamoverlapping As Global.System.Nullable(Of Decimal),  _
                    ByVal wrinkles As Global.System.Nullable(Of Decimal),  _
                    ByVal excussglue As Global.System.Nullable(Of Decimal),  _
                    ByVal missingglue As Global.System.Nullable(Of Decimal),  _
                    ByVal pressoremark As Global.System.Nullable(Of Decimal),  _
                    ByVal airbubble As Global.System.Nullable(Of Decimal)) As Integer
            If (PO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(PO.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (POM.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(POM.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (POD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(POD.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (ArtSize Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ArtSize")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ArtSize,String)
            End If
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(DayID,Integer)
            If (HourID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(HourID.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(LineID,Integer)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(ProcessID,Integer)
            If (Strength.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Strength.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Present.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Present.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (PackingStrength.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(PackingStrength.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (PackingPresent.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(PackingPresent.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (ArtTarget.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(ArtTarget.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (ArtPackingTarget.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(ArtPackingTarget.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (ArtSAM.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(ArtSAM.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (ArtPackingSAM.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(ArtPackingSAM.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Input.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(Input.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (OutPut.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(OutPut.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Rejection.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(Rejection.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(19).Value = CType(ClientID,Integer)
            Me.Adapter.InsertCommand.Parameters(20).Value = CType(ModelID,Integer)
            Me.Adapter.InsertCommand.Parameters(21).Value = CType(ArtID,Integer)
            If (SeamClosingGlue.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(SeamClosingGlue.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (PUC.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(PUC.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (CoreCavity.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(CoreCavity.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Touching.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(Touching.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (OtherPrintingIssue.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(OtherPrintingIssue.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (PanelCavity.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(PanelCavity.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (OpenSeam.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(OpenSeam.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (SingleOpenStrip.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(SingleOpenStrip.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (UnbondedPanels.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(UnbondedPanels.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (ArtWork.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(ArtWork.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (Wrinkle.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(Wrinkle.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (ZigZagSeam.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(ZigZagSeam.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (OverLap.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(OverLap.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (PanelDMG.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(PanelDMG.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (BGrade.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(BGrade.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (MissAlligment.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(MissAlligment.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (DisColor.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(DisColor.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (LogoSmearing.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(LogoSmearing.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (LogoDoubling.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(LogoDoubling.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (BarcodeMissing.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(BarcodeMissing.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (LargerSpots.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(LargerSpots.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Smearing.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(Smearing.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (HFMissAlignment.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(HFMissAlignment.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (BlurPrinting.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(BlurPrinting.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (BallType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(BallType,String)
            End If
            If (unevenBallSurface.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(unevenBallSurface.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (unshapecut.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(unshapecut.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (zigzagedge.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(zigzagedge.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (cuttingpanel.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(cuttingpanel.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (heavyprintdefects.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(heavyprintdefects.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (NewTouching.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(NewTouching.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (printmissallignament.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(printmissallignament.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (anymisprint.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(anymisprint.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (colourShape.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(colourShape.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (wrongartwork.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(wrongartwork.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (materialdefects.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(materialdefects.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (newopenSeam.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(newopenSeam.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (seamoverlapping.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(seamoverlapping.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (wrinkles.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(wrinkles.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (excussglue.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(excussglue.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (missingglue.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(missingglue.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (pressoremark.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(pressoremark.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (airbubble.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(airbubble.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal PO As Global.System.Nullable(Of Integer),  _
                    ByVal POM As Global.System.Nullable(Of Integer),  _
                    ByVal POD As Global.System.Nullable(Of Integer),  _
                    ByVal ArtSize As String,  _
                    ByVal DayID As Integer,  _
                    ByVal HourID As Global.System.Nullable(Of Integer),  _
                    ByVal LineID As Integer,  _
                    ByVal ProcessID As Integer,  _
                    ByVal Strength As Global.System.Nullable(Of Decimal),  _
                    ByVal Present As Global.System.Nullable(Of Decimal),  _
                    ByVal PackingStrength As Global.System.Nullable(Of Decimal),  _
                    ByVal PackingPresent As Global.System.Nullable(Of Decimal),  _
                    ByVal ArtTarget As Global.System.Nullable(Of Decimal),  _
                    ByVal ArtPackingTarget As Global.System.Nullable(Of Decimal),  _
                    ByVal ArtSAM As Global.System.Nullable(Of Decimal),  _
                    ByVal ArtPackingSAM As Global.System.Nullable(Of Decimal),  _
                    ByVal Input As Global.System.Nullable(Of Decimal),  _
                    ByVal OutPut As Global.System.Nullable(Of Decimal),  _
                    ByVal Rejection As Global.System.Nullable(Of Decimal),  _
                    ByVal ClientID As Integer,  _
                    ByVal ModelID As Integer,  _
                    ByVal ArtID As Integer,  _
                    ByVal SeamClosingGlue As Global.System.Nullable(Of Decimal),  _
                    ByVal PUC As Global.System.Nullable(Of Decimal),  _
                    ByVal CoreCavity As Global.System.Nullable(Of Decimal),  _
                    ByVal Touching As Global.System.Nullable(Of Decimal),  _
                    ByVal OtherPrintingIssue As Global.System.Nullable(Of Decimal),  _
                    ByVal PanelCavity As Global.System.Nullable(Of Decimal),  _
                    ByVal OpenSeam As Global.System.Nullable(Of Decimal),  _
                    ByVal SingleOpenStrip As Global.System.Nullable(Of Decimal),  _
                    ByVal UnbondedPanels As Global.System.Nullable(Of Decimal),  _
                    ByVal ArtWork As Global.System.Nullable(Of Decimal),  _
                    ByVal Wrinkle As Global.System.Nullable(Of Decimal),  _
                    ByVal ZigZagSeam As Global.System.Nullable(Of Decimal),  _
                    ByVal OverLap As Global.System.Nullable(Of Decimal),  _
                    ByVal PanelDMG As Global.System.Nullable(Of Decimal),  _
                    ByVal BGrade As Global.System.Nullable(Of Decimal),  _
                    ByVal MissAlligment As Global.System.Nullable(Of Decimal),  _
                    ByVal DisColor As Global.System.Nullable(Of Decimal),  _
                    ByVal LogoSmearing As Global.System.Nullable(Of Decimal),  _
                    ByVal LogoDoubling As Global.System.Nullable(Of Decimal),  _
                    ByVal BarcodeMissing As Global.System.Nullable(Of Decimal),  _
                    ByVal LargerSpots As Global.System.Nullable(Of Decimal),  _
                    ByVal Smearing As Global.System.Nullable(Of Decimal),  _
                    ByVal HFMissAlignment As Global.System.Nullable(Of Decimal),  _
                    ByVal BlurPrinting As Global.System.Nullable(Of Decimal),  _
                    ByVal BallType As String,  _
                    ByVal unevenBallSurface As Global.System.Nullable(Of Decimal),  _
                    ByVal unshapecut As Global.System.Nullable(Of Decimal),  _
                    ByVal zigzagedge As Global.System.Nullable(Of Decimal),  _
                    ByVal cuttingpanel As Global.System.Nullable(Of Decimal),  _
                    ByVal heavyprintdefects As Global.System.Nullable(Of Decimal),  _
                    ByVal NewTouching As Global.System.Nullable(Of Decimal),  _
                    ByVal printmissallignament As Global.System.Nullable(Of Decimal),  _
                    ByVal anymisprint As Global.System.Nullable(Of Decimal),  _
                    ByVal colourShape As Global.System.Nullable(Of Decimal),  _
                    ByVal wrongartwork As Global.System.Nullable(Of Decimal),  _
                    ByVal materialdefects As Global.System.Nullable(Of Decimal),  _
                    ByVal newopenSeam As Global.System.Nullable(Of Decimal),  _
                    ByVal seamoverlapping As Global.System.Nullable(Of Decimal),  _
                    ByVal wrinkles As Global.System.Nullable(Of Decimal),  _
                    ByVal excussglue As Global.System.Nullable(Of Decimal),  _
                    ByVal missingglue As Global.System.Nullable(Of Decimal),  _
                    ByVal pressoremark As Global.System.Nullable(Of Decimal),  _
                    ByVal airbubble As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TranID As Integer,  _
                    ByVal Original_PO As Global.System.Nullable(Of Integer),  _
                    ByVal Original_POM As Global.System.Nullable(Of Integer),  _
                    ByVal Original_POD As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ArtSize As String,  _
                    ByVal Original_DayID As Integer,  _
                    ByVal Original_HourID As Global.System.Nullable(Of Integer),  _
                    ByVal Original_LineID As Integer,  _
                    ByVal Original_ProcessID As Integer,  _
                    ByVal Original_Strength As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Present As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PackingStrength As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PackingPresent As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_ArtTarget As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_ArtPackingTarget As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_ArtSAM As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_ArtPackingSAM As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Input As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_OutPut As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Rejection As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_ClientID As Integer,  _
                    ByVal Original_ModelID As Integer,  _
                    ByVal Original_ArtID As Integer,  _
                    ByVal Original_SeamClosingGlue As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PUC As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CoreCavity As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Touching As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_OtherPrintingIssue As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PanelCavity As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_OpenSeam As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_SingleOpenStrip As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_UnbondedPanels As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_ArtWork As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Wrinkle As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_ZigZagSeam As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_OverLap As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PanelDMG As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_BGrade As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_MissAlligment As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DisColor As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_LogoSmearing As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_LogoDoubling As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_BarcodeMissing As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_LargerSpots As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Smearing As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_HFMissAlignment As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_BlurPrinting As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_BallType As String,  _
                    ByVal Original_unevenBallSurface As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_unshapecut As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_zigzagedge As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_cuttingpanel As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_heavyprintdefects As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_NewTouching As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_printmissallignament As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_anymisprint As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_colourShape As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_wrongartwork As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_materialdefects As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_newopenSeam As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_seamoverlapping As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_wrinkles As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_excussglue As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_missingglue As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_pressoremark As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_airbubble As Global.System.Nullable(Of Decimal)) As Integer
            If (PO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(PO.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (POM.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(POM.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (POD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(POD.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (ArtSize Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ArtSize")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ArtSize,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(DayID,Integer)
            If (HourID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(HourID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(LineID,Integer)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(ProcessID,Integer)
            If (Strength.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Strength.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Present.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Present.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (PackingStrength.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(PackingStrength.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (PackingPresent.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(PackingPresent.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (ArtTarget.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(ArtTarget.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (ArtPackingTarget.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(ArtPackingTarget.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (ArtSAM.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(ArtSAM.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (ArtPackingSAM.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(ArtPackingSAM.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Input.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Input.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (OutPut.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(OutPut.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Rejection.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Rejection.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(ClientID,Integer)
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(ModelID,Integer)
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(ArtID,Integer)
            If (SeamClosingGlue.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(SeamClosingGlue.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (PUC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(PUC.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (CoreCavity.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(CoreCavity.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Touching.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Touching.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (OtherPrintingIssue.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(OtherPrintingIssue.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (PanelCavity.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(PanelCavity.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (OpenSeam.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(OpenSeam.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (SingleOpenStrip.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(SingleOpenStrip.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (UnbondedPanels.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(UnbondedPanels.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (ArtWork.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(ArtWork.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (Wrinkle.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Wrinkle.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (ZigZagSeam.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(ZigZagSeam.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (OverLap.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(OverLap.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (PanelDMG.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(PanelDMG.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (BGrade.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(BGrade.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (MissAlligment.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(MissAlligment.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (DisColor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(DisColor.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (LogoSmearing.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(LogoSmearing.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (LogoDoubling.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(LogoDoubling.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (BarcodeMissing.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(BarcodeMissing.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (LargerSpots.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(LargerSpots.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Smearing.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Smearing.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (HFMissAlignment.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(HFMissAlignment.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (BlurPrinting.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(BlurPrinting.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (BallType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(BallType,String)
            End If
            If (unevenBallSurface.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(unevenBallSurface.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (unshapecut.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(unshapecut.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (zigzagedge.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(zigzagedge.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (cuttingpanel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(cuttingpanel.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (heavyprintdefects.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(heavyprintdefects.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (NewTouching.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(NewTouching.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (printmissallignament.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(printmissallignament.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (anymisprint.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(anymisprint.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (colourShape.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(colourShape.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (wrongartwork.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(wrongartwork.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (materialdefects.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(materialdefects.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (newopenSeam.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(newopenSeam.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (seamoverlapping.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(seamoverlapping.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (wrinkles.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(wrinkles.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (excussglue.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(excussglue.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (missingglue.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(missingglue.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (pressoremark.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(pressoremark.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (airbubble.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(airbubble.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_TranID,Integer)
            If (Original_PO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_PO.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (Original_POM.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_POM.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (Original_POD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_POD.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            End If
            If (Original_ArtSize Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ArtSize")
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_ArtSize,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_DayID,Integer)
            If (Original_HourID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_HourID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_LineID,Integer)
            Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_ProcessID,Integer)
            If (Original_Strength.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_Strength.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = Global.System.DBNull.Value
            End If
            If (Original_Present.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_Present.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = Global.System.DBNull.Value
            End If
            If (Original_PackingStrength.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Original_PackingStrength.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            End If
            If (Original_PackingPresent.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Original_PackingPresent.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = Global.System.DBNull.Value
            End If
            If (Original_ArtTarget.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(Original_ArtTarget.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = Global.System.DBNull.Value
            End If
            If (Original_ArtPackingTarget.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(Original_ArtPackingTarget.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = Global.System.DBNull.Value
            End If
            If (Original_ArtSAM.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(Original_ArtSAM.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = Global.System.DBNull.Value
            End If
            If (Original_ArtPackingSAM.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(Original_ArtPackingSAM.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = Global.System.DBNull.Value
            End If
            If (Original_Input.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(Original_Input.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = Global.System.DBNull.Value
            End If
            If (Original_OutPut.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(Original_OutPut.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = Global.System.DBNull.Value
            End If
            If (Original_Rejection.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(Original_Rejection.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(100).Value = CType(Original_ClientID,Integer)
            Me.Adapter.UpdateCommand.Parameters(101).Value = CType(Original_ModelID,Integer)
            Me.Adapter.UpdateCommand.Parameters(102).Value = CType(Original_ArtID,Integer)
            If (Original_SeamClosingGlue.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(Original_SeamClosingGlue.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = Global.System.DBNull.Value
            End If
            If (Original_PUC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(Original_PUC.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = Global.System.DBNull.Value
            End If
            If (Original_CoreCavity.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(Original_CoreCavity.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = Global.System.DBNull.Value
            End If
            If (Original_Touching.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(Original_Touching.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(110).Value = Global.System.DBNull.Value
            End If
            If (Original_OtherPrintingIssue.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(Original_OtherPrintingIssue.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(112).Value = Global.System.DBNull.Value
            End If
            If (Original_PanelCavity.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(Original_PanelCavity.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(114).Value = Global.System.DBNull.Value
            End If
            If (Original_OpenSeam.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(Original_OpenSeam.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(116).Value = Global.System.DBNull.Value
            End If
            If (Original_SingleOpenStrip.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(Original_SingleOpenStrip.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(118).Value = Global.System.DBNull.Value
            End If
            If (Original_UnbondedPanels.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(Original_UnbondedPanels.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(120).Value = Global.System.DBNull.Value
            End If
            If (Original_ArtWork.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(Original_ArtWork.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(122).Value = Global.System.DBNull.Value
            End If
            If (Original_Wrinkle.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(Original_Wrinkle.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(124).Value = Global.System.DBNull.Value
            End If
            If (Original_ZigZagSeam.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(Original_ZigZagSeam.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(126).Value = Global.System.DBNull.Value
            End If
            If (Original_OverLap.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(Original_OverLap.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(128).Value = Global.System.DBNull.Value
            End If
            If (Original_PanelDMG.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(Original_PanelDMG.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(130).Value = Global.System.DBNull.Value
            End If
            If (Original_BGrade.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(Original_BGrade.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(132).Value = Global.System.DBNull.Value
            End If
            If (Original_MissAlligment.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(Original_MissAlligment.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(134).Value = Global.System.DBNull.Value
            End If
            If (Original_DisColor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(Original_DisColor.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(136).Value = Global.System.DBNull.Value
            End If
            If (Original_LogoSmearing.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(Original_LogoSmearing.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(138).Value = Global.System.DBNull.Value
            End If
            If (Original_LogoDoubling.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(Original_LogoDoubling.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(140).Value = Global.System.DBNull.Value
            End If
            If (Original_BarcodeMissing.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(142).Value = CType(Original_BarcodeMissing.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(142).Value = Global.System.DBNull.Value
            End If
            If (Original_LargerSpots.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(144).Value = CType(Original_LargerSpots.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(144).Value = Global.System.DBNull.Value
            End If
            If (Original_Smearing.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(146).Value = CType(Original_Smearing.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(146).Value = Global.System.DBNull.Value
            End If
            If (Original_HFMissAlignment.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(Original_HFMissAlignment.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(148).Value = Global.System.DBNull.Value
            End If
            If (Original_BlurPrinting.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(Original_BlurPrinting.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(150).Value = Global.System.DBNull.Value
            End If
            If (Original_BallType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(152).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(152).Value = CType(Original_BallType,String)
            End If
            If (Original_unevenBallSurface.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(154).Value = CType(Original_unevenBallSurface.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(154).Value = Global.System.DBNull.Value
            End If
            If (Original_unshapecut.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(155).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(156).Value = CType(Original_unshapecut.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(155).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(156).Value = Global.System.DBNull.Value
            End If
            If (Original_zigzagedge.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(157).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(158).Value = CType(Original_zigzagedge.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(157).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(158).Value = Global.System.DBNull.Value
            End If
            If (Original_cuttingpanel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(159).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(160).Value = CType(Original_cuttingpanel.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(159).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(160).Value = Global.System.DBNull.Value
            End If
            If (Original_heavyprintdefects.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(161).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(162).Value = CType(Original_heavyprintdefects.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(161).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(162).Value = Global.System.DBNull.Value
            End If
            If (Original_NewTouching.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(163).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(164).Value = CType(Original_NewTouching.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(163).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(164).Value = Global.System.DBNull.Value
            End If
            If (Original_printmissallignament.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(165).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(166).Value = CType(Original_printmissallignament.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(165).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(166).Value = Global.System.DBNull.Value
            End If
            If (Original_anymisprint.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(167).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(168).Value = CType(Original_anymisprint.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(167).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(168).Value = Global.System.DBNull.Value
            End If
            If (Original_colourShape.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(169).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(170).Value = CType(Original_colourShape.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(169).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(170).Value = Global.System.DBNull.Value
            End If
            If (Original_wrongartwork.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(171).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(172).Value = CType(Original_wrongartwork.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(171).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(172).Value = Global.System.DBNull.Value
            End If
            If (Original_materialdefects.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(173).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(174).Value = CType(Original_materialdefects.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(173).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(174).Value = Global.System.DBNull.Value
            End If
            If (Original_newopenSeam.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(175).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(176).Value = CType(Original_newopenSeam.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(175).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(176).Value = Global.System.DBNull.Value
            End If
            If (Original_seamoverlapping.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(177).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(178).Value = CType(Original_seamoverlapping.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(177).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(178).Value = Global.System.DBNull.Value
            End If
            If (Original_wrinkles.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(179).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(180).Value = CType(Original_wrinkles.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(179).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(180).Value = Global.System.DBNull.Value
            End If
            If (Original_excussglue.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(181).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(182).Value = CType(Original_excussglue.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(181).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(182).Value = Global.System.DBNull.Value
            End If
            If (Original_missingglue.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(183).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(184).Value = CType(Original_missingglue.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(183).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(184).Value = Global.System.DBNull.Value
            End If
            If (Original_pressoremark.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(185).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(186).Value = CType(Original_pressoremark.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(185).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(186).Value = Global.System.DBNull.Value
            End If
            If (Original_airbubble.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(187).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(188).Value = CType(Original_airbubble.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(187).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(188).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteQuery(ByVal TranID As Integer) As Integer
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(1)
            command.Parameters(0).Value = CType(TranID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function InsertQuery( _
                    ByVal PO As Global.System.Nullable(Of Integer),  _
                    ByVal POM As Global.System.Nullable(Of Integer),  _
                    ByVal POD As Global.System.Nullable(Of Integer),  _
                    ByVal ArtSize As String,  _
                    ByVal DayID As Integer,  _
                    ByVal HourID As Global.System.Nullable(Of Integer),  _
                    ByVal LineID As Integer,  _
                    ByVal ProcessID As Integer,  _
                    ByVal Strength As Global.System.Nullable(Of Decimal),  _
                    ByVal Present As Global.System.Nullable(Of Decimal),  _
                    ByVal PackingStrength As Global.System.Nullable(Of Decimal),  _
                    ByVal PackingPresent As Global.System.Nullable(Of Decimal),  _
                    ByVal ArtTarget As Global.System.Nullable(Of Decimal),  _
                    ByVal ArtPackingTarget As Global.System.Nullable(Of Decimal),  _
                    ByVal ArtSAM As Global.System.Nullable(Of Decimal),  _
                    ByVal ArtPackingSAM As Global.System.Nullable(Of Decimal),  _
                    ByVal Input As Global.System.Nullable(Of Decimal),  _
                    ByVal OutPut As Global.System.Nullable(Of Decimal),  _
                    ByVal Rejection As Global.System.Nullable(Of Decimal),  _
                    ByVal ClientID As Integer,  _
                    ByVal ModelID As Integer,  _
                    ByVal ArtID As Integer,  _
                    ByVal SeamClosingGlue As Global.System.Nullable(Of Decimal),  _
                    ByVal PUC As Global.System.Nullable(Of Decimal),  _
                    ByVal CoreCavity As Global.System.Nullable(Of Decimal),  _
                    ByVal Touching As Global.System.Nullable(Of Decimal),  _
                    ByVal OtherPrintingIssue As Global.System.Nullable(Of Decimal),  _
                    ByVal PanelCavity As Global.System.Nullable(Of Decimal),  _
                    ByVal OpenSeam As Global.System.Nullable(Of Decimal),  _
                    ByVal SingleOpenStrip As Global.System.Nullable(Of Decimal),  _
                    ByVal UnbondedPanels As Global.System.Nullable(Of Decimal),  _
                    ByVal ArtWork As Global.System.Nullable(Of Decimal),  _
                    ByVal Wrinkle As Global.System.Nullable(Of Decimal),  _
                    ByVal ZigZagSeam As Global.System.Nullable(Of Decimal),  _
                    ByVal OverLap As Global.System.Nullable(Of Decimal),  _
                    ByVal PanelDMG As Global.System.Nullable(Of Decimal),  _
                    ByVal BGrade As Global.System.Nullable(Of Decimal),  _
                    ByVal HourTime As String,  _
                    ByVal OpenQty As Global.System.Nullable(Of Decimal),  _
                    ByVal TotalChecked As Global.System.Nullable(Of Decimal),  _
                    ByVal Pass As Global.System.Nullable(Of Decimal),  _
                    ByVal Fail As Global.System.Nullable(Of Decimal),  _
                    ByVal StraightCut As Global.System.Nullable(Of Decimal),  _
                    ByVal CuttingResidual As Global.System.Nullable(Of Decimal),  _
                    ByVal ConnectionBreak As Global.System.Nullable(Of Decimal),  _
                    ByVal UncureGlue As Global.System.Nullable(Of Decimal),  _
                    ByVal ExcessiveGlue As Global.System.Nullable(Of Decimal),  _
                    ByVal OverUnderWght As Global.System.Nullable(Of Decimal),  _
                    ByVal RCheck As Global.System.Nullable(Of Decimal),  _
                    ByVal MissAlligment As Global.System.Nullable(Of Decimal),  _
                    ByVal DisColor As Global.System.Nullable(Of Decimal),  _
                    ByVal LogoSmearing As Global.System.Nullable(Of Decimal),  _
                    ByVal LogoDoubling As Global.System.Nullable(Of Decimal),  _
                    ByVal BarcodeMissing As Global.System.Nullable(Of Decimal),  _
                    ByVal LargerSpots As Global.System.Nullable(Of Decimal),  _
                    ByVal Smearing As Global.System.Nullable(Of Decimal),  _
                    ByVal HFMissAlignment As Global.System.Nullable(Of Decimal),  _
                    ByVal Type As Global.System.Nullable(Of Boolean),  _
                    ByVal RPass As Global.System.Nullable(Of Decimal),  _
                    ByVal BlurPrinting As Global.System.Nullable(Of Decimal),  _
                    ByVal BallType As String,  _
                    ByVal OpeningBlance As Global.System.Nullable(Of Decimal),  _
                    ByVal unevenBallSurface As Global.System.Nullable(Of Decimal),  _
                    ByVal unshapecut As Global.System.Nullable(Of Decimal),  _
                    ByVal zigzagedge As Global.System.Nullable(Of Decimal),  _
                    ByVal cuttingpanel As Global.System.Nullable(Of Decimal),  _
                    ByVal heavyprintdefects As Global.System.Nullable(Of Decimal),  _
                    ByVal NewTouching As Global.System.Nullable(Of Decimal),  _
                    ByVal printmissallignament As Global.System.Nullable(Of Decimal),  _
                    ByVal anymisprint As Global.System.Nullable(Of Decimal),  _
                    ByVal colourShape As Global.System.Nullable(Of Decimal),  _
                    ByVal wrongartwork As Global.System.Nullable(Of Decimal),  _
                    ByVal materialdefects As Global.System.Nullable(Of Decimal),  _
                    ByVal newopenSeam As Global.System.Nullable(Of Decimal),  _
                    ByVal seamoverlapping As Global.System.Nullable(Of Decimal),  _
                    ByVal wrinkles As Global.System.Nullable(Of Decimal),  _
                    ByVal excussglue As Global.System.Nullable(Of Decimal),  _
                    ByVal missingglue As Global.System.Nullable(Of Decimal),  _
                    ByVal pressoremark As Global.System.Nullable(Of Decimal),  _
                    ByVal airbubble As Global.System.Nullable(Of Decimal),  _
                    ByVal SystemName As String) As Integer
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(2)
            If (PO.HasValue = true) Then
                command.Parameters(0).Value = CType(PO.Value,Integer)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (POM.HasValue = true) Then
                command.Parameters(1).Value = CType(POM.Value,Integer)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (POD.HasValue = true) Then
                command.Parameters(2).Value = CType(POD.Value,Integer)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (ArtSize Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ArtSize")
            Else
                command.Parameters(3).Value = CType(ArtSize,String)
            End If
            command.Parameters(4).Value = CType(DayID,Integer)
            If (HourID.HasValue = true) Then
                command.Parameters(5).Value = CType(HourID.Value,Integer)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            command.Parameters(6).Value = CType(LineID,Integer)
            command.Parameters(7).Value = CType(ProcessID,Integer)
            If (Strength.HasValue = true) Then
                command.Parameters(8).Value = CType(Strength.Value,Decimal)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Present.HasValue = true) Then
                command.Parameters(9).Value = CType(Present.Value,Decimal)
            Else
                command.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (PackingStrength.HasValue = true) Then
                command.Parameters(10).Value = CType(PackingStrength.Value,Decimal)
            Else
                command.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (PackingPresent.HasValue = true) Then
                command.Parameters(11).Value = CType(PackingPresent.Value,Decimal)
            Else
                command.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (ArtTarget.HasValue = true) Then
                command.Parameters(12).Value = CType(ArtTarget.Value,Decimal)
            Else
                command.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (ArtPackingTarget.HasValue = true) Then
                command.Parameters(13).Value = CType(ArtPackingTarget.Value,Decimal)
            Else
                command.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (ArtSAM.HasValue = true) Then
                command.Parameters(14).Value = CType(ArtSAM.Value,Decimal)
            Else
                command.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (ArtPackingSAM.HasValue = true) Then
                command.Parameters(15).Value = CType(ArtPackingSAM.Value,Decimal)
            Else
                command.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Input.HasValue = true) Then
                command.Parameters(16).Value = CType(Input.Value,Decimal)
            Else
                command.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (OutPut.HasValue = true) Then
                command.Parameters(17).Value = CType(OutPut.Value,Decimal)
            Else
                command.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Rejection.HasValue = true) Then
                command.Parameters(18).Value = CType(Rejection.Value,Decimal)
            Else
                command.Parameters(18).Value = Global.System.DBNull.Value
            End If
            command.Parameters(19).Value = CType(ClientID,Integer)
            command.Parameters(20).Value = CType(ModelID,Integer)
            command.Parameters(21).Value = CType(ArtID,Integer)
            If (SeamClosingGlue.HasValue = true) Then
                command.Parameters(22).Value = CType(SeamClosingGlue.Value,Decimal)
            Else
                command.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (PUC.HasValue = true) Then
                command.Parameters(23).Value = CType(PUC.Value,Decimal)
            Else
                command.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (CoreCavity.HasValue = true) Then
                command.Parameters(24).Value = CType(CoreCavity.Value,Decimal)
            Else
                command.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Touching.HasValue = true) Then
                command.Parameters(25).Value = CType(Touching.Value,Decimal)
            Else
                command.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (OtherPrintingIssue.HasValue = true) Then
                command.Parameters(26).Value = CType(OtherPrintingIssue.Value,Decimal)
            Else
                command.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (PanelCavity.HasValue = true) Then
                command.Parameters(27).Value = CType(PanelCavity.Value,Decimal)
            Else
                command.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (OpenSeam.HasValue = true) Then
                command.Parameters(28).Value = CType(OpenSeam.Value,Decimal)
            Else
                command.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (SingleOpenStrip.HasValue = true) Then
                command.Parameters(29).Value = CType(SingleOpenStrip.Value,Decimal)
            Else
                command.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (UnbondedPanels.HasValue = true) Then
                command.Parameters(30).Value = CType(UnbondedPanels.Value,Decimal)
            Else
                command.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (ArtWork.HasValue = true) Then
                command.Parameters(31).Value = CType(ArtWork.Value,Decimal)
            Else
                command.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (Wrinkle.HasValue = true) Then
                command.Parameters(32).Value = CType(Wrinkle.Value,Decimal)
            Else
                command.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (ZigZagSeam.HasValue = true) Then
                command.Parameters(33).Value = CType(ZigZagSeam.Value,Decimal)
            Else
                command.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (OverLap.HasValue = true) Then
                command.Parameters(34).Value = CType(OverLap.Value,Decimal)
            Else
                command.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (PanelDMG.HasValue = true) Then
                command.Parameters(35).Value = CType(PanelDMG.Value,Decimal)
            Else
                command.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (BGrade.HasValue = true) Then
                command.Parameters(36).Value = CType(BGrade.Value,Decimal)
            Else
                command.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (HourTime Is Nothing) Then
                command.Parameters(37).Value = Global.System.DBNull.Value
            Else
                command.Parameters(37).Value = CType(HourTime,String)
            End If
            If (OpenQty.HasValue = true) Then
                command.Parameters(38).Value = CType(OpenQty.Value,Decimal)
            Else
                command.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (TotalChecked.HasValue = true) Then
                command.Parameters(39).Value = CType(TotalChecked.Value,Decimal)
            Else
                command.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (Pass.HasValue = true) Then
                command.Parameters(40).Value = CType(Pass.Value,Decimal)
            Else
                command.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Fail.HasValue = true) Then
                command.Parameters(41).Value = CType(Fail.Value,Decimal)
            Else
                command.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (StraightCut.HasValue = true) Then
                command.Parameters(42).Value = CType(StraightCut.Value,Decimal)
            Else
                command.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (CuttingResidual.HasValue = true) Then
                command.Parameters(43).Value = CType(CuttingResidual.Value,Decimal)
            Else
                command.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (ConnectionBreak.HasValue = true) Then
                command.Parameters(44).Value = CType(ConnectionBreak.Value,Decimal)
            Else
                command.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (UncureGlue.HasValue = true) Then
                command.Parameters(45).Value = CType(UncureGlue.Value,Decimal)
            Else
                command.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (ExcessiveGlue.HasValue = true) Then
                command.Parameters(46).Value = CType(ExcessiveGlue.Value,Decimal)
            Else
                command.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (OverUnderWght.HasValue = true) Then
                command.Parameters(47).Value = CType(OverUnderWght.Value,Decimal)
            Else
                command.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (RCheck.HasValue = true) Then
                command.Parameters(48).Value = CType(RCheck.Value,Decimal)
            Else
                command.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (MissAlligment.HasValue = true) Then
                command.Parameters(49).Value = CType(MissAlligment.Value,Decimal)
            Else
                command.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (DisColor.HasValue = true) Then
                command.Parameters(50).Value = CType(DisColor.Value,Decimal)
            Else
                command.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (LogoSmearing.HasValue = true) Then
                command.Parameters(51).Value = CType(LogoSmearing.Value,Decimal)
            Else
                command.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (LogoDoubling.HasValue = true) Then
                command.Parameters(52).Value = CType(LogoDoubling.Value,Decimal)
            Else
                command.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (BarcodeMissing.HasValue = true) Then
                command.Parameters(53).Value = CType(BarcodeMissing.Value,Decimal)
            Else
                command.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (LargerSpots.HasValue = true) Then
                command.Parameters(54).Value = CType(LargerSpots.Value,Decimal)
            Else
                command.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Smearing.HasValue = true) Then
                command.Parameters(55).Value = CType(Smearing.Value,Decimal)
            Else
                command.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (HFMissAlignment.HasValue = true) Then
                command.Parameters(56).Value = CType(HFMissAlignment.Value,Decimal)
            Else
                command.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Type.HasValue = true) Then
                command.Parameters(57).Value = CType(Type.Value,Boolean)
            Else
                command.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (RPass.HasValue = true) Then
                command.Parameters(58).Value = CType(RPass.Value,Decimal)
            Else
                command.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (BlurPrinting.HasValue = true) Then
                command.Parameters(59).Value = CType(BlurPrinting.Value,Decimal)
            Else
                command.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (BallType Is Nothing) Then
                command.Parameters(60).Value = Global.System.DBNull.Value
            Else
                command.Parameters(60).Value = CType(BallType,String)
            End If
            If (OpeningBlance.HasValue = true) Then
                command.Parameters(61).Value = CType(OpeningBlance.Value,Decimal)
            Else
                command.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (unevenBallSurface.HasValue = true) Then
                command.Parameters(62).Value = CType(unevenBallSurface.Value,Decimal)
            Else
                command.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (unshapecut.HasValue = true) Then
                command.Parameters(63).Value = CType(unshapecut.Value,Decimal)
            Else
                command.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (zigzagedge.HasValue = true) Then
                command.Parameters(64).Value = CType(zigzagedge.Value,Decimal)
            Else
                command.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (cuttingpanel.HasValue = true) Then
                command.Parameters(65).Value = CType(cuttingpanel.Value,Decimal)
            Else
                command.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (heavyprintdefects.HasValue = true) Then
                command.Parameters(66).Value = CType(heavyprintdefects.Value,Decimal)
            Else
                command.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (NewTouching.HasValue = true) Then
                command.Parameters(67).Value = CType(NewTouching.Value,Decimal)
            Else
                command.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (printmissallignament.HasValue = true) Then
                command.Parameters(68).Value = CType(printmissallignament.Value,Decimal)
            Else
                command.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (anymisprint.HasValue = true) Then
                command.Parameters(69).Value = CType(anymisprint.Value,Decimal)
            Else
                command.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (colourShape.HasValue = true) Then
                command.Parameters(70).Value = CType(colourShape.Value,Decimal)
            Else
                command.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (wrongartwork.HasValue = true) Then
                command.Parameters(71).Value = CType(wrongartwork.Value,Decimal)
            Else
                command.Parameters(71).Value = Global.System.DBNull.Value
            End If
            If (materialdefects.HasValue = true) Then
                command.Parameters(72).Value = CType(materialdefects.Value,Decimal)
            Else
                command.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (newopenSeam.HasValue = true) Then
                command.Parameters(73).Value = CType(newopenSeam.Value,Decimal)
            Else
                command.Parameters(73).Value = Global.System.DBNull.Value
            End If
            If (seamoverlapping.HasValue = true) Then
                command.Parameters(74).Value = CType(seamoverlapping.Value,Decimal)
            Else
                command.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (wrinkles.HasValue = true) Then
                command.Parameters(75).Value = CType(wrinkles.Value,Decimal)
            Else
                command.Parameters(75).Value = Global.System.DBNull.Value
            End If
            If (excussglue.HasValue = true) Then
                command.Parameters(76).Value = CType(excussglue.Value,Decimal)
            Else
                command.Parameters(76).Value = Global.System.DBNull.Value
            End If
            If (missingglue.HasValue = true) Then
                command.Parameters(77).Value = CType(missingglue.Value,Decimal)
            Else
                command.Parameters(77).Value = Global.System.DBNull.Value
            End If
            If (pressoremark.HasValue = true) Then
                command.Parameters(78).Value = CType(pressoremark.Value,Decimal)
            Else
                command.Parameters(78).Value = Global.System.DBNull.Value
            End If
            If (airbubble.HasValue = true) Then
                command.Parameters(79).Value = CType(airbubble.Value,Decimal)
            Else
                command.Parameters(79).Value = Global.System.DBNull.Value
            End If
            If (SystemName Is Nothing) Then
                command.Parameters(80).Value = Global.System.DBNull.Value
            Else
                command.Parameters(80).Value = CType(SystemName,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class View_PODTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "View_POD"
            tableMapping.ColumnMappings.Add("PO", "PO")
            tableMapping.ColumnMappings.Add("POM", "POM")
            tableMapping.ColumnMappings.Add("POD", "POD")
            tableMapping.ColumnMappings.Add("OrderQty", "OrderQty")
            tableMapping.ColumnMappings.Add("FactoryCode", "FactoryCode")
            tableMapping.ColumnMappings.Add("OrderType", "OrderType")
            tableMapping.ColumnMappings.Add("ArtSize", "ArtSize")
            tableMapping.ColumnMappings.Add("ClientID", "ClientID")
            tableMapping.ColumnMappings.Add("ModelID", "ModelID")
            tableMapping.ColumnMappings.Add("ArtID", "ArtID")
            tableMapping.ColumnMappings.Add("SecondConfDate", "SecondConfDate")
            tableMapping.ColumnMappings.Add("AlreadyPack", "AlreadyPack")
            tableMapping.ColumnMappings.Add("Balance", "Balance")
            tableMapping.ColumnMappings.Add("POCode", "POCode")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.AMB_Froming.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        dbo.tbl_Pro_PO_D.PO, dbo.tbl_Pro_PO_D.POM, dbo.tbl_Pro_PO_D.POD, db"& _ 
                "o.tbl_Pro_PO_D.OrderQty, dbo.tbl_Pro_PO_H.FactoryCode, dbo.tbl_Pro_PO_H.OrderTyp"& _ 
                "e, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.tbl_Pro_PO_D.ArtSize, dbo.tbl_Pro_PO_D.ClientI"& _ 
                "D, dbo.tbl_Pro_PO_D.ModelID, dbo.tbl_Pro_PO_D.ArtID, dbo.tbl_Pro_PO_H.SecondConf"& _ 
                "Date, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         ISNULL(dbo.View_PC_RWPD_Packing_Sum.PackedQty, "& _ 
                "0) AS AlreadyPack, dbo.tbl_Pro_PO_D.OrderQty - ISNULL(dbo.View_PC_RWPD_Packing_S"& _ 
                "um.PackedQty, 0) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS Balance, dbo.tbl_Pro_PO_H.POCode"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            dbo.tbl_Pro_PO_H, { oj dbo.tbl_Pro_PO_D LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                   dbo.View_PC_RWPD_Packing_Sum ON dbo.tbl_Pro_PO_D.PO = dbo.Vie"& _ 
                "w_PC_RWPD_Packing_Sum.PO AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.tbl_Pro_PO_D.POM = d"& _ 
                "bo.View_PC_RWPD_Packing_Sum.POM AND dbo.tbl_Pro_PO_D.POD = dbo.View_PC_RWPD_Pack"& _ 
                "ing_Sum.POD }"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        dbo.tbl_Pro_PO_H.PO = dbo.tbl_Pro_PO_D.PO AND (dbo.t"& _ 
                "bl_Pro_PO_H.OrderType = 'Original Order') AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (dbo.tb"& _ 
                "l_Pro_PO_H.SecondConfDate >= CONVERT(DATETIME, '2018-07-01 00:00:00', 102)) AND "& _ 
                "(dbo.tbl_Pro_PO_H.FactoryCode = 'B34006')"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        dbo.tbl_Pro_PO_D.PO, dbo.tbl_Pro_PO_D.POM, dbo.tbl_Pro_PO_D.POD, db"& _ 
                "o.tbl_Pro_PO_D.OrderQty, dbo.tbl_Pro_PO_H.FactoryCode, dbo.tbl_Pro_PO_H.OrderTyp"& _ 
                "e, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.tbl_Pro_PO_D.ArtSize, dbo.tbl_Pro_PO_D.ClientI"& _ 
                "D, dbo.tbl_Pro_PO_D.ModelID, dbo.tbl_Pro_PO_D.ArtID, dbo.tbl_Pro_PO_H.SecondConf"& _ 
                "Date, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         ISNULL(dbo.View_PC_RWPD_Packing_Sum.PackedQty, "& _ 
                "0) AS AlreadyPack, dbo.tbl_Pro_PO_D.OrderQty - ISNULL(dbo.View_PC_RWPD_Packing_S"& _ 
                "um.PackedQty, 0) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS Balance, dbo.tbl_Pro_PO_H.POCode"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            dbo.tbl_Pro_PO_D INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.tbl_P"& _ 
                "ro_PO_H ON dbo.tbl_Pro_PO_D.PO = dbo.tbl_Pro_PO_H.PO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"          "& _ 
                "               dbo.View_PC_RWPD_Packing_Sum ON dbo.tbl_Pro_PO_D.PO = dbo.View_PC"& _ 
                "_RWPD_Packing_Sum.PO AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.tbl_Pro_PO_D.POM = dbo.V"& _ 
                "iew_PC_RWPD_Packing_Sum.POM AND dbo.tbl_Pro_PO_D.POD = dbo.View_PC_RWPD_Packing_"& _ 
                "Sum.POD"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (dbo.tbl_Pro_PO_H.OrderType = 'Original Order') AND (dbo.t"& _ 
                "bl_Pro_PO_H.SecondConfDate >= CONVERT(DATETIME, '2018-07-01 00:00:00', 102))"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSAMB.View_PODDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSAMB.View_PODDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSAMB.View_PODDataTable = New DSAMB.View_PODDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DSAMB.View_PODDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy() As DSAMB.View_PODDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Dim dataTable As DSAMB.View_PODDataTable = New DSAMB.View_PODDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class View_POTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "View_PO"
            tableMapping.ColumnMappings.Add("PO", "PO")
            tableMapping.ColumnMappings.Add("POCode", "POCode")
            tableMapping.ColumnMappings.Add("OrderType", "OrderType")
            tableMapping.ColumnMappings.Add("FactoryCode", "FactoryCode")
            tableMapping.ColumnMappings.Add("ArtCode", "ArtCode")
            tableMapping.ColumnMappings.Add("ModelName", "ModelName")
            tableMapping.ColumnMappings.Add("Target", "Target")
            tableMapping.ColumnMappings.Add("SAMForming", "SAMForming")
            tableMapping.ColumnMappings.Add("SAMPacking", "SAMPacking")
            tableMapping.ColumnMappings.Add("TargetPacking", "TargetPacking")
            tableMapping.ColumnMappings.Add("ClientID", "ClientID")
            tableMapping.ColumnMappings.Add("SecondConfDate", "SecondConfDate")
            tableMapping.ColumnMappings.Add("POM", "POM")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.AMB_Froming.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        tbl_Pro_PO_H.PO, tbl_Pro_PO_H.POCode, tbl_Pro_PO_H.OrderType, tbl_P"& _ 
                "ro_PO_H.FactoryCode, tbl_Pro_Article.ArtCode, tbl_Pro_Model.ModelName, isnull(tb"& _ 
                "l_Pro_Article.Target, 0) AS Target, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         isnull(tbl_Pro_Ar"& _ 
                "ticle.SAMForming, 0) AS SAMForming, isnull(tbl_Pro_Article.SAMPacking, 0) AS SAM"& _ 
                "Packing, isnull(tbl_Pro_Article.TargetPacking, 0) AS TargetPacking, tbl_Pro_PO_H"& _ 
                ".ClientID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         tbl_Pro_PO_H.SecondConfDate, tbl_Pro_PO.PO"& _ 
                "M"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_Pro_PO_H, tbl_Pro_PO, tbl_Pro_Article, tbl_Pro_Model"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHE"& _ 
                "RE        tbl_Pro_PO_H.PO = tbl_Pro_PO.PO AND tbl_Pro_PO_H.ClientID = tbl_Pro_PO"& _ 
                ".ClientID AND tbl_Pro_PO.ClientID = tbl_Pro_Article.ClientID AND tbl_Pro_PO.Mode"& _ 
                "lID = tbl_Pro_Article.ModelID AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         tbl_Pro_PO.ArtID = "& _ 
                "tbl_Pro_Article.ArtID AND tbl_Pro_Article.ClientID = tbl_Pro_Model.ClientID AND "& _ 
                "tbl_Pro_Article.ModelID = tbl_Pro_Model.ModelID AND (tbl_Pro_PO_H.FactoryCode = "& _ 
                "'B34006') AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (tbl_Pro_PO_H.ClientID = 1) AND (tbl_Pr"& _ 
                "o_PO_H.OrderType = 'Original Order') AND (tbl_Pro_PO_H.SecondConfDate >= '01/12/"& _ 
                "2017')"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        tbl_Pro_PO_H.PO, tbl_Pro_PO_H.POCode, tbl_Pro_PO_H.OrderType, tbl_P"& _ 
                "ro_PO_H.FactoryCode, tbl_Pro_Article.ArtCode, tbl_Pro_Model.ModelName, isnull(tb"& _ 
                "l_Pro_Article.Target, 0) AS Target, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         isnull(tbl_Pro_Ar"& _ 
                "ticle.SAMForming, 0) AS SAMForming, isnull(tbl_Pro_Article.SAMPacking, 0) AS SAM"& _ 
                "Packing, isnull(tbl_Pro_Article.TargetPacking, 0) AS TargetPacking, tbl_Pro_PO_H"& _ 
                ".ClientID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         tbl_Pro_PO_H.SecondConfDate, tbl_Pro_PO.PO"& _ 
                "M"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_Pro_PO_H, tbl_Pro_PO, tbl_Pro_Article, tbl_Pro_Model"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHE"& _ 
                "RE        tbl_Pro_PO_H.PO = tbl_Pro_PO.PO AND tbl_Pro_PO_H.ClientID = tbl_Pro_PO"& _ 
                ".ClientID AND tbl_Pro_PO.ClientID = tbl_Pro_Article.ClientID AND tbl_Pro_PO.Mode"& _ 
                "lID = tbl_Pro_Article.ModelID AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         tbl_Pro_PO.ArtID = "& _ 
                "tbl_Pro_Article.ArtID AND tbl_Pro_Article.ClientID = tbl_Pro_Model.ClientID AND "& _ 
                "tbl_Pro_Article.ModelID = tbl_Pro_Model.ModelID  AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "(tbl_Pro_PO_H.ClientID = 1) AND (tbl_Pro_PO_H.OrderType = 'Original Order') AND "& _ 
                "(tbl_Pro_PO_H.SecondConfDate >= '01/12/2017')"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        dbo.tbl_Pro_PO_H.PO, dbo.tbl_Pro_PO_H.POCode, dbo.tbl_Pro_PO_H.Orde"& _ 
                "rType, dbo.tbl_Pro_PO_H.FactoryCode, dbo.tbl_Pro_Article.ArtCode, dbo.tbl_Pro_Mo"& _ 
                "del.ModelName, ISNULL(dbo.tbl_Pro_Article.Target, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         0) "& _ 
                "AS Target, ISNULL(dbo.tbl_Pro_Article.SAMForming, 0) AS SAMForming, ISNULL(dbo.t"& _ 
                "bl_Pro_Article.SAMPacking, 0) AS SAMPacking, ISNULL(dbo.tbl_Pro_Article.TargetPa"& _ 
                "cking, 0) AS TargetPacking, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.tbl_Pro_PO_H.ClientID"& _ 
                ", dbo.tbl_Pro_PO_H.SecondConfDate, dbo.tbl_Pro_PO.POM"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            dbo.tbl_P"& _ 
                "ro_PO_H, dbo.tbl_Pro_PO, dbo.tbl_Pro_Article, dbo.tbl_Pro_Model"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        db"& _ 
                "o.tbl_Pro_PO_H.PO = dbo.tbl_Pro_PO.PO AND dbo.tbl_Pro_PO_H.ClientID = dbo.tbl_Pr"& _ 
                "o_PO.ClientID AND dbo.tbl_Pro_PO.ClientID = dbo.tbl_Pro_Article.ClientID AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                        dbo.tbl_Pro_PO.ModelID = dbo.tbl_Pro_Article.ModelID AND"& _ 
                " dbo.tbl_Pro_PO.ArtID = dbo.tbl_Pro_Article.ArtID AND dbo.tbl_Pro_Article.Client"& _ 
                "ID = dbo.tbl_Pro_Model.ClientID AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.tbl_Pro_Artic"& _ 
                "le.ModelID = dbo.tbl_Pro_Model.ModelID AND (dbo.tbl_Pro_PO_H.OrderType IN ('Orig"& _ 
                "inal Order', 'B-Grade Order')) AND (dbo.tbl_Pro_PO_H.SecondConfDate >= CONVERT(D"& _ 
                "ATETIME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         '2018-07-01 00:00:00', 102)) AND (dbo.tbl_Pr"& _ 
                "o_PO_H.ClientID = 1)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSAMB.View_PODataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSAMB.View_PODataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSAMB.View_PODataTable = New DSAMB.View_PODataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DSAMB.View_PODataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy() As DSAMB.View_PODataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Dim dataTable As DSAMB.View_PODataTable = New DSAMB.View_PODataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy1(ByVal dataTable As DSAMB.View_PODataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy1() As DSAMB.View_PODataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Dim dataTable As DSAMB.View_PODataTable = New DSAMB.View_PODataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class View_AMb_FormingTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "View_AMb_Forming"
            tableMapping.ColumnMappings.Add("PanelDMG", "PanelDMG")
            tableMapping.ColumnMappings.Add("OverLap", "OverLap")
            tableMapping.ColumnMappings.Add("ZigZagSeam", "ZigZagSeam")
            tableMapping.ColumnMappings.Add("Wrinkle", "Wrinkle")
            tableMapping.ColumnMappings.Add("ArtWork", "ArtWork")
            tableMapping.ColumnMappings.Add("UnbondedPanels", "UnbondedPanels")
            tableMapping.ColumnMappings.Add("SingleOpenStrip", "SingleOpenStrip")
            tableMapping.ColumnMappings.Add("OpenSeam", "OpenSeam")
            tableMapping.ColumnMappings.Add("PanelCavity", "PanelCavity")
            tableMapping.ColumnMappings.Add("Touching", "Touching")
            tableMapping.ColumnMappings.Add("OtherPrintingIssue", "OtherPrintingIssue")
            tableMapping.ColumnMappings.Add("CoreCavity", "CoreCavity")
            tableMapping.ColumnMappings.Add("PUC", "PUC")
            tableMapping.ColumnMappings.Add("SeamClosingGlue", "SeamClosingGlue")
            tableMapping.ColumnMappings.Add("BGrade", "BGrade")
            tableMapping.ColumnMappings.Add("TotalChecked", "TotalChecked")
            tableMapping.ColumnMappings.Add("Pass", "Pass")
            tableMapping.ColumnMappings.Add("Fail", "Fail")
            tableMapping.ColumnMappings.Add("StraightCut", "StraightCut")
            tableMapping.ColumnMappings.Add("CuttingResidual", "CuttingResidual")
            tableMapping.ColumnMappings.Add("ConnectionBreak", "ConnectionBreak")
            tableMapping.ColumnMappings.Add("UncureGlue", "UncureGlue")
            tableMapping.ColumnMappings.Add("ExcessiveGlue", "ExcessiveGlue")
            tableMapping.ColumnMappings.Add("OverUnderWght", "OverUnderWght")
            tableMapping.ColumnMappings.Add("DisColor", "DisColor")
            tableMapping.ColumnMappings.Add("LogoSmearing", "LogoSmearing")
            tableMapping.ColumnMappings.Add("LogoDoubling", "LogoDoubling")
            tableMapping.ColumnMappings.Add("BarcodeMissing", "BarcodeMissing")
            tableMapping.ColumnMappings.Add("LargerSpots", "LargerSpots")
            tableMapping.ColumnMappings.Add("Smearing", "Smearing")
            tableMapping.ColumnMappings.Add("HFMissAlignment", "HFMissAlignment")
            tableMapping.ColumnMappings.Add("BlurPrinting", "BlurPrinting")
            tableMapping.ColumnMappings.Add("RCheck", "RCheck")
            tableMapping.ColumnMappings.Add("RPass", "RPass")
            tableMapping.ColumnMappings.Add("airbubble", "airbubble")
            tableMapping.ColumnMappings.Add("pressoremark", "pressoremark")
            tableMapping.ColumnMappings.Add("missingglue", "missingglue")
            tableMapping.ColumnMappings.Add("excussglue", "excussglue")
            tableMapping.ColumnMappings.Add("wrinkles", "wrinkles")
            tableMapping.ColumnMappings.Add("seamoverlapping", "seamoverlapping")
            tableMapping.ColumnMappings.Add("newopenSeam", "newopenSeam")
            tableMapping.ColumnMappings.Add("materialdefects", "materialdefects")
            tableMapping.ColumnMappings.Add("wrongartwork", "wrongartwork")
            tableMapping.ColumnMappings.Add("colourShape", "colourShape")
            tableMapping.ColumnMappings.Add("anymisprint", "anymisprint")
            tableMapping.ColumnMappings.Add("printmissallignament", "printmissallignament")
            tableMapping.ColumnMappings.Add("NewTouching", "NewTouching")
            tableMapping.ColumnMappings.Add("heavyprintdefects", "heavyprintdefects")
            tableMapping.ColumnMappings.Add("cuttingpanel", "cuttingpanel")
            tableMapping.ColumnMappings.Add("zigzagedge", "zigzagedge")
            tableMapping.ColumnMappings.Add("unshapecut", "unshapecut")
            tableMapping.ColumnMappings.Add("unevenBallSurface", "unevenBallSurface")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.AMB_Froming.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        SUM(tbl_PC_AMB_Hours_Tran.PanelDMG) AS PanelDMG, SUM(tbl_PC_AMB_Hou"& _ 
                "rs_Tran.OverLap) AS OverLap, SUM(tbl_PC_AMB_Hours_Tran.ZigZagSeam) AS ZigZagSeam"& _ 
                ", SUM(tbl_PC_AMB_Hours_Tran.Wrinkle) AS Wrinkle, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM("& _ 
                "tbl_PC_AMB_Hours_Tran.ArtWork) AS ArtWork, SUM(tbl_PC_AMB_Hours_Tran.UnbondedPan"& _ 
                "els) AS UnbondedPanels, SUM(tbl_PC_AMB_Hours_Tran.SingleOpenStrip) AS SingleOpen"& _ 
                "Strip, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.OpenSeam) AS OpenSea"& _ 
                "m, SUM(tbl_PC_AMB_Hours_Tran.PanelCavity) AS PanelCavity, SUM(tbl_PC_AMB_Hours_T"& _ 
                "ran.Touching) AS Touching, SUM(tbl_PC_AMB_Hours_Tran.OtherPrintingIssue) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                    AS OtherPrintingIssue, SUM(tbl_PC_AMB_Hours_Tran.CoreCavity)"& _ 
                " AS CoreCavity, SUM(tbl_PC_AMB_Hours_Tran.PUC) AS PUC, SUM(tbl_PC_AMB_Hours_Tran"& _ 
                ".SeamClosingGlue) AS SeamClosingGlue, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_"& _ 
                "Hours_Tran.BGrade) AS BGrade, SUM(tbl_PC_AMB_Hours_Tran.TotalChecked) AS TotalCh"& _ 
                "ecked, SUM(tbl_PC_AMB_Hours_Tran.Pass) AS Pass, SUM(tbl_PC_AMB_Hours_Tran.Fail) "& _ 
                "AS Fail, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.StraightCut) AS St"& _ 
                "raightCut, SUM(tbl_PC_AMB_Hours_Tran.CuttingResidual) AS CuttingResidual, SUM(tb"& _ 
                "l_PC_AMB_Hours_Tran.ConnectionBreak) AS ConnectionBreak, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "    SUM(tbl_PC_AMB_Hours_Tran.UncureGlue) AS UncureGlue, SUM(tbl_PC_AMB_Hours_Tr"& _ 
                "an.ExcessiveGlue) AS ExcessiveGlue, SUM(tbl_PC_AMB_Hours_Tran.OverUnderWght) AS "& _ 
                "OverUnderWght, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.DisColor) AS"& _ 
                " DisColor, SUM(tbl_PC_AMB_Hours_Tran.LogoSmearing) AS LogoSmearing, SUM(tbl_PC_A"& _ 
                "MB_Hours_Tran.LogoDoubling) AS LogoDoubling, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_"& _ 
                "PC_AMB_Hours_Tran.BarcodeMissing) AS BarcodeMissing, SUM(tbl_PC_AMB_Hours_Tran.L"& _ 
                "argerSpots) AS LargerSpots, SUM(tbl_PC_AMB_Hours_Tran.Smearing) AS Smearing, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                        SUM(tbl_PC_AMB_Hours_Tran.HFMissAlignment) AS HFMissAlig"& _ 
                "nment, SUM(tbl_PC_AMB_Hours_Tran.BlurPrinting) AS BlurPrinting, SUM(tbl_PC_AMB_H"& _ 
                "ours_Tran.RCheck + tbl_PC_AMB_Hours_Tran.Fail) AS RCheck, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "     SUM(tbl_PC_AMB_Hours_Tran.RPass) AS RPass, SUM(tbl_PC_AMB_Hours_Tran.airbub"& _ 
                "ble) AS airbubble, SUM(tbl_PC_AMB_Hours_Tran.pressoremark) AS pressoremark, SUM("& _ 
                "tbl_PC_AMB_Hours_Tran.missingglue) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS missingglue, SU"& _ 
                "M(tbl_PC_AMB_Hours_Tran.excussglue) AS excussglue, SUM(tbl_PC_AMB_Hours_Tran.wri"& _ 
                "nkles) AS wrinkles, SUM(tbl_PC_AMB_Hours_Tran.seamoverlapping) AS seamoverlappin"& _ 
                "g, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.newopenSeam) AS newopenS"& _ 
                "eam, SUM(tbl_PC_AMB_Hours_Tran.materialdefects) AS materialdefects, SUM(tbl_PC_A"& _ 
                "MB_Hours_Tran.wrongartwork) AS wrongartwork, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_"& _ 
                "PC_AMB_Hours_Tran.colourShape) AS colourShape, SUM(tbl_PC_AMB_Hours_Tran.anymisp"& _ 
                "rint) AS anymisprint, SUM(tbl_PC_AMB_Hours_Tran.printmissallignament) AS printmi"& _ 
                "ssallignament, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.NewTouching)"& _ 
                " AS NewTouching, SUM(tbl_PC_AMB_Hours_Tran.heavyprintdefects) AS heavyprintdefec"& _ 
                "ts, SUM(tbl_PC_AMB_Hours_Tran.cuttingpanel) AS cuttingpanel, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "        SUM(tbl_PC_AMB_Hours_Tran.zigzagedge) AS zigzagedge, SUM(tbl_PC_AMB_Hour"& _ 
                "s_Tran.unshapecut) AS unshapecut, SUM(tbl_PC_AMB_Hours_Tran.unevenBallSurface) A"& _ 
                "S unevenBallSurface"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_PC_AMB_Hours_Tran, tbl_PC_AMB_Line"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHE"& _ 
                "RE        tbl_PC_AMB_Hours_Tran.LineID = tbl_PC_AMB_Line.LineID AND (tbl_PC_AMB_"& _ 
                "Hours_Tran.ProcessID = ?) AND (tbl_PC_AMB_Hours_Tran.DayID = ?) AND (tbl_PC_AMB_"& _ 
                "Hours_Tran.SysIP = ?)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ProcessID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ProcessID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DayID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DayID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("SysIP", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SysIP", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSAMB.View_AMb_FormingDataTable, ByVal ProcessID As Integer, ByVal DayID As Integer, ByVal SysIP As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ProcessID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(DayID,Integer)
            If (SysIP Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(SysIP,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal ProcessID As Integer, ByVal DayID As Integer, ByVal SysIP As String) As DSAMB.View_AMb_FormingDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ProcessID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(DayID,Integer)
            If (SysIP Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(SysIP,String)
            End If
            Dim dataTable As DSAMB.View_AMb_FormingDataTable = New DSAMB.View_AMb_FormingDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class View_Daily_SumTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "View_Daily_Sum"
            tableMapping.ColumnMappings.Add("PanelDMG", "PanelDMG")
            tableMapping.ColumnMappings.Add("OverLap", "OverLap")
            tableMapping.ColumnMappings.Add("ZigZagSeam", "ZigZagSeam")
            tableMapping.ColumnMappings.Add("Wrinkle", "Wrinkle")
            tableMapping.ColumnMappings.Add("ArtWork", "ArtWork")
            tableMapping.ColumnMappings.Add("UnbondedPanels", "UnbondedPanels")
            tableMapping.ColumnMappings.Add("SingleOpenStrip", "SingleOpenStrip")
            tableMapping.ColumnMappings.Add("OpenSeam", "OpenSeam")
            tableMapping.ColumnMappings.Add("PanelCavity", "PanelCavity")
            tableMapping.ColumnMappings.Add("Touching", "Touching")
            tableMapping.ColumnMappings.Add("OtherPrintingIssue", "OtherPrintingIssue")
            tableMapping.ColumnMappings.Add("CoreCavity", "CoreCavity")
            tableMapping.ColumnMappings.Add("PUC", "PUC")
            tableMapping.ColumnMappings.Add("SeamClosingGlue", "SeamClosingGlue")
            tableMapping.ColumnMappings.Add("BGrade", "BGrade")
            tableMapping.ColumnMappings.Add("TotalChecked", "TotalChecked")
            tableMapping.ColumnMappings.Add("Pass", "Pass")
            tableMapping.ColumnMappings.Add("Fail", "Fail")
            tableMapping.ColumnMappings.Add("StraightCut", "StraightCut")
            tableMapping.ColumnMappings.Add("CuttingResidual", "CuttingResidual")
            tableMapping.ColumnMappings.Add("ConnectionBreak", "ConnectionBreak")
            tableMapping.ColumnMappings.Add("UncureGlue", "UncureGlue")
            tableMapping.ColumnMappings.Add("ExcessiveGlue", "ExcessiveGlue")
            tableMapping.ColumnMappings.Add("OverUnderWght", "OverUnderWght")
            tableMapping.ColumnMappings.Add("DisColor", "DisColor")
            tableMapping.ColumnMappings.Add("LogoSmearing", "LogoSmearing")
            tableMapping.ColumnMappings.Add("LogoDoubling", "LogoDoubling")
            tableMapping.ColumnMappings.Add("BarcodeMissing", "BarcodeMissing")
            tableMapping.ColumnMappings.Add("LargerSpots", "LargerSpots")
            tableMapping.ColumnMappings.Add("Smearing", "Smearing")
            tableMapping.ColumnMappings.Add("HFMissAlignment", "HFMissAlignment")
            tableMapping.ColumnMappings.Add("RCheck", "RCheck")
            tableMapping.ColumnMappings.Add("RPass", "RPass")
            tableMapping.ColumnMappings.Add("MissAlligment", "MissAlligment")
            tableMapping.ColumnMappings.Add("BlurPrinting", "BlurPrinting")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.AMB_Froming.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        SUM(tbl_PC_AMB_Hours_Tran.PanelDMG) AS PanelDMG, SUM(tbl_PC_AMB_Hou"& _ 
                "rs_Tran.OverLap) AS OverLap, SUM(tbl_PC_AMB_Hours_Tran.ZigZagSeam) AS ZigZagSeam"& _ 
                ", SUM(tbl_PC_AMB_Hours_Tran.Wrinkle) AS Wrinkle, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM("& _ 
                "tbl_PC_AMB_Hours_Tran.ArtWork) AS ArtWork, SUM(tbl_PC_AMB_Hours_Tran.UnbondedPan"& _ 
                "els) AS UnbondedPanels, SUM(tbl_PC_AMB_Hours_Tran.SingleOpenStrip) AS SingleOpen"& _ 
                "Strip, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.OpenSeam) AS OpenSea"& _ 
                "m, SUM(tbl_PC_AMB_Hours_Tran.PanelCavity) AS PanelCavity, SUM(tbl_PC_AMB_Hours_T"& _ 
                "ran.Touching) AS Touching, SUM(tbl_PC_AMB_Hours_Tran.OtherPrintingIssue) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                    AS OtherPrintingIssue, SUM(tbl_PC_AMB_Hours_Tran.CoreCavity)"& _ 
                " AS CoreCavity, SUM(tbl_PC_AMB_Hours_Tran.PUC) AS PUC, SUM(tbl_PC_AMB_Hours_Tran"& _ 
                ".SeamClosingGlue) AS SeamClosingGlue, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_"& _ 
                "Hours_Tran.BGrade) AS BGrade, SUM(tbl_PC_AMB_Hours_Tran.TotalChecked) AS TotalCh"& _ 
                "ecked, SUM(tbl_PC_AMB_Hours_Tran.Pass) AS Pass, SUM(tbl_PC_AMB_Hours_Tran.Fail) "& _ 
                "AS Fail, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.StraightCut) AS St"& _ 
                "raightCut, SUM(tbl_PC_AMB_Hours_Tran.CuttingResidual) AS CuttingResidual, SUM(tb"& _ 
                "l_PC_AMB_Hours_Tran.ConnectionBreak) AS ConnectionBreak, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "    SUM(tbl_PC_AMB_Hours_Tran.UncureGlue) AS UncureGlue, SUM(tbl_PC_AMB_Hours_Tr"& _ 
                "an.ExcessiveGlue) AS ExcessiveGlue, SUM(tbl_PC_AMB_Hours_Tran.OverUnderWght) AS "& _ 
                "OverUnderWght, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.DisColor) AS"& _ 
                " DisColor, SUM(tbl_PC_AMB_Hours_Tran.LogoSmearing) AS LogoSmearing, SUM(tbl_PC_A"& _ 
                "MB_Hours_Tran.LogoDoubling) AS LogoDoubling, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_"& _ 
                "PC_AMB_Hours_Tran.BarcodeMissing) AS BarcodeMissing, SUM(tbl_PC_AMB_Hours_Tran.L"& _ 
                "argerSpots) AS LargerSpots, SUM(tbl_PC_AMB_Hours_Tran.Smearing) AS Smearing, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                        SUM(tbl_PC_AMB_Hours_Tran.HFMissAlignment) AS HFMissAlig"& _ 
                "nment, SUM(tbl_PC_AMB_Hours_Tran.RCheck) AS RCheck, SUM(tbl_PC_AMB_Hours_Tran.RP"& _ 
                "ass) AS RPass, SUM(tbl_PC_AMB_Hours_Tran.MissAlligment) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "   AS MissAlligment, SUM(tbl_PC_AMB_Hours_Tran.BlurPrinting) AS BlurPrinting"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FR"& _ 
                "OM            tbl_PC_AMB_Hours_Tran, tbl_PC_AMB_Line"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        tbl_PC_AMB_Ho"& _ 
                "urs_Tran.LineID = tbl_PC_AMB_Line.LineID AND (tbl_PC_AMB_Hours_Tran.ProcessID = "& _ 
                "?) AND (tbl_PC_AMB_Hours_Tran.DayID = ?)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ProcessID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ProcessID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DayID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DayID", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSAMB.View_Daily_SumDataTable, ByVal ProcessID As Integer, ByVal DayID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ProcessID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(DayID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal ProcessID As Integer, ByVal DayID As Integer) As DSAMB.View_Daily_SumDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ProcessID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(DayID,Integer)
            Dim dataTable As DSAMB.View_Daily_SumDataTable = New DSAMB.View_Daily_SumDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class View_AMb_Article_Wise_SumTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "View_AMb_Article Wise_Sum"
            tableMapping.ColumnMappings.Add("PanelDMG", "PanelDMG")
            tableMapping.ColumnMappings.Add("OverLap", "OverLap")
            tableMapping.ColumnMappings.Add("ZigZagSeam", "ZigZagSeam")
            tableMapping.ColumnMappings.Add("Wrinkle", "Wrinkle")
            tableMapping.ColumnMappings.Add("ArtWork", "ArtWork")
            tableMapping.ColumnMappings.Add("UnbondedPanels", "UnbondedPanels")
            tableMapping.ColumnMappings.Add("SingleOpenStrip", "SingleOpenStrip")
            tableMapping.ColumnMappings.Add("OpenSeam", "OpenSeam")
            tableMapping.ColumnMappings.Add("PanelCavity", "PanelCavity")
            tableMapping.ColumnMappings.Add("Touching", "Touching")
            tableMapping.ColumnMappings.Add("OtherPrintingIssue", "OtherPrintingIssue")
            tableMapping.ColumnMappings.Add("CoreCavity", "CoreCavity")
            tableMapping.ColumnMappings.Add("PUC", "PUC")
            tableMapping.ColumnMappings.Add("SeamClosingGlue", "SeamClosingGlue")
            tableMapping.ColumnMappings.Add("BGrade", "BGrade")
            tableMapping.ColumnMappings.Add("TotalChecked", "TotalChecked")
            tableMapping.ColumnMappings.Add("Pass", "Pass")
            tableMapping.ColumnMappings.Add("Fail", "Fail")
            tableMapping.ColumnMappings.Add("StraightCut", "StraightCut")
            tableMapping.ColumnMappings.Add("CuttingResidual", "CuttingResidual")
            tableMapping.ColumnMappings.Add("ConnectionBreak", "ConnectionBreak")
            tableMapping.ColumnMappings.Add("UncureGlue", "UncureGlue")
            tableMapping.ColumnMappings.Add("ExcessiveGlue", "ExcessiveGlue")
            tableMapping.ColumnMappings.Add("OverUnderWght", "OverUnderWght")
            tableMapping.ColumnMappings.Add("MissAlligment", "MissAlligment")
            tableMapping.ColumnMappings.Add("DisColor", "DisColor")
            tableMapping.ColumnMappings.Add("LogoSmearing", "LogoSmearing")
            tableMapping.ColumnMappings.Add("LogoDoubling", "LogoDoubling")
            tableMapping.ColumnMappings.Add("BarcodeMissing", "BarcodeMissing")
            tableMapping.ColumnMappings.Add("LargerSpots", "LargerSpots")
            tableMapping.ColumnMappings.Add("Smearing", "Smearing")
            tableMapping.ColumnMappings.Add("HFMissAlignment", "HFMissAlignment")
            tableMapping.ColumnMappings.Add("RCheck", "RCheck")
            tableMapping.ColumnMappings.Add("RPass", "RPass")
            tableMapping.ColumnMappings.Add("BlurPrinting", "BlurPrinting")
            tableMapping.ColumnMappings.Add("airbubble", "airbubble")
            tableMapping.ColumnMappings.Add("pressoremark", "pressoremark")
            tableMapping.ColumnMappings.Add("missingglue", "missingglue")
            tableMapping.ColumnMappings.Add("excussglue", "excussglue")
            tableMapping.ColumnMappings.Add("wrinkles", "wrinkles")
            tableMapping.ColumnMappings.Add("seamoverlapping", "seamoverlapping")
            tableMapping.ColumnMappings.Add("newopenSeam", "newopenSeam")
            tableMapping.ColumnMappings.Add("materialdefects", "materialdefects")
            tableMapping.ColumnMappings.Add("colourShape", "colourShape")
            tableMapping.ColumnMappings.Add("anymisprint", "anymisprint")
            tableMapping.ColumnMappings.Add("printmissallignament", "printmissallignament")
            tableMapping.ColumnMappings.Add("NewTouching", "NewTouching")
            tableMapping.ColumnMappings.Add("heavyprintdefects", "heavyprintdefects")
            tableMapping.ColumnMappings.Add("cuttingpanel", "cuttingpanel")
            tableMapping.ColumnMappings.Add("zigzagedge", "zigzagedge")
            tableMapping.ColumnMappings.Add("unshapecut", "unshapecut")
            tableMapping.ColumnMappings.Add("unevenBallSurface", "unevenBallSurface")
            tableMapping.ColumnMappings.Add("wrongartwork", "wrongartwork")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.AMB_Froming.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        SUM(tbl_PC_AMB_Hours_Tran.PanelDMG) AS PanelDMG, SUM(tbl_PC_AMB_Hou"& _ 
                "rs_Tran.OverLap) AS OverLap, SUM(tbl_PC_AMB_Hours_Tran.ZigZagSeam) AS ZigZagSeam"& _ 
                ", SUM(tbl_PC_AMB_Hours_Tran.Wrinkle) AS Wrinkle, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM("& _ 
                "tbl_PC_AMB_Hours_Tran.ArtWork) AS ArtWork, SUM(tbl_PC_AMB_Hours_Tran.UnbondedPan"& _ 
                "els) AS UnbondedPanels, SUM(tbl_PC_AMB_Hours_Tran.SingleOpenStrip) AS SingleOpen"& _ 
                "Strip, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.OpenSeam) AS OpenSea"& _ 
                "m, SUM(tbl_PC_AMB_Hours_Tran.PanelCavity) AS PanelCavity, SUM(tbl_PC_AMB_Hours_T"& _ 
                "ran.Touching) AS Touching, SUM(tbl_PC_AMB_Hours_Tran.OtherPrintingIssue) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                    AS OtherPrintingIssue, SUM(tbl_PC_AMB_Hours_Tran.CoreCavity)"& _ 
                " AS CoreCavity, SUM(tbl_PC_AMB_Hours_Tran.PUC) AS PUC, SUM(tbl_PC_AMB_Hours_Tran"& _ 
                ".SeamClosingGlue) AS SeamClosingGlue, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_"& _ 
                "Hours_Tran.BGrade) AS BGrade, SUM(tbl_PC_AMB_Hours_Tran.TotalChecked) AS TotalCh"& _ 
                "ecked, SUM(tbl_PC_AMB_Hours_Tran.Pass) AS Pass, SUM(tbl_PC_AMB_Hours_Tran.Fail) "& _ 
                "AS Fail, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.StraightCut) AS St"& _ 
                "raightCut, SUM(tbl_PC_AMB_Hours_Tran.CuttingResidual) AS CuttingResidual, SUM(tb"& _ 
                "l_PC_AMB_Hours_Tran.ConnectionBreak) AS ConnectionBreak, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "    SUM(tbl_PC_AMB_Hours_Tran.UncureGlue) AS UncureGlue, SUM(tbl_PC_AMB_Hours_Tr"& _ 
                "an.ExcessiveGlue) AS ExcessiveGlue, SUM(tbl_PC_AMB_Hours_Tran.OverUnderWght) AS "& _ 
                "OverUnderWght, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.MissAlligmen"& _ 
                "t) AS MissAlligment, SUM(tbl_PC_AMB_Hours_Tran.DisColor) AS DisColor, SUM(tbl_PC"& _ 
                "_AMB_Hours_Tran.LogoSmearing) AS LogoSmearing, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tb"& _ 
                "l_PC_AMB_Hours_Tran.LogoDoubling) AS LogoDoubling, SUM(tbl_PC_AMB_Hours_Tran.Bar"& _ 
                "codeMissing) AS BarcodeMissing, SUM(tbl_PC_AMB_Hours_Tran.LargerSpots) AS Larger"& _ 
                "Spots, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.Smearing) AS Smearin"& _ 
                "g, SUM(tbl_PC_AMB_Hours_Tran.HFMissAlignment) AS HFMissAlignment, SUM(tbl_PC_AMB"& _ 
                "_Hours_Tran.RCheck) AS RCheck, SUM(tbl_PC_AMB_Hours_Tran.RPass) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "           AS RPass, SUM(tbl_PC_AMB_Hours_Tran.BlurPrinting) AS BlurPrinting, SU"& _ 
                "M(tbl_PC_AMB_Hours_Tran.airbubble) AS airbubble, SUM(tbl_PC_AMB_Hours_Tran.press"& _ 
                "oremark) AS pressoremark, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.m"& _ 
                "issingglue) AS missingglue, SUM(tbl_PC_AMB_Hours_Tran.excussglue) AS excussglue,"& _ 
                " SUM(tbl_PC_AMB_Hours_Tran.wrinkles) AS wrinkles, SUM(tbl_PC_AMB_Hours_Tran.seam"& _ 
                "overlapping) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS seamoverlapping, SUM(tbl_PC_AMB_Hours"& _ 
                "_Tran.newopenSeam) AS newopenSeam, SUM(tbl_PC_AMB_Hours_Tran.materialdefects) AS"& _ 
                " materialdefects, SUM(tbl_PC_AMB_Hours_Tran.wrongartwork) AS wrongartwork, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "& _ 
                "                      SUM(tbl_PC_AMB_Hours_Tran.colourShape) AS colourShape, SUM"& _ 
                "(tbl_PC_AMB_Hours_Tran.anymisprint) AS anymisprint, SUM(tbl_PC_AMB_Hours_Tran.pr"& _ 
                "intmissallignament) AS printmissallignament, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_"& _ 
                "PC_AMB_Hours_Tran.NewTouching) AS NewTouching, SUM(tbl_PC_AMB_Hours_Tran.heavypr"& _ 
                "intdefects) AS heavyprintdefects, SUM(tbl_PC_AMB_Hours_Tran.cuttingpanel) AS cut"& _ 
                "tingpanel, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.zigzagedge) AS z"& _ 
                "igzagedge, SUM(tbl_PC_AMB_Hours_Tran.unshapecut) AS unshapecut, SUM(tbl_PC_AMB_H"& _ 
                "ours_Tran.unevenBallSurface) AS unevenBallSurface"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_PC_AMB_Ho"& _ 
                "urs_Tran, tbl_PC_AMB_Line, tbl_Inv_Tran_Date"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        tbl_PC_AMB_Hours_Tran"& _ 
                ".LineID = tbl_PC_AMB_Line.LineID AND tbl_PC_AMB_Hours_Tran.DayID = tbl_Inv_Tran_"& _ 
                "Date.DayNo AND (tbl_PC_AMB_Hours_Tran.ProcessID = ?) AND (tbl_PC_AMB_Hours_Tran."& _ 
                "LineID = ?) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (tbl_PC_AMB_Hours_Tran.ClientID = ?) "& _ 
                "AND (tbl_PC_AMB_Hours_Tran.ModelID = ?) AND (tbl_PC_AMB_Hours_Tran.ArtID = ?) AN"& _ 
                "D (tbl_Inv_Tran_Date.DayNo = ?) AND (tbl_PC_AMB_Hours_Tran.SysIP = ?)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ProcessID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ProcessID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LineID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LineID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ClientID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ClientID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ModelID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ModelID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ArtID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ArtID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DayNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DayNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("SysIP", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SysIP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(1) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        SUM(tbl_PC_AMB_Hours_Tran.PanelDMG) AS PanelDMG, SUM(tbl_PC_AMB_Hou"& _ 
                "rs_Tran.OverLap) AS OverLap, SUM(tbl_PC_AMB_Hours_Tran.ZigZagSeam) AS ZigZagSeam"& _ 
                ", SUM(tbl_PC_AMB_Hours_Tran.Wrinkle) AS Wrinkle, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM("& _ 
                "tbl_PC_AMB_Hours_Tran.ArtWork) AS ArtWork, SUM(tbl_PC_AMB_Hours_Tran.UnbondedPan"& _ 
                "els) AS UnbondedPanels, SUM(tbl_PC_AMB_Hours_Tran.SingleOpenStrip) AS SingleOpen"& _ 
                "Strip, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.OpenSeam) AS OpenSea"& _ 
                "m, SUM(tbl_PC_AMB_Hours_Tran.PanelCavity) AS PanelCavity, SUM(tbl_PC_AMB_Hours_T"& _ 
                "ran.Touching) AS Touching, SUM(tbl_PC_AMB_Hours_Tran.OtherPrintingIssue) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                    AS OtherPrintingIssue, SUM(tbl_PC_AMB_Hours_Tran.CoreCavity)"& _ 
                " AS CoreCavity, SUM(tbl_PC_AMB_Hours_Tran.PUC) AS PUC, SUM(tbl_PC_AMB_Hours_Tran"& _ 
                ".SeamClosingGlue) AS SeamClosingGlue, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_"& _ 
                "Hours_Tran.BGrade) AS BGrade, SUM(tbl_PC_AMB_Hours_Tran.TotalChecked) AS TotalCh"& _ 
                "ecked, SUM(tbl_PC_AMB_Hours_Tran.Pass) AS Pass, SUM(tbl_PC_AMB_Hours_Tran.Fail) "& _ 
                "AS Fail, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.StraightCut) AS St"& _ 
                "raightCut, SUM(tbl_PC_AMB_Hours_Tran.CuttingResidual) AS CuttingResidual, SUM(tb"& _ 
                "l_PC_AMB_Hours_Tran.ConnectionBreak) AS ConnectionBreak, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "    SUM(tbl_PC_AMB_Hours_Tran.UncureGlue) AS UncureGlue, SUM(tbl_PC_AMB_Hours_Tr"& _ 
                "an.ExcessiveGlue) AS ExcessiveGlue, SUM(tbl_PC_AMB_Hours_Tran.OverUnderWght) AS "& _ 
                "OverUnderWght, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.MissAlligmen"& _ 
                "t) AS MissAlligment, SUM(tbl_PC_AMB_Hours_Tran.DisColor) AS DisColor, SUM(tbl_PC"& _ 
                "_AMB_Hours_Tran.LogoSmearing) AS LogoSmearing, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tb"& _ 
                "l_PC_AMB_Hours_Tran.LogoDoubling) AS LogoDoubling, SUM(tbl_PC_AMB_Hours_Tran.Bar"& _ 
                "codeMissing) AS BarcodeMissing, SUM(tbl_PC_AMB_Hours_Tran.LargerSpots) AS Larger"& _ 
                "Spots, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.Smearing) AS Smearin"& _ 
                "g, SUM(tbl_PC_AMB_Hours_Tran.HFMissAlignment) AS HFMissAlignment, SUM(tbl_PC_AMB"& _ 
                "_Hours_Tran.RCheck) AS RCheck, SUM(tbl_PC_AMB_Hours_Tran.RPass) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "           AS RPass, SUM(tbl_PC_AMB_Hours_Tran.BlurPrinting) AS BlurPrinting"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FR"& _ 
                "OM            tbl_PC_AMB_Hours_Tran, tbl_PC_AMB_Line, tbl_Inv_Tran_Date"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE  "& _ 
                "      tbl_PC_AMB_Hours_Tran.LineID = tbl_PC_AMB_Line.LineID AND tbl_PC_AMB_Hours"& _ 
                "_Tran.DayID = tbl_Inv_Tran_Date.DayNo AND (tbl_PC_AMB_Hours_Tran.ProcessID = ?) "& _ 
                "AND (tbl_PC_AMB_Hours_Tran.LineID = ?) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (tbl_PC_AM"& _ 
                "B_Hours_Tran.ClientID = ?) AND (tbl_PC_AMB_Hours_Tran.ModelID = ?) AND (tbl_PC_A"& _ 
                "MB_Hours_Tran.ArtID = ?) AND (tbl_Inv_Tran_Date.DayNo = ?)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ProcessID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ProcessID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LineID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LineID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ClientID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ClientID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ModelID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ModelID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ArtID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ArtID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DayNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DayNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSAMB.View_AMb_Article_Wise_SumDataTable, ByVal ProcessID As Integer, ByVal LineID As Integer, ByVal ClientID As Integer, ByVal ModelID As Integer, ByVal ArtID As Integer, ByVal DayNo As Integer, ByVal SysIP As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ProcessID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(LineID,Integer)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(ClientID,Integer)
            Me.Adapter.SelectCommand.Parameters(3).Value = CType(ModelID,Integer)
            Me.Adapter.SelectCommand.Parameters(4).Value = CType(ArtID,Integer)
            Me.Adapter.SelectCommand.Parameters(5).Value = CType(DayNo,Integer)
            If (SysIP Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(SysIP,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal ProcessID As Integer, ByVal LineID As Integer, ByVal ClientID As Integer, ByVal ModelID As Integer, ByVal ArtID As Integer, ByVal DayNo As Integer, ByVal SysIP As String) As DSAMB.View_AMb_Article_Wise_SumDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ProcessID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(LineID,Integer)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(ClientID,Integer)
            Me.Adapter.SelectCommand.Parameters(3).Value = CType(ModelID,Integer)
            Me.Adapter.SelectCommand.Parameters(4).Value = CType(ArtID,Integer)
            Me.Adapter.SelectCommand.Parameters(5).Value = CType(DayNo,Integer)
            If (SysIP Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(SysIP,String)
            End If
            Dim dataTable As DSAMB.View_AMb_Article_Wise_SumDataTable = New DSAMB.View_AMb_Article_Wise_SumDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DSAMB.View_AMb_Article_Wise_SumDataTable, ByVal ProcessID As Integer, ByVal LineID As Integer, ByVal ClientID As Integer, ByVal ModelID As Integer, ByVal ArtID As Integer, ByVal DayNo As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ProcessID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(LineID,Integer)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(ClientID,Integer)
            Me.Adapter.SelectCommand.Parameters(3).Value = CType(ModelID,Integer)
            Me.Adapter.SelectCommand.Parameters(4).Value = CType(ArtID,Integer)
            Me.Adapter.SelectCommand.Parameters(5).Value = CType(DayNo,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy(ByVal ProcessID As Integer, ByVal LineID As Integer, ByVal ClientID As Integer, ByVal ModelID As Integer, ByVal ArtID As Integer, ByVal DayNo As Integer) As DSAMB.View_AMb_Article_Wise_SumDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ProcessID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(LineID,Integer)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(ClientID,Integer)
            Me.Adapter.SelectCommand.Parameters(3).Value = CType(ModelID,Integer)
            Me.Adapter.SelectCommand.Parameters(4).Value = CType(ArtID,Integer)
            Me.Adapter.SelectCommand.Parameters(5).Value = CType(DayNo,Integer)
            Dim dataTable As DSAMB.View_AMb_Article_Wise_SumDataTable = New DSAMB.View_AMb_Article_Wise_SumDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_PC_AMB_LineTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_PC_AMB_Line"
            tableMapping.ColumnMappings.Add("LineID", "LineID")
            tableMapping.ColumnMappings.Add("LineName", "LineName")
            tableMapping.ColumnMappings.Add("TotalStrength", "TotalStrength")
            tableMapping.ColumnMappings.Add("PackingStrength", "PackingStrength")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tbl_PC_AMB_Line] WHERE (([LineID] = ?) AND ([LineName] = ?) AND ([To"& _ 
                "talStrength] = ?) AND ([PackingStrength] = ?))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LineID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LineID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LineName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LineName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_TotalStrength", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "TotalStrength", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PackingStrength", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PackingStrength", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tbl_PC_AMB_Line] ([LineName], [TotalStrength], [PackingStrength]) VA"& _ 
                "LUES (?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LineName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LineName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("TotalStrength", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "TotalStrength", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PackingStrength", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PackingStrength", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tbl_PC_AMB_Line] SET [LineName] = ?, [TotalStrength] = ?, [PackingStrengt"& _ 
                "h] = ? WHERE (([LineID] = ?) AND ([LineName] = ?) AND ([TotalStrength] = ?) AND "& _ 
                "([PackingStrength] = ?))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LineName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LineName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("TotalStrength", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "TotalStrength", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PackingStrength", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PackingStrength", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LineID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LineID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LineName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LineName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_TotalStrength", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "TotalStrength", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PackingStrength", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PackingStrength", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.AMB_Froming.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        LineID, LineName, TotalStrength, PackingStrength"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            t"& _ 
                "bl_PC_AMB_Line"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (LineID = ?)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LineID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LineID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(1) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        LineID, LineName, TotalStrength, PackingStrength"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            t"& _ 
                "bl_PC_AMB_Line"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (LineID <= 11)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSAMB.tbl_PC_AMB_LineDataTable, ByVal LineID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LineID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal LineID As Integer) As DSAMB.tbl_PC_AMB_LineDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LineID,Integer)
            Dim dataTable As DSAMB.tbl_PC_AMB_LineDataTable = New DSAMB.tbl_PC_AMB_LineDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DSAMB.tbl_PC_AMB_LineDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy() As DSAMB.tbl_PC_AMB_LineDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Dim dataTable As DSAMB.tbl_PC_AMB_LineDataTable = New DSAMB.tbl_PC_AMB_LineDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSAMB.tbl_PC_AMB_LineDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSAMB) As Integer
            Return Me.Adapter.Update(dataSet, "tbl_PC_AMB_Line")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_LineID As Integer, ByVal Original_LineName As String, ByVal Original_TotalStrength As Decimal, ByVal Original_PackingStrength As Decimal) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_LineID,Integer)
            If (Original_LineName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LineName")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_LineName,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_TotalStrength,Decimal)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_PackingStrength,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal LineName As String, ByVal TotalStrength As Decimal, ByVal PackingStrength As Decimal) As Integer
            If (LineName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LineName")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(LineName,String)
            End If
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(TotalStrength,Decimal)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(PackingStrength,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal LineName As String, ByVal TotalStrength As Decimal, ByVal PackingStrength As Decimal, ByVal Original_LineID As Integer, ByVal Original_LineName As String, ByVal Original_TotalStrength As Decimal, ByVal Original_PackingStrength As Decimal) As Integer
            If (LineName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LineName")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(LineName,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(TotalStrength,Decimal)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(PackingStrength,Decimal)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_LineID,Integer)
            If (Original_LineName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LineName")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_LineName,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_TotalStrength,Decimal)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_PackingStrength,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class View_max_FromingTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "View_max_Froming"
            tableMapping.ColumnMappings.Add("TranID", "TranID")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.AMB_Froming.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        MAX(TranID) AS TranID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_PC_AMB_Hours_Tran"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE"& _ 
                "        (LineID = ?) AND (ProcessID = ?) AND (DayID = ?)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LineID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LineID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ProcessID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ProcessID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DayID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DayID", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSAMB.View_max_FromingDataTable, ByVal LineID As Integer, ByVal ProcessID As Integer, ByVal DayID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LineID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(ProcessID,Integer)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(DayID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal LineID As Integer, ByVal ProcessID As Integer, ByVal DayID As Integer) As DSAMB.View_max_FromingDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LineID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(ProcessID,Integer)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(DayID,Integer)
            Dim dataTable As DSAMB.View_max_FromingDataTable = New DSAMB.View_max_FromingDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class View_AMB_Incentive_RFTTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "View_AMB_Incentive_RFT"
            tableMapping.ColumnMappings.Add("PassQty", "PassQty")
            tableMapping.ColumnMappings.Add("TotalChecked", "TotalChecked")
            tableMapping.ColumnMappings.Add("FailQty", "FailQty")
            tableMapping.ColumnMappings.Add("RFT", "RFT")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.AMB_Froming.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        SUM(PassQty) AS PassQty, SUM(TotalChecked) AS TotalChecked, SUM(Fai"& _ 
                "lQty) AS FailQty, RFT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            View_Final_AMB_Incentive_RFT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE      "& _ 
                "  (DateName BETWEEN ? AND ?) AND (LineID = ?)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY RFT"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DateName", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DateName1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LineID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LineID", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSAMB.View_AMB_Incentive_RFTDataTable, ByVal DateName As Date, ByVal DateName1 As Date, ByVal LineID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateName,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(DateName1,Date)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(LineID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal DateName As Date, ByVal DateName1 As Date, ByVal LineID As Integer) As DSAMB.View_AMB_Incentive_RFTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateName,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(DateName1,Date)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(LineID,Integer)
            Dim dataTable As DSAMB.View_AMB_Incentive_RFTDataTable = New DSAMB.View_AMB_Incentive_RFTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class View_AMb_RepairTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "View_AMb_Repair"
            tableMapping.ColumnMappings.Add("PanelDMG", "PanelDMG")
            tableMapping.ColumnMappings.Add("OverLap", "OverLap")
            tableMapping.ColumnMappings.Add("ZigZagSeam", "ZigZagSeam")
            tableMapping.ColumnMappings.Add("Wrinkle", "Wrinkle")
            tableMapping.ColumnMappings.Add("ArtWork", "ArtWork")
            tableMapping.ColumnMappings.Add("UnbondedPanels", "UnbondedPanels")
            tableMapping.ColumnMappings.Add("SingleOpenStrip", "SingleOpenStrip")
            tableMapping.ColumnMappings.Add("OpenSeam", "OpenSeam")
            tableMapping.ColumnMappings.Add("PanelCavity", "PanelCavity")
            tableMapping.ColumnMappings.Add("Touching", "Touching")
            tableMapping.ColumnMappings.Add("OtherPrintingIssue", "OtherPrintingIssue")
            tableMapping.ColumnMappings.Add("CoreCavity", "CoreCavity")
            tableMapping.ColumnMappings.Add("PUC", "PUC")
            tableMapping.ColumnMappings.Add("SeamClosingGlue", "SeamClosingGlue")
            tableMapping.ColumnMappings.Add("BGrade", "BGrade")
            tableMapping.ColumnMappings.Add("TotalChecked", "TotalChecked")
            tableMapping.ColumnMappings.Add("Pass", "Pass")
            tableMapping.ColumnMappings.Add("Fail", "Fail")
            tableMapping.ColumnMappings.Add("StraightCut", "StraightCut")
            tableMapping.ColumnMappings.Add("CuttingResidual", "CuttingResidual")
            tableMapping.ColumnMappings.Add("ConnectionBreak", "ConnectionBreak")
            tableMapping.ColumnMappings.Add("UncureGlue", "UncureGlue")
            tableMapping.ColumnMappings.Add("ExcessiveGlue", "ExcessiveGlue")
            tableMapping.ColumnMappings.Add("OverUnderWght", "OverUnderWght")
            tableMapping.ColumnMappings.Add("DisColor", "DisColor")
            tableMapping.ColumnMappings.Add("LogoSmearing", "LogoSmearing")
            tableMapping.ColumnMappings.Add("LogoDoubling", "LogoDoubling")
            tableMapping.ColumnMappings.Add("BarcodeMissing", "BarcodeMissing")
            tableMapping.ColumnMappings.Add("LargerSpots", "LargerSpots")
            tableMapping.ColumnMappings.Add("Smearing", "Smearing")
            tableMapping.ColumnMappings.Add("HFMissAlignment", "HFMissAlignment")
            tableMapping.ColumnMappings.Add("BlurPrinting", "BlurPrinting")
            tableMapping.ColumnMappings.Add("RCheck", "RCheck")
            tableMapping.ColumnMappings.Add("RPass", "RPass")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.AMB_Froming.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        SUM(tbl_PC_AMB_Hours_Tran.PanelDMG) AS PanelDMG, SUM(tbl_PC_AMB_Hou"& _ 
                "rs_Tran.OverLap) AS OverLap, SUM(tbl_PC_AMB_Hours_Tran.ZigZagSeam) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "              AS ZigZagSeam, SUM(tbl_PC_AMB_Hours_Tran.Wrinkle) AS Wrinkle, SUM("& _ 
                "tbl_PC_AMB_Hours_Tran.ArtWork) AS ArtWork, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC"& _ 
                "_AMB_Hours_Tran.UnbondedPanels) AS UnbondedPanels, SUM(tbl_PC_AMB_Hours_Tran.Sin"& _ 
                "gleOpenStrip) AS SingleOpenStrip, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hour"& _ 
                "s_Tran.OpenSeam) AS OpenSeam, SUM(tbl_PC_AMB_Hours_Tran.PanelCavity) AS PanelCav"& _ 
                "ity, SUM(tbl_PC_AMB_Hours_Tran.Touching) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS Touching,"& _ 
                " SUM(tbl_PC_AMB_Hours_Tran.OtherPrintingIssue) AS OtherPrintingIssue, SUM(tbl_PC"& _ 
                "_AMB_Hours_Tran.CoreCavity) AS CoreCavity, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC"& _ 
                "_AMB_Hours_Tran.PUC) AS PUC, SUM(tbl_PC_AMB_Hours_Tran.SeamClosingGlue) AS SeamC"& _ 
                "losingGlue, SUM(tbl_PC_AMB_Hours_Tran.BGrade) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS BGra"& _ 
                "de, SUM(tbl_PC_AMB_Hours_Tran.TotalChecked) AS TotalChecked, SUM(tbl_PC_AMB_Hour"& _ 
                "s_Tran.Pass + tbl_PC_AMB_Hours_Tran.RPass) AS Pass, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         S"& _ 
                "UM(tbl_PC_AMB_Hours_Tran.Fail) AS Fail, SUM(tbl_PC_AMB_Hours_Tran.StraightCut) A"& _ 
                "S StraightCut, SUM(tbl_PC_AMB_Hours_Tran.CuttingResidual) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "     AS CuttingResidual, SUM(tbl_PC_AMB_Hours_Tran.ConnectionBreak) AS Connectio"& _ 
                "nBreak, SUM(tbl_PC_AMB_Hours_Tran.UncureGlue) AS UncureGlue, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "        SUM(tbl_PC_AMB_Hours_Tran.ExcessiveGlue) AS ExcessiveGlue, SUM(tbl_PC_AM"& _ 
                "B_Hours_Tran.OverUnderWght) AS OverUnderWght, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl"& _ 
                "_PC_AMB_Hours_Tran.DisColor) AS DisColor, SUM(tbl_PC_AMB_Hours_Tran.LogoSmearing"& _ 
                ") AS LogoSmearing, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.LogoDoub"& _ 
                "ling) AS LogoDoubling, SUM(tbl_PC_AMB_Hours_Tran.BarcodeMissing) AS BarcodeMissi"& _ 
                "ng, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.LargerSpots) AS LargerS"& _ 
                "pots, SUM(tbl_PC_AMB_Hours_Tran.Smearing) AS Smearing, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       "& _ 
                "  SUM(tbl_PC_AMB_Hours_Tran.HFMissAlignment) AS HFMissAlignment, SUM(tbl_PC_AMB_"& _ 
                "Hours_Tran.BlurPrinting) AS BlurPrinting, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_"& _ 
                "AMB_Hours_Tran.RCheck + tbl_PC_AMB_Hours_Tran.Fail) AS RCheck, SUM(tbl_PC_AMB_Ho"& _ 
                "urs_Tran.RPass) AS RPass"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_PC_AMB_Hours_Tran, tbl_PC_AMB_Line"& _ 
                ", tbl_Inv_Tran_Date"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        tbl_PC_AMB_Hours_Tran.LineID = tbl_PC_AMB_Line"& _ 
                ".LineID AND tbl_PC_AMB_Hours_Tran.DayID = tbl_Inv_Tran_Date.DayNo AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "                 (tbl_PC_AMB_Hours_Tran.ProcessID = ?) AND (tbl_PC_AMB_Hours_Tra"& _ 
                "n.LineID = ?) AND (tbl_PC_AMB_Hours_Tran.Type = 1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       "& _ 
                "  (tbl_Inv_Tran_Date.DateName BETWEEN ? AND ?)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ProcessID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ProcessID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LineID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LineID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DateName", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DateName1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateName", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSAMB.View_AMb_RepairDataTable, ByVal ProcessID As Integer, ByVal LineID As Integer, ByVal DateName As Date, ByVal DateName1 As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ProcessID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(LineID,Integer)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(DateName,Date)
            Me.Adapter.SelectCommand.Parameters(3).Value = CType(DateName1,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal ProcessID As Integer, ByVal LineID As Integer, ByVal DateName As Date, ByVal DateName1 As Date) As DSAMB.View_AMb_RepairDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ProcessID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(LineID,Integer)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(DateName,Date)
            Me.Adapter.SelectCommand.Parameters(3).Value = CType(DateName1,Date)
            Dim dataTable As DSAMB.View_AMb_RepairDataTable = New DSAMB.View_AMb_RepairDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class View_AMb_RepairPAssTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "View_AMb_RepairPAss"
            tableMapping.ColumnMappings.Add("PanelDMG", "PanelDMG")
            tableMapping.ColumnMappings.Add("OverLap", "OverLap")
            tableMapping.ColumnMappings.Add("ZigZagSeam", "ZigZagSeam")
            tableMapping.ColumnMappings.Add("Wrinkle", "Wrinkle")
            tableMapping.ColumnMappings.Add("ArtWork", "ArtWork")
            tableMapping.ColumnMappings.Add("UnbondedPanels", "UnbondedPanels")
            tableMapping.ColumnMappings.Add("SingleOpenStrip", "SingleOpenStrip")
            tableMapping.ColumnMappings.Add("OpenSeam", "OpenSeam")
            tableMapping.ColumnMappings.Add("PanelCavity", "PanelCavity")
            tableMapping.ColumnMappings.Add("Touching", "Touching")
            tableMapping.ColumnMappings.Add("OtherPrintingIssue", "OtherPrintingIssue")
            tableMapping.ColumnMappings.Add("CoreCavity", "CoreCavity")
            tableMapping.ColumnMappings.Add("PUC", "PUC")
            tableMapping.ColumnMappings.Add("SeamClosingGlue", "SeamClosingGlue")
            tableMapping.ColumnMappings.Add("BGrade", "BGrade")
            tableMapping.ColumnMappings.Add("TotalChecked", "TotalChecked")
            tableMapping.ColumnMappings.Add("Pass", "Pass")
            tableMapping.ColumnMappings.Add("Fail", "Fail")
            tableMapping.ColumnMappings.Add("StraightCut", "StraightCut")
            tableMapping.ColumnMappings.Add("CuttingResidual", "CuttingResidual")
            tableMapping.ColumnMappings.Add("ConnectionBreak", "ConnectionBreak")
            tableMapping.ColumnMappings.Add("UncureGlue", "UncureGlue")
            tableMapping.ColumnMappings.Add("ExcessiveGlue", "ExcessiveGlue")
            tableMapping.ColumnMappings.Add("OverUnderWght", "OverUnderWght")
            tableMapping.ColumnMappings.Add("DisColor", "DisColor")
            tableMapping.ColumnMappings.Add("LogoSmearing", "LogoSmearing")
            tableMapping.ColumnMappings.Add("LogoDoubling", "LogoDoubling")
            tableMapping.ColumnMappings.Add("BarcodeMissing", "BarcodeMissing")
            tableMapping.ColumnMappings.Add("LargerSpots", "LargerSpots")
            tableMapping.ColumnMappings.Add("Smearing", "Smearing")
            tableMapping.ColumnMappings.Add("HFMissAlignment", "HFMissAlignment")
            tableMapping.ColumnMappings.Add("BlurPrinting", "BlurPrinting")
            tableMapping.ColumnMappings.Add("RCheck", "RCheck")
            tableMapping.ColumnMappings.Add("RPass", "RPass")
            tableMapping.ColumnMappings.Add("unevenBallSurface", "unevenBallSurface")
            tableMapping.ColumnMappings.Add("unshapecut", "unshapecut")
            tableMapping.ColumnMappings.Add("cuttingpanel", "cuttingpanel")
            tableMapping.ColumnMappings.Add("zigzagedge", "zigzagedge")
            tableMapping.ColumnMappings.Add("heavyprintdefects", "heavyprintdefects")
            tableMapping.ColumnMappings.Add("NewTouching", "NewTouching")
            tableMapping.ColumnMappings.Add("printmissallignament", "printmissallignament")
            tableMapping.ColumnMappings.Add("anymisprint", "anymisprint")
            tableMapping.ColumnMappings.Add("colourShape", "colourShape")
            tableMapping.ColumnMappings.Add("wrongartwork", "wrongartwork")
            tableMapping.ColumnMappings.Add("materialdefects", "materialdefects")
            tableMapping.ColumnMappings.Add("newopenSeam", "newopenSeam")
            tableMapping.ColumnMappings.Add("seamoverlapping", "seamoverlapping")
            tableMapping.ColumnMappings.Add("wrinkles", "wrinkles")
            tableMapping.ColumnMappings.Add("excussglue", "excussglue")
            tableMapping.ColumnMappings.Add("missingglue", "missingglue")
            tableMapping.ColumnMappings.Add("pressoremark", "pressoremark")
            tableMapping.ColumnMappings.Add("airbubble", "airbubble")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.AMB_Froming.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        SUM(tbl_PC_AMB_Hours_Tran.PanelDMG) AS PanelDMG, SUM(tbl_PC_AMB_Hou"& _ 
                "rs_Tran.OverLap) AS OverLap, SUM(tbl_PC_AMB_Hours_Tran.ZigZagSeam) AS ZigZagSeam"& _ 
                ", SUM(tbl_PC_AMB_Hours_Tran.Wrinkle) AS Wrinkle, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM("& _ 
                "tbl_PC_AMB_Hours_Tran.ArtWork) AS ArtWork, SUM(tbl_PC_AMB_Hours_Tran.UnbondedPan"& _ 
                "els) AS UnbondedPanels, SUM(tbl_PC_AMB_Hours_Tran.SingleOpenStrip) AS SingleOpen"& _ 
                "Strip, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.OpenSeam) AS OpenSea"& _ 
                "m, SUM(tbl_PC_AMB_Hours_Tran.PanelCavity) AS PanelCavity, SUM(tbl_PC_AMB_Hours_T"& _ 
                "ran.Touching) AS Touching, SUM(tbl_PC_AMB_Hours_Tran.OtherPrintingIssue) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                    AS OtherPrintingIssue, SUM(tbl_PC_AMB_Hours_Tran.CoreCavity)"& _ 
                " AS CoreCavity, SUM(tbl_PC_AMB_Hours_Tran.PUC) AS PUC, SUM(tbl_PC_AMB_Hours_Tran"& _ 
                ".SeamClosingGlue) AS SeamClosingGlue, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_"& _ 
                "Hours_Tran.BGrade) AS BGrade, SUM(tbl_PC_AMB_Hours_Tran.TotalChecked) AS TotalCh"& _ 
                "ecked, SUM(tbl_PC_AMB_Hours_Tran.Pass + tbl_PC_AMB_Hours_Tran.RPass) AS Pass, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                         SUM(tbl_PC_AMB_Hours_Tran.Fail) AS Fail, SUM(tbl_PC_AMB"& _ 
                "_Hours_Tran.StraightCut) AS StraightCut, SUM(tbl_PC_AMB_Hours_Tran.CuttingResidu"& _ 
                "al) AS CuttingResidual, SUM(tbl_PC_AMB_Hours_Tran.ConnectionBreak) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "              AS ConnectionBreak, SUM(tbl_PC_AMB_Hours_Tran.UncureGlue) AS Uncur"& _ 
                "eGlue, SUM(tbl_PC_AMB_Hours_Tran.ExcessiveGlue) AS ExcessiveGlue, SUM(tbl_PC_AMB"& _ 
                "_Hours_Tran.OverUnderWght) AS OverUnderWght, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_"& _ 
                "PC_AMB_Hours_Tran.DisColor) AS DisColor, SUM(tbl_PC_AMB_Hours_Tran.LogoSmearing)"& _ 
                " AS LogoSmearing, SUM(tbl_PC_AMB_Hours_Tran.LogoDoubling) AS LogoDoubling, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "& _ 
                "                      SUM(tbl_PC_AMB_Hours_Tran.BarcodeMissing) AS BarcodeMissin"& _ 
                "g, SUM(tbl_PC_AMB_Hours_Tran.LargerSpots) AS LargerSpots, SUM(tbl_PC_AMB_Hours_T"& _ 
                "ran.Smearing) AS Smearing, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran."& _ 
                "HFMissAlignment) AS HFMissAlignment, SUM(tbl_PC_AMB_Hours_Tran.BlurPrinting) AS "& _ 
                "BlurPrinting, SUM(tbl_PC_AMB_Hours_Tran.RCheck + tbl_PC_AMB_Hours_Tran.Fail) AS "& _ 
                "RCheck, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.RPass) AS RPass, SU"& _ 
                "M(tbl_PC_AMB_Hours_Tran.unevenBallSurface) AS unevenBallSurface, SUM(tbl_PC_AMB_"& _ 
                "Hours_Tran.unshapecut) AS unshapecut, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_"& _ 
                "Hours_Tran.cuttingpanel) AS cuttingpanel, SUM(tbl_PC_AMB_Hours_Tran.zigzagedge) "& _ 
                "AS zigzagedge, SUM(tbl_PC_AMB_Hours_Tran.heavyprintdefects) AS heavyprintdefects"& _ 
                ", "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.NewTouching) AS NewTouchi"& _ 
                "ng, SUM(tbl_PC_AMB_Hours_Tran.printmissallignament) AS printmissallignament, SUM"& _ 
                "(tbl_PC_AMB_Hours_Tran.anymisprint) AS anymisprint, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         S"& _ 
                "UM(tbl_PC_AMB_Hours_Tran.colourShape) AS colourShape, SUM(tbl_PC_AMB_Hours_Tran."& _ 
                "wrongartwork) AS wrongartwork, SUM(tbl_PC_AMB_Hours_Tran.materialdefects) AS mat"& _ 
                "erialdefects, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.newopenSeam) "& _ 
                "AS newopenSeam, SUM(tbl_PC_AMB_Hours_Tran.seamoverlapping) AS seamoverlapping, S"& _ 
                "UM(tbl_PC_AMB_Hours_Tran.wrinkles) AS wrinkles, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(t"& _ 
                "bl_PC_AMB_Hours_Tran.excussglue) AS excussglue, SUM(tbl_PC_AMB_Hours_Tran.missin"& _ 
                "gglue) AS missingglue, SUM(tbl_PC_AMB_Hours_Tran.pressoremark) AS pressoremark, "& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.airbubble) AS airbubble"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FR"& _ 
                "OM            tbl_PC_AMB_Hours_Tran, tbl_PC_AMB_Line, tbl_Inv_Tran_Date"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE  "& _ 
                "      tbl_PC_AMB_Hours_Tran.LineID = tbl_PC_AMB_Line.LineID AND tbl_PC_AMB_Hours"& _ 
                "_Tran.DayID = tbl_Inv_Tran_Date.DayNo AND (tbl_PC_AMB_Hours_Tran.ProcessID = ?) "& _ 
                "AND (tbl_PC_AMB_Hours_Tran.LineID = ?) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (tbl_PC_AM"& _ 
                "B_Hours_Tran.Type = 0) AND (tbl_Inv_Tran_Date.DateName BETWEEN ? AND ?)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ProcessID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ProcessID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LineID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LineID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DateName", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DateName1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateName", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSAMB.View_AMb_RepairPAssDataTable, ByVal ProcessID As Integer, ByVal LineID As Integer, ByVal DateName As Date, ByVal DateName1 As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ProcessID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(LineID,Integer)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(DateName,Date)
            Me.Adapter.SelectCommand.Parameters(3).Value = CType(DateName1,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal ProcessID As Integer, ByVal LineID As Integer, ByVal DateName As Date, ByVal DateName1 As Date) As DSAMB.View_AMb_RepairPAssDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ProcessID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(LineID,Integer)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(DateName,Date)
            Me.Adapter.SelectCommand.Parameters(3).Value = CType(DateName1,Date)
            Dim dataTable As DSAMB.View_AMb_RepairPAssDataTable = New DSAMB.View_AMb_RepairPAssDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Froming_HourllyTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Froming_Hourlly"
            tableMapping.ColumnMappings.Add("Checked", "Checked")
            tableMapping.ColumnMappings.Add("Pass", "Pass")
            tableMapping.ColumnMappings.Add("Fail", "Fail")
            tableMapping.ColumnMappings.Add("HourName", "HourName")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.AMB_Froming.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        tbl_PC_AMB_Hours.HourName, SUM(View_AMb_Packing_Pre_Hours.TotalChec"& _ 
                "ked) AS Checked, SUM(View_AMb_Packing_Pre_Hours.Pass) AS Pass, SUM(View_AMb_Pack"& _ 
                "ing_Pre_Hours.Fail) AS Fail"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            View_AMb_Packing_Pre_Hours, tbl_PC_"& _ 
                "AMB_Hours, tbl_Inv_Tran_Date"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        View_AMb_Packing_Pre_Hours.HID = tbl_"& _ 
                "PC_AMB_Hours.[Hour] AND View_AMb_Packing_Pre_Hours.DayID = tbl_Inv_Tran_Date.Day"& _ 
                "No AND (tbl_Inv_Tran_Date.DateName = ?) AND (View_AMb_Packing_Pre_Hours.LineID ="& _ 
                " ?) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AND (View_AMb_Packing_Pre_Hours.Type = 1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP "& _ 
                "BY tbl_PC_AMB_Hours.HourName, tbl_PC_AMB_Hours.HourID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY tbl_PC_AMB_Hours"& _ 
                ".HourID"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DateName", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LineID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LineID", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSAMB.Froming_HourllyDataTable, ByVal DateName As Date, ByVal LineID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateName,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(LineID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal DateName As Date, ByVal LineID As Integer) As DSAMB.Froming_HourllyDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateName,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(LineID,Integer)
            Dim dataTable As DSAMB.Froming_HourllyDataTable = New DSAMB.Froming_HourllyDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class View_Repair_QtyTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "View_Repair_Qty"
            tableMapping.ColumnMappings.Add("RCheck", "RCheck")
            tableMapping.ColumnMappings.Add("RPass", "RPass")
            tableMapping.ColumnMappings.Add("RFail", "RFail")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.AMB_Froming.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        SUM(RCheck) AS RCheck, SUM(RPass) AS RPass, SUM(RCheck - RPass) AS "& _ 
                "RFail"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_PC_AMB_Hours_Tran"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (LineID = ?) AND (Pro"& _ 
                "cessID = 1) AND (DayID = ?) AND (Type = 0)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LineID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LineID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DayID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DayID", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSAMB.View_Repair_QtyDataTable, ByVal LineID As Integer, ByVal DayID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LineID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(DayID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal LineID As Integer, ByVal DayID As Integer) As DSAMB.View_Repair_QtyDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LineID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(DayID,Integer)
            Dim dataTable As DSAMB.View_Repair_QtyDataTable = New DSAMB.View_Repair_QtyDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class View_Article_Wise_FailTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "View_Article_Wise_Fail"
            tableMapping.ColumnMappings.Add("PanelDMG", "PanelDMG")
            tableMapping.ColumnMappings.Add("OverLap", "OverLap")
            tableMapping.ColumnMappings.Add("ZigZagSeam", "ZigZagSeam")
            tableMapping.ColumnMappings.Add("Wrinkle", "Wrinkle")
            tableMapping.ColumnMappings.Add("ArtWork", "ArtWork")
            tableMapping.ColumnMappings.Add("UnbondedPanels", "UnbondedPanels")
            tableMapping.ColumnMappings.Add("SingleOpenStrip", "SingleOpenStrip")
            tableMapping.ColumnMappings.Add("OpenSeam", "OpenSeam")
            tableMapping.ColumnMappings.Add("PanelCavity", "PanelCavity")
            tableMapping.ColumnMappings.Add("Touching", "Touching")
            tableMapping.ColumnMappings.Add("OtherPrintingIssue", "OtherPrintingIssue")
            tableMapping.ColumnMappings.Add("CoreCavity", "CoreCavity")
            tableMapping.ColumnMappings.Add("PUC", "PUC")
            tableMapping.ColumnMappings.Add("SeamClosingGlue", "SeamClosingGlue")
            tableMapping.ColumnMappings.Add("BGrade", "BGrade")
            tableMapping.ColumnMappings.Add("TotalChecked", "TotalChecked")
            tableMapping.ColumnMappings.Add("Pass", "Pass")
            tableMapping.ColumnMappings.Add("Fail", "Fail")
            tableMapping.ColumnMappings.Add("StraightCut", "StraightCut")
            tableMapping.ColumnMappings.Add("CuttingResidual", "CuttingResidual")
            tableMapping.ColumnMappings.Add("ConnectionBreak", "ConnectionBreak")
            tableMapping.ColumnMappings.Add("UncureGlue", "UncureGlue")
            tableMapping.ColumnMappings.Add("ExcessiveGlue", "ExcessiveGlue")
            tableMapping.ColumnMappings.Add("OverUnderWght", "OverUnderWght")
            tableMapping.ColumnMappings.Add("MissAlligment", "MissAlligment")
            tableMapping.ColumnMappings.Add("DisColor", "DisColor")
            tableMapping.ColumnMappings.Add("LogoSmearing", "LogoSmearing")
            tableMapping.ColumnMappings.Add("LogoDoubling", "LogoDoubling")
            tableMapping.ColumnMappings.Add("BarcodeMissing", "BarcodeMissing")
            tableMapping.ColumnMappings.Add("LargerSpots", "LargerSpots")
            tableMapping.ColumnMappings.Add("Smearing", "Smearing")
            tableMapping.ColumnMappings.Add("HFMissAlignment", "HFMissAlignment")
            tableMapping.ColumnMappings.Add("RCheck", "RCheck")
            tableMapping.ColumnMappings.Add("RPass", "RPass")
            tableMapping.ColumnMappings.Add("BlurPrinting", "BlurPrinting")
            tableMapping.ColumnMappings.Add("RFail", "RFail")
            tableMapping.ColumnMappings.Add("airbubble", "airbubble")
            tableMapping.ColumnMappings.Add("pressoremark", "pressoremark")
            tableMapping.ColumnMappings.Add("missingglue", "missingglue")
            tableMapping.ColumnMappings.Add("excussglue", "excussglue")
            tableMapping.ColumnMappings.Add("wrinkles", "wrinkles")
            tableMapping.ColumnMappings.Add("seamoverlapping", "seamoverlapping")
            tableMapping.ColumnMappings.Add("newopenSeam", "newopenSeam")
            tableMapping.ColumnMappings.Add("materialdefects", "materialdefects")
            tableMapping.ColumnMappings.Add("wrongartwork", "wrongartwork")
            tableMapping.ColumnMappings.Add("colourShape", "colourShape")
            tableMapping.ColumnMappings.Add("anymisprint", "anymisprint")
            tableMapping.ColumnMappings.Add("printmissallignament", "printmissallignament")
            tableMapping.ColumnMappings.Add("NewTouching", "NewTouching")
            tableMapping.ColumnMappings.Add("heavyprintdefects", "heavyprintdefects")
            tableMapping.ColumnMappings.Add("cuttingpanel", "cuttingpanel")
            tableMapping.ColumnMappings.Add("zigzagedge", "zigzagedge")
            tableMapping.ColumnMappings.Add("unshapecut", "unshapecut")
            tableMapping.ColumnMappings.Add("unevenBallSurface", "unevenBallSurface")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.AMB_Froming.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        SUM(tbl_PC_AMB_Hours_Tran.PanelDMG) AS PanelDMG, SUM(tbl_PC_AMB_Hou"& _ 
                "rs_Tran.OverLap) AS OverLap, SUM(tbl_PC_AMB_Hours_Tran.ZigZagSeam) AS ZigZagSeam"& _ 
                ", SUM(tbl_PC_AMB_Hours_Tran.Wrinkle) AS Wrinkle, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM("& _ 
                "tbl_PC_AMB_Hours_Tran.ArtWork) AS ArtWork, SUM(tbl_PC_AMB_Hours_Tran.UnbondedPan"& _ 
                "els) AS UnbondedPanels, SUM(tbl_PC_AMB_Hours_Tran.SingleOpenStrip) AS SingleOpen"& _ 
                "Strip, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.OpenSeam) AS OpenSea"& _ 
                "m, SUM(tbl_PC_AMB_Hours_Tran.PanelCavity) AS PanelCavity, SUM(tbl_PC_AMB_Hours_T"& _ 
                "ran.Touching) AS Touching, SUM(tbl_PC_AMB_Hours_Tran.OtherPrintingIssue) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                    AS OtherPrintingIssue, SUM(tbl_PC_AMB_Hours_Tran.CoreCavity)"& _ 
                " AS CoreCavity, SUM(tbl_PC_AMB_Hours_Tran.PUC) AS PUC, SUM(tbl_PC_AMB_Hours_Tran"& _ 
                ".SeamClosingGlue) AS SeamClosingGlue, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_"& _ 
                "Hours_Tran.BGrade) AS BGrade, SUM(tbl_PC_AMB_Hours_Tran.TotalChecked) AS TotalCh"& _ 
                "ecked, SUM(tbl_PC_AMB_Hours_Tran.Pass) AS Pass, SUM(tbl_PC_AMB_Hours_Tran.Fail) "& _ 
                "AS Fail, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.StraightCut) AS St"& _ 
                "raightCut, SUM(tbl_PC_AMB_Hours_Tran.CuttingResidual) AS CuttingResidual, SUM(tb"& _ 
                "l_PC_AMB_Hours_Tran.ConnectionBreak) AS ConnectionBreak, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "    SUM(tbl_PC_AMB_Hours_Tran.UncureGlue) AS UncureGlue, SUM(tbl_PC_AMB_Hours_Tr"& _ 
                "an.ExcessiveGlue) AS ExcessiveGlue, SUM(tbl_PC_AMB_Hours_Tran.OverUnderWght) AS "& _ 
                "OverUnderWght, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.MissAlligmen"& _ 
                "t) AS MissAlligment, SUM(tbl_PC_AMB_Hours_Tran.DisColor) AS DisColor, SUM(tbl_PC"& _ 
                "_AMB_Hours_Tran.LogoSmearing) AS LogoSmearing, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tb"& _ 
                "l_PC_AMB_Hours_Tran.LogoDoubling) AS LogoDoubling, SUM(tbl_PC_AMB_Hours_Tran.Bar"& _ 
                "codeMissing) AS BarcodeMissing, SUM(tbl_PC_AMB_Hours_Tran.LargerSpots) AS Larger"& _ 
                "Spots, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.Smearing) AS Smearin"& _ 
                "g, SUM(tbl_PC_AMB_Hours_Tran.HFMissAlignment) AS HFMissAlignment, SUM(tbl_PC_AMB"& _ 
                "_Hours_Tran.RCheck) AS RCheck, SUM(tbl_PC_AMB_Hours_Tran.RPass) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "           AS RPass, SUM(tbl_PC_AMB_Hours_Tran.BlurPrinting) AS BlurPrinting, SU"& _ 
                "M(tbl_PC_AMB_Hours_Tran.RCheck - tbl_PC_AMB_Hours_Tran.RPass) AS RFail, tbl_PC_A"& _ 
                "MB_Hours_Tran.airbubble, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.pr"& _ 
                "essoremark) AS pressoremark, SUM(tbl_PC_AMB_Hours_Tran.missingglue) AS missinggl"& _ 
                "ue, SUM(tbl_PC_AMB_Hours_Tran.excussglue) AS excussglue, SUM(tbl_PC_AMB_Hours_Tr"& _ 
                "an.wrinkles) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS wrinkles, SUM(tbl_PC_AMB_Hours_Tran.s"& _ 
                "eamoverlapping) AS seamoverlapping, SUM(tbl_PC_AMB_Hours_Tran.newopenSeam) AS ne"& _ 
                "wopenSeam, SUM(tbl_PC_AMB_Hours_Tran.materialdefects) AS materialdefects, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                     SUM(tbl_PC_AMB_Hours_Tran.wrongartwork) AS wrongartwork, SU"& _ 
                "M(tbl_PC_AMB_Hours_Tran.colourShape) AS colourShape, SUM(tbl_PC_AMB_Hours_Tran.a"& _ 
                "nymisprint) AS anymisprint, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran"& _ 
                ".printmissallignament) AS printmissallignament, SUM(tbl_PC_AMB_Hours_Tran.NewTou"& _ 
                "ching) AS NewTouching, SUM(tbl_PC_AMB_Hours_Tran.heavyprintdefects) AS heavyprin"& _ 
                "tdefects, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.cuttingpanel) AS "& _ 
                "cuttingpanel, SUM(tbl_PC_AMB_Hours_Tran.zigzagedge) AS zigzagedge, SUM(tbl_PC_AM"& _ 
                "B_Hours_Tran.unshapecut) AS unshapecut, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AM"& _ 
                "B_Hours_Tran.unevenBallSurface) AS unevenBallSurface"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_PC_AMB"& _ 
                "_Hours_Tran, tbl_PC_AMB_Line, tbl_Inv_Tran_Date"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        tbl_PC_AMB_Hours_T"& _ 
                "ran.LineID = tbl_PC_AMB_Line.LineID AND tbl_PC_AMB_Hours_Tran.DayID = tbl_Inv_Tr"& _ 
                "an_Date.DayNo AND (tbl_PC_AMB_Hours_Tran.ProcessID = 1) AND (tbl_PC_AMB_Hours_Tr"& _ 
                "an.LineID = ?) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (tbl_PC_AMB_Hours_Tran.ClientID = "& _ 
                "?) AND (tbl_PC_AMB_Hours_Tran.ModelID = ?) AND (tbl_PC_AMB_Hours_Tran.ArtID = ?)"& _ 
                " AND (tbl_PC_AMB_Hours_Tran.Type = 0) AND (tbl_Inv_Tran_Date.DayNo = ?)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP B"& _ 
                "Y tbl_PC_AMB_Hours_Tran.airbubble"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LineID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LineID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ClientID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ClientID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ModelID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ModelID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ArtID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ArtID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DayNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DayNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSAMB.View_Article_Wise_FailDataTable, ByVal LineID As Integer, ByVal ClientID As Integer, ByVal ModelID As Integer, ByVal ArtID As Integer, ByVal DayNo As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LineID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(ClientID,Integer)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(ModelID,Integer)
            Me.Adapter.SelectCommand.Parameters(3).Value = CType(ArtID,Integer)
            Me.Adapter.SelectCommand.Parameters(4).Value = CType(DayNo,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal LineID As Integer, ByVal ClientID As Integer, ByVal ModelID As Integer, ByVal ArtID As Integer, ByVal DayNo As Integer) As DSAMB.View_Article_Wise_FailDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LineID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(ClientID,Integer)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(ModelID,Integer)
            Me.Adapter.SelectCommand.Parameters(3).Value = CType(ArtID,Integer)
            Me.Adapter.SelectCommand.Parameters(4).Value = CType(DayNo,Integer)
            Dim dataTable As DSAMB.View_Article_Wise_FailDataTable = New DSAMB.View_Article_Wise_FailDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class View_AMb_Forming_RepairTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "View_AMb_Forming_Repair"
            tableMapping.ColumnMappings.Add("PanelDMG", "PanelDMG")
            tableMapping.ColumnMappings.Add("OverLap", "OverLap")
            tableMapping.ColumnMappings.Add("ZigZagSeam", "ZigZagSeam")
            tableMapping.ColumnMappings.Add("Wrinkle", "Wrinkle")
            tableMapping.ColumnMappings.Add("ArtWork", "ArtWork")
            tableMapping.ColumnMappings.Add("UnbondedPanels", "UnbondedPanels")
            tableMapping.ColumnMappings.Add("SingleOpenStrip", "SingleOpenStrip")
            tableMapping.ColumnMappings.Add("OpenSeam", "OpenSeam")
            tableMapping.ColumnMappings.Add("PanelCavity", "PanelCavity")
            tableMapping.ColumnMappings.Add("Touching", "Touching")
            tableMapping.ColumnMappings.Add("OtherPrintingIssue", "OtherPrintingIssue")
            tableMapping.ColumnMappings.Add("CoreCavity", "CoreCavity")
            tableMapping.ColumnMappings.Add("PUC", "PUC")
            tableMapping.ColumnMappings.Add("SeamClosingGlue", "SeamClosingGlue")
            tableMapping.ColumnMappings.Add("BGrade", "BGrade")
            tableMapping.ColumnMappings.Add("TotalChecked", "TotalChecked")
            tableMapping.ColumnMappings.Add("Pass", "Pass")
            tableMapping.ColumnMappings.Add("Fail", "Fail")
            tableMapping.ColumnMappings.Add("StraightCut", "StraightCut")
            tableMapping.ColumnMappings.Add("CuttingResidual", "CuttingResidual")
            tableMapping.ColumnMappings.Add("ConnectionBreak", "ConnectionBreak")
            tableMapping.ColumnMappings.Add("UncureGlue", "UncureGlue")
            tableMapping.ColumnMappings.Add("ExcessiveGlue", "ExcessiveGlue")
            tableMapping.ColumnMappings.Add("OverUnderWght", "OverUnderWght")
            tableMapping.ColumnMappings.Add("DisColor", "DisColor")
            tableMapping.ColumnMappings.Add("LogoSmearing", "LogoSmearing")
            tableMapping.ColumnMappings.Add("LogoDoubling", "LogoDoubling")
            tableMapping.ColumnMappings.Add("BarcodeMissing", "BarcodeMissing")
            tableMapping.ColumnMappings.Add("LargerSpots", "LargerSpots")
            tableMapping.ColumnMappings.Add("Smearing", "Smearing")
            tableMapping.ColumnMappings.Add("HFMissAlignment", "HFMissAlignment")
            tableMapping.ColumnMappings.Add("BlurPrinting", "BlurPrinting")
            tableMapping.ColumnMappings.Add("RCheck", "RCheck")
            tableMapping.ColumnMappings.Add("RPass", "RPass")
            tableMapping.ColumnMappings.Add("RFail", "RFail")
            tableMapping.ColumnMappings.Add("airbubble", "airbubble")
            tableMapping.ColumnMappings.Add("pressoremark", "pressoremark")
            tableMapping.ColumnMappings.Add("missingglue", "missingglue")
            tableMapping.ColumnMappings.Add("excussglue", "excussglue")
            tableMapping.ColumnMappings.Add("wrinkles", "wrinkles")
            tableMapping.ColumnMappings.Add("seamoverlapping", "seamoverlapping")
            tableMapping.ColumnMappings.Add("newopenSeam", "newopenSeam")
            tableMapping.ColumnMappings.Add("materialdefects", "materialdefects")
            tableMapping.ColumnMappings.Add("wrongartwork", "wrongartwork")
            tableMapping.ColumnMappings.Add("colourShape", "colourShape")
            tableMapping.ColumnMappings.Add("anymisprint", "anymisprint")
            tableMapping.ColumnMappings.Add("printmissallignament", "printmissallignament")
            tableMapping.ColumnMappings.Add("NewTouching", "NewTouching")
            tableMapping.ColumnMappings.Add("heavyprintdefects", "heavyprintdefects")
            tableMapping.ColumnMappings.Add("cuttingpanel", "cuttingpanel")
            tableMapping.ColumnMappings.Add("zigzagedge", "zigzagedge")
            tableMapping.ColumnMappings.Add("unshapecut", "unshapecut")
            tableMapping.ColumnMappings.Add("unevenBallSurface", "unevenBallSurface")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.AMB_Froming.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        SUM(tbl_PC_AMB_Hours_Tran.PanelDMG) AS PanelDMG, SUM(tbl_PC_AMB_Hou"& _ 
                "rs_Tran.OverLap) AS OverLap, SUM(tbl_PC_AMB_Hours_Tran.ZigZagSeam) AS ZigZagSeam"& _ 
                ", SUM(tbl_PC_AMB_Hours_Tran.Wrinkle) AS Wrinkle, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM("& _ 
                "tbl_PC_AMB_Hours_Tran.ArtWork) AS ArtWork, SUM(tbl_PC_AMB_Hours_Tran.UnbondedPan"& _ 
                "els) AS UnbondedPanels, SUM(tbl_PC_AMB_Hours_Tran.SingleOpenStrip) AS SingleOpen"& _ 
                "Strip, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.OpenSeam) AS OpenSea"& _ 
                "m, SUM(tbl_PC_AMB_Hours_Tran.PanelCavity) AS PanelCavity, SUM(tbl_PC_AMB_Hours_T"& _ 
                "ran.Touching) AS Touching, SUM(tbl_PC_AMB_Hours_Tran.OtherPrintingIssue) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                    AS OtherPrintingIssue, SUM(tbl_PC_AMB_Hours_Tran.CoreCavity)"& _ 
                " AS CoreCavity, SUM(tbl_PC_AMB_Hours_Tran.PUC) AS PUC, SUM(tbl_PC_AMB_Hours_Tran"& _ 
                ".SeamClosingGlue) AS SeamClosingGlue, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_"& _ 
                "Hours_Tran.BGrade) AS BGrade, SUM(tbl_PC_AMB_Hours_Tran.TotalChecked) AS TotalCh"& _ 
                "ecked, SUM(tbl_PC_AMB_Hours_Tran.Pass) AS Pass, SUM(tbl_PC_AMB_Hours_Tran.Fail) "& _ 
                "AS Fail, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.StraightCut) AS St"& _ 
                "raightCut, SUM(tbl_PC_AMB_Hours_Tran.CuttingResidual) AS CuttingResidual, SUM(tb"& _ 
                "l_PC_AMB_Hours_Tran.ConnectionBreak) AS ConnectionBreak, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "    SUM(tbl_PC_AMB_Hours_Tran.UncureGlue) AS UncureGlue, SUM(tbl_PC_AMB_Hours_Tr"& _ 
                "an.ExcessiveGlue) AS ExcessiveGlue, SUM(tbl_PC_AMB_Hours_Tran.OverUnderWght) AS "& _ 
                "OverUnderWght, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.DisColor) AS"& _ 
                " DisColor, SUM(tbl_PC_AMB_Hours_Tran.LogoSmearing) AS LogoSmearing, SUM(tbl_PC_A"& _ 
                "MB_Hours_Tran.LogoDoubling) AS LogoDoubling, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_"& _ 
                "PC_AMB_Hours_Tran.BarcodeMissing) AS BarcodeMissing, SUM(tbl_PC_AMB_Hours_Tran.L"& _ 
                "argerSpots) AS LargerSpots, SUM(tbl_PC_AMB_Hours_Tran.Smearing) AS Smearing, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                        SUM(tbl_PC_AMB_Hours_Tran.HFMissAlignment) AS HFMissAlig"& _ 
                "nment, SUM(tbl_PC_AMB_Hours_Tran.BlurPrinting) AS BlurPrinting, SUM(tbl_PC_AMB_H"& _ 
                "ours_Tran.RCheck) AS RCheck, SUM(tbl_PC_AMB_Hours_Tran.RPass) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "         AS RPass, SUM(tbl_PC_AMB_Hours_Tran.RCheck - tbl_PC_AMB_Hours_Tran.RPas"& _ 
                "s) AS RFail, SUM(tbl_PC_AMB_Hours_Tran.airbubble) AS airbubble, SUM(tbl_PC_AMB_H"& _ 
                "ours_Tran.pressoremark) AS pressoremark, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_A"& _ 
                "MB_Hours_Tran.missingglue) AS missingglue, SUM(tbl_PC_AMB_Hours_Tran.excussglue)"& _ 
                " AS excussglue, SUM(tbl_PC_AMB_Hours_Tran.wrinkles) AS wrinkles, SUM(tbl_PC_AMB_"& _ 
                "Hours_Tran.seamoverlapping) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS seamoverlapping, SUM(t"& _ 
                "bl_PC_AMB_Hours_Tran.newopenSeam) AS newopenSeam, SUM(tbl_PC_AMB_Hours_Tran.mate"& _ 
                "rialdefects) AS materialdefects, SUM(tbl_PC_AMB_Hours_Tran.wrongartwork) AS wron"& _ 
                "gartwork, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.colourShape) AS c"& _ 
                "olourShape, SUM(tbl_PC_AMB_Hours_Tran.anymisprint) AS anymisprint, SUM(tbl_PC_AM"& _ 
                "B_Hours_Tran.printmissallignament) AS printmissallignament, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "       SUM(tbl_PC_AMB_Hours_Tran.NewTouching) AS NewTouching, SUM(tbl_PC_AMB_Hou"& _ 
                "rs_Tran.heavyprintdefects) AS heavyprintdefects, SUM(tbl_PC_AMB_Hours_Tran.cutti"& _ 
                "ngpanel) AS cuttingpanel, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.z"& _ 
                "igzagedge) AS zigzagedge, SUM(tbl_PC_AMB_Hours_Tran.unshapecut) AS unshapecut, S"& _ 
                "UM(tbl_PC_AMB_Hours_Tran.unevenBallSurface) AS unevenBallSurface"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM          "& _ 
                "  tbl_PC_AMB_Hours_Tran, tbl_PC_AMB_Line, tbl_Inv_Tran_Date"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        tbl_PC"& _ 
                "_AMB_Hours_Tran.LineID = tbl_PC_AMB_Line.LineID AND tbl_PC_AMB_Hours_Tran.DayID "& _ 
                "= tbl_Inv_Tran_Date.DayNo AND (tbl_PC_AMB_Hours_Tran.ProcessID = ?) AND (tbl_PC_"& _ 
                "AMB_Hours_Tran.LineID = ?) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (tbl_Inv_Tran_Date.Dat"& _ 
                "eName BETWEEN ? AND ?) AND (tbl_PC_AMB_Hours_Tran.Type = 0)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ProcessID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ProcessID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LineID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LineID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DateName", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DateName1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateName", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSAMB.View_AMb_Forming_RepairDataTable, ByVal ProcessID As Integer, ByVal LineID As Integer, ByVal DateName As Date, ByVal DateName1 As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ProcessID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(LineID,Integer)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(DateName,Date)
            Me.Adapter.SelectCommand.Parameters(3).Value = CType(DateName1,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal ProcessID As Integer, ByVal LineID As Integer, ByVal DateName As Date, ByVal DateName1 As Date) As DSAMB.View_AMb_Forming_RepairDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ProcessID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(LineID,Integer)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(DateName,Date)
            Me.Adapter.SelectCommand.Parameters(3).Value = CType(DateName1,Date)
            Dim dataTable As DSAMB.View_AMb_Forming_RepairDataTable = New DSAMB.View_AMb_Forming_RepairDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class View_AMb_Fresh_PassTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "View_AMb_Fresh_Pass"
            tableMapping.ColumnMappings.Add("PanelDMG", "PanelDMG")
            tableMapping.ColumnMappings.Add("OverLap", "OverLap")
            tableMapping.ColumnMappings.Add("ZigZagSeam", "ZigZagSeam")
            tableMapping.ColumnMappings.Add("Wrinkle", "Wrinkle")
            tableMapping.ColumnMappings.Add("ArtWork", "ArtWork")
            tableMapping.ColumnMappings.Add("UnbondedPanels", "UnbondedPanels")
            tableMapping.ColumnMappings.Add("SingleOpenStrip", "SingleOpenStrip")
            tableMapping.ColumnMappings.Add("OpenSeam", "OpenSeam")
            tableMapping.ColumnMappings.Add("PanelCavity", "PanelCavity")
            tableMapping.ColumnMappings.Add("Touching", "Touching")
            tableMapping.ColumnMappings.Add("OtherPrintingIssue", "OtherPrintingIssue")
            tableMapping.ColumnMappings.Add("CoreCavity", "CoreCavity")
            tableMapping.ColumnMappings.Add("PUC", "PUC")
            tableMapping.ColumnMappings.Add("SeamClosingGlue", "SeamClosingGlue")
            tableMapping.ColumnMappings.Add("BGrade", "BGrade")
            tableMapping.ColumnMappings.Add("TotalChecked", "TotalChecked")
            tableMapping.ColumnMappings.Add("Pass", "Pass")
            tableMapping.ColumnMappings.Add("Fail", "Fail")
            tableMapping.ColumnMappings.Add("StraightCut", "StraightCut")
            tableMapping.ColumnMappings.Add("CuttingResidual", "CuttingResidual")
            tableMapping.ColumnMappings.Add("ConnectionBreak", "ConnectionBreak")
            tableMapping.ColumnMappings.Add("UncureGlue", "UncureGlue")
            tableMapping.ColumnMappings.Add("ExcessiveGlue", "ExcessiveGlue")
            tableMapping.ColumnMappings.Add("OverUnderWght", "OverUnderWght")
            tableMapping.ColumnMappings.Add("DisColor", "DisColor")
            tableMapping.ColumnMappings.Add("LogoSmearing", "LogoSmearing")
            tableMapping.ColumnMappings.Add("LogoDoubling", "LogoDoubling")
            tableMapping.ColumnMappings.Add("BarcodeMissing", "BarcodeMissing")
            tableMapping.ColumnMappings.Add("LargerSpots", "LargerSpots")
            tableMapping.ColumnMappings.Add("Smearing", "Smearing")
            tableMapping.ColumnMappings.Add("HFMissAlignment", "HFMissAlignment")
            tableMapping.ColumnMappings.Add("BlurPrinting", "BlurPrinting")
            tableMapping.ColumnMappings.Add("RCheck", "RCheck")
            tableMapping.ColumnMappings.Add("RPass", "RPass")
            tableMapping.ColumnMappings.Add("OpeningBlance", "OpeningBlance")
            tableMapping.ColumnMappings.Add("unevenBallSurface", "unevenBallSurface")
            tableMapping.ColumnMappings.Add("unshapecut", "unshapecut")
            tableMapping.ColumnMappings.Add("zigzagedge", "zigzagedge")
            tableMapping.ColumnMappings.Add("cuttingpanel", "cuttingpanel")
            tableMapping.ColumnMappings.Add("heavyprintdefects", "heavyprintdefects")
            tableMapping.ColumnMappings.Add("NewTouching", "NewTouching")
            tableMapping.ColumnMappings.Add("printmissallignament", "printmissallignament")
            tableMapping.ColumnMappings.Add("anymisprint", "anymisprint")
            tableMapping.ColumnMappings.Add("colourShape", "colourShape")
            tableMapping.ColumnMappings.Add("wrongartwork", "wrongartwork")
            tableMapping.ColumnMappings.Add("materialdefects", "materialdefects")
            tableMapping.ColumnMappings.Add("newopenSeam", "newopenSeam")
            tableMapping.ColumnMappings.Add("seamoverlapping", "seamoverlapping")
            tableMapping.ColumnMappings.Add("wrinkles", "wrinkles")
            tableMapping.ColumnMappings.Add("excussglue", "excussglue")
            tableMapping.ColumnMappings.Add("missingglue", "missingglue")
            tableMapping.ColumnMappings.Add("pressoremark", "pressoremark")
            tableMapping.ColumnMappings.Add("airbubble", "airbubble")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.AMB_Froming.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        SUM(tbl_PC_AMB_Hours_Tran.PanelDMG) AS PanelDMG, SUM(tbl_PC_AMB_Hou"& _ 
                "rs_Tran.OverLap) AS OverLap, SUM(tbl_PC_AMB_Hours_Tran.ZigZagSeam) AS ZigZagSeam"& _ 
                ", SUM(tbl_PC_AMB_Hours_Tran.Wrinkle) AS Wrinkle, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM("& _ 
                "tbl_PC_AMB_Hours_Tran.ArtWork) AS ArtWork, SUM(tbl_PC_AMB_Hours_Tran.UnbondedPan"& _ 
                "els) AS UnbondedPanels, SUM(tbl_PC_AMB_Hours_Tran.SingleOpenStrip) AS SingleOpen"& _ 
                "Strip, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.OpenSeam) AS OpenSea"& _ 
                "m, SUM(tbl_PC_AMB_Hours_Tran.PanelCavity) AS PanelCavity, SUM(tbl_PC_AMB_Hours_T"& _ 
                "ran.Touching) AS Touching, SUM(tbl_PC_AMB_Hours_Tran.OtherPrintingIssue) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                    AS OtherPrintingIssue, SUM(tbl_PC_AMB_Hours_Tran.CoreCavity)"& _ 
                " AS CoreCavity, SUM(tbl_PC_AMB_Hours_Tran.PUC) AS PUC, SUM(tbl_PC_AMB_Hours_Tran"& _ 
                ".SeamClosingGlue) AS SeamClosingGlue, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_"& _ 
                "Hours_Tran.BGrade) AS BGrade, SUM(tbl_PC_AMB_Hours_Tran.TotalChecked) AS TotalCh"& _ 
                "ecked, SUM(tbl_PC_AMB_Hours_Tran.Pass) AS Pass, SUM(tbl_PC_AMB_Hours_Tran.Fail) "& _ 
                "AS Fail, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.StraightCut) AS St"& _ 
                "raightCut, SUM(tbl_PC_AMB_Hours_Tran.CuttingResidual) AS CuttingResidual, SUM(tb"& _ 
                "l_PC_AMB_Hours_Tran.ConnectionBreak) AS ConnectionBreak, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "    SUM(tbl_PC_AMB_Hours_Tran.UncureGlue) AS UncureGlue, SUM(tbl_PC_AMB_Hours_Tr"& _ 
                "an.ExcessiveGlue) AS ExcessiveGlue, SUM(tbl_PC_AMB_Hours_Tran.OverUnderWght) AS "& _ 
                "OverUnderWght, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.DisColor) AS"& _ 
                " DisColor, SUM(tbl_PC_AMB_Hours_Tran.LogoSmearing) AS LogoSmearing, SUM(tbl_PC_A"& _ 
                "MB_Hours_Tran.LogoDoubling) AS LogoDoubling, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_"& _ 
                "PC_AMB_Hours_Tran.BarcodeMissing) AS BarcodeMissing, SUM(tbl_PC_AMB_Hours_Tran.L"& _ 
                "argerSpots) AS LargerSpots, SUM(tbl_PC_AMB_Hours_Tran.Smearing) AS Smearing, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                        SUM(tbl_PC_AMB_Hours_Tran.HFMissAlignment) AS HFMissAlig"& _ 
                "nment, SUM(tbl_PC_AMB_Hours_Tran.BlurPrinting) AS BlurPrinting, SUM(tbl_PC_AMB_H"& _ 
                "ours_Tran.RCheck + tbl_PC_AMB_Hours_Tran.Fail) AS RCheck, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "     SUM(tbl_PC_AMB_Hours_Tran.RPass) AS RPass, MAX(tbl_PC_AMB_Hours_Tran.Openin"& _ 
                "gBlance) AS OpeningBlance, SUM(tbl_PC_AMB_Hours_Tran.unevenBallSurface) AS uneve"& _ 
                "nBallSurface, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.unshapecut) A"& _ 
                "S unshapecut, SUM(tbl_PC_AMB_Hours_Tran.zigzagedge) AS zigzagedge, SUM(tbl_PC_AM"& _ 
                "B_Hours_Tran.cuttingpanel) AS cuttingpanel, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_P"& _ 
                "C_AMB_Hours_Tran.heavyprintdefects) AS heavyprintdefects, SUM(tbl_PC_AMB_Hours_T"& _ 
                "ran.NewTouching) AS NewTouching, SUM(tbl_PC_AMB_Hours_Tran.printmissallignament)"& _ 
                " AS printmissallignament, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.a"& _ 
                "nymisprint) AS anymisprint, SUM(tbl_PC_AMB_Hours_Tran.colourShape) AS colourShap"& _ 
                "e, SUM(tbl_PC_AMB_Hours_Tran.wrongartwork) AS wrongartwork, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "       SUM(tbl_PC_AMB_Hours_Tran.materialdefects) AS materialdefects, SUM(tbl_PC"& _ 
                "_AMB_Hours_Tran.newopenSeam) AS newopenSeam, SUM(tbl_PC_AMB_Hours_Tran.seamoverl"& _ 
                "apping) AS seamoverlapping, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran"& _ 
                ".wrinkles) AS wrinkles, SUM(tbl_PC_AMB_Hours_Tran.excussglue) AS excussglue, SUM"& _ 
                "(tbl_PC_AMB_Hours_Tran.missingglue) AS missingglue, SUM(tbl_PC_AMB_Hours_Tran.pr"& _ 
                "essoremark) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS pressoremark, SUM(tbl_PC_AMB_Hours_Tra"& _ 
                "n.airbubble) AS airbubble"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_PC_AMB_Hours_Tran, tbl_PC_AMB_Lin"& _ 
                "e, tbl_Inv_Tran_Date"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        tbl_PC_AMB_Hours_Tran.LineID = tbl_PC_AMB_Lin"& _ 
                "e.LineID AND tbl_PC_AMB_Hours_Tran.DayID = tbl_Inv_Tran_Date.DayNo AND (tbl_PC_A"& _ 
                "MB_Hours_Tran.ProcessID = ?) AND (tbl_PC_AMB_Hours_Tran.LineID = ?) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                   (tbl_Inv_Tran_Date.DateName BETWEEN ? AND ?) AND (tbl_PC_AMB_"& _ 
                "Hours_Tran.Type = 1)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ProcessID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ProcessID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LineID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LineID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DateName", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DateName1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateName", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSAMB.View_AMb_Fresh_PassDataTable, ByVal ProcessID As Integer, ByVal LineID As Integer, ByVal DateName As Date, ByVal DateName1 As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ProcessID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(LineID,Integer)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(DateName,Date)
            Me.Adapter.SelectCommand.Parameters(3).Value = CType(DateName1,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal ProcessID As Integer, ByVal LineID As Integer, ByVal DateName As Date, ByVal DateName1 As Date) As DSAMB.View_AMb_Fresh_PassDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ProcessID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(LineID,Integer)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(DateName,Date)
            Me.Adapter.SelectCommand.Parameters(3).Value = CType(DateName1,Date)
            Dim dataTable As DSAMB.View_AMb_Fresh_PassDataTable = New DSAMB.View_AMb_Fresh_PassDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class View_AMb_Article_Wise_FreshTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "View_AMb_Article Wise_Fresh"
            tableMapping.ColumnMappings.Add("PanelDMG", "PanelDMG")
            tableMapping.ColumnMappings.Add("OverLap", "OverLap")
            tableMapping.ColumnMappings.Add("ZigZagSeam", "ZigZagSeam")
            tableMapping.ColumnMappings.Add("Wrinkle", "Wrinkle")
            tableMapping.ColumnMappings.Add("ArtWork", "ArtWork")
            tableMapping.ColumnMappings.Add("UnbondedPanels", "UnbondedPanels")
            tableMapping.ColumnMappings.Add("SingleOpenStrip", "SingleOpenStrip")
            tableMapping.ColumnMappings.Add("OpenSeam", "OpenSeam")
            tableMapping.ColumnMappings.Add("PanelCavity", "PanelCavity")
            tableMapping.ColumnMappings.Add("Touching", "Touching")
            tableMapping.ColumnMappings.Add("OtherPrintingIssue", "OtherPrintingIssue")
            tableMapping.ColumnMappings.Add("CoreCavity", "CoreCavity")
            tableMapping.ColumnMappings.Add("PUC", "PUC")
            tableMapping.ColumnMappings.Add("SeamClosingGlue", "SeamClosingGlue")
            tableMapping.ColumnMappings.Add("BGrade", "BGrade")
            tableMapping.ColumnMappings.Add("TotalChecked", "TotalChecked")
            tableMapping.ColumnMappings.Add("Pass", "Pass")
            tableMapping.ColumnMappings.Add("Fail", "Fail")
            tableMapping.ColumnMappings.Add("StraightCut", "StraightCut")
            tableMapping.ColumnMappings.Add("CuttingResidual", "CuttingResidual")
            tableMapping.ColumnMappings.Add("ConnectionBreak", "ConnectionBreak")
            tableMapping.ColumnMappings.Add("UncureGlue", "UncureGlue")
            tableMapping.ColumnMappings.Add("ExcessiveGlue", "ExcessiveGlue")
            tableMapping.ColumnMappings.Add("OverUnderWght", "OverUnderWght")
            tableMapping.ColumnMappings.Add("MissAlligment", "MissAlligment")
            tableMapping.ColumnMappings.Add("DisColor", "DisColor")
            tableMapping.ColumnMappings.Add("LogoSmearing", "LogoSmearing")
            tableMapping.ColumnMappings.Add("LogoDoubling", "LogoDoubling")
            tableMapping.ColumnMappings.Add("BarcodeMissing", "BarcodeMissing")
            tableMapping.ColumnMappings.Add("LargerSpots", "LargerSpots")
            tableMapping.ColumnMappings.Add("Smearing", "Smearing")
            tableMapping.ColumnMappings.Add("HFMissAlignment", "HFMissAlignment")
            tableMapping.ColumnMappings.Add("RCheck", "RCheck")
            tableMapping.ColumnMappings.Add("RPass", "RPass")
            tableMapping.ColumnMappings.Add("BlurPrinting", "BlurPrinting")
            tableMapping.ColumnMappings.Add("OpeningBlance", "OpeningBlance")
            tableMapping.ColumnMappings.Add("airbubble", "airbubble")
            tableMapping.ColumnMappings.Add("pressoremark", "pressoremark")
            tableMapping.ColumnMappings.Add("missingglue", "missingglue")
            tableMapping.ColumnMappings.Add("excussglue", "excussglue")
            tableMapping.ColumnMappings.Add("wrinkles", "wrinkles")
            tableMapping.ColumnMappings.Add("seamoverlapping", "seamoverlapping")
            tableMapping.ColumnMappings.Add("newopenSeam", "newopenSeam")
            tableMapping.ColumnMappings.Add("materialdefects", "materialdefects")
            tableMapping.ColumnMappings.Add("wrongartwork", "wrongartwork")
            tableMapping.ColumnMappings.Add("colourShape", "colourShape")
            tableMapping.ColumnMappings.Add("anymisprint", "anymisprint")
            tableMapping.ColumnMappings.Add("printmissallignament", "printmissallignament")
            tableMapping.ColumnMappings.Add("NewTouching", "NewTouching")
            tableMapping.ColumnMappings.Add("heavyprintdefects", "heavyprintdefects")
            tableMapping.ColumnMappings.Add("cuttingpanel", "cuttingpanel")
            tableMapping.ColumnMappings.Add("zigzagedge", "zigzagedge")
            tableMapping.ColumnMappings.Add("unshapecut", "unshapecut")
            tableMapping.ColumnMappings.Add("unevenBallSurface", "unevenBallSurface")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.AMB_Froming.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        SUM(tbl_PC_AMB_Hours_Tran.PanelDMG) AS PanelDMG, SUM(tbl_PC_AMB_Hou"& _ 
                "rs_Tran.OverLap) AS OverLap, SUM(tbl_PC_AMB_Hours_Tran.ZigZagSeam) AS ZigZagSeam"& _ 
                ", SUM(tbl_PC_AMB_Hours_Tran.Wrinkle) AS Wrinkle, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM("& _ 
                "tbl_PC_AMB_Hours_Tran.ArtWork) AS ArtWork, SUM(tbl_PC_AMB_Hours_Tran.UnbondedPan"& _ 
                "els) AS UnbondedPanels, SUM(tbl_PC_AMB_Hours_Tran.SingleOpenStrip) AS SingleOpen"& _ 
                "Strip, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.OpenSeam) AS OpenSea"& _ 
                "m, SUM(tbl_PC_AMB_Hours_Tran.PanelCavity) AS PanelCavity, SUM(tbl_PC_AMB_Hours_T"& _ 
                "ran.Touching) AS Touching, SUM(tbl_PC_AMB_Hours_Tran.OtherPrintingIssue) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                    AS OtherPrintingIssue, SUM(tbl_PC_AMB_Hours_Tran.CoreCavity)"& _ 
                " AS CoreCavity, SUM(tbl_PC_AMB_Hours_Tran.PUC) AS PUC, SUM(tbl_PC_AMB_Hours_Tran"& _ 
                ".SeamClosingGlue) AS SeamClosingGlue, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_"& _ 
                "Hours_Tran.BGrade) AS BGrade, SUM(tbl_PC_AMB_Hours_Tran.TotalChecked) AS TotalCh"& _ 
                "ecked, SUM(tbl_PC_AMB_Hours_Tran.Pass) AS Pass, SUM(tbl_PC_AMB_Hours_Tran.Fail) "& _ 
                "AS Fail, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.StraightCut) AS St"& _ 
                "raightCut, SUM(tbl_PC_AMB_Hours_Tran.CuttingResidual) AS CuttingResidual, SUM(tb"& _ 
                "l_PC_AMB_Hours_Tran.ConnectionBreak) AS ConnectionBreak, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "    SUM(tbl_PC_AMB_Hours_Tran.UncureGlue) AS UncureGlue, SUM(tbl_PC_AMB_Hours_Tr"& _ 
                "an.ExcessiveGlue) AS ExcessiveGlue, SUM(tbl_PC_AMB_Hours_Tran.OverUnderWght) AS "& _ 
                "OverUnderWght, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.MissAlligmen"& _ 
                "t) AS MissAlligment, SUM(tbl_PC_AMB_Hours_Tran.DisColor) AS DisColor, SUM(tbl_PC"& _ 
                "_AMB_Hours_Tran.LogoSmearing) AS LogoSmearing, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tb"& _ 
                "l_PC_AMB_Hours_Tran.LogoDoubling) AS LogoDoubling, SUM(tbl_PC_AMB_Hours_Tran.Bar"& _ 
                "codeMissing) AS BarcodeMissing, SUM(tbl_PC_AMB_Hours_Tran.LargerSpots) AS Larger"& _ 
                "Spots, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.Smearing) AS Smearin"& _ 
                "g, SUM(tbl_PC_AMB_Hours_Tran.HFMissAlignment) AS HFMissAlignment, SUM(tbl_PC_AMB"& _ 
                "_Hours_Tran.RCheck) AS RCheck, SUM(tbl_PC_AMB_Hours_Tran.RPass) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "           AS RPass, SUM(tbl_PC_AMB_Hours_Tran.BlurPrinting) AS BlurPrinting, MA"& _ 
                "X(tbl_PC_AMB_Hours_Tran.OpeningBlance) AS OpeningBlance, SUM(tbl_PC_AMB_Hours_Tr"& _ 
                "an.airbubble) AS airbubble, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran"& _ 
                ".pressoremark) AS pressoremark, SUM(tbl_PC_AMB_Hours_Tran.missingglue) AS missin"& _ 
                "gglue, SUM(tbl_PC_AMB_Hours_Tran.excussglue) AS excussglue, SUM(tbl_PC_AMB_Hours"& _ 
                "_Tran.wrinkles) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS wrinkles, SUM(tbl_PC_AMB_Hours_Tra"& _ 
                "n.seamoverlapping) AS seamoverlapping, SUM(tbl_PC_AMB_Hours_Tran.newopenSeam) AS"& _ 
                " newopenSeam, SUM(tbl_PC_AMB_Hours_Tran.materialdefects) AS materialdefects, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                        SUM(tbl_PC_AMB_Hours_Tran.wrongartwork) AS wrongartwork,"& _ 
                " SUM(tbl_PC_AMB_Hours_Tran.colourShape) AS colourShape, SUM(tbl_PC_AMB_Hours_Tra"& _ 
                "n.anymisprint) AS anymisprint, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_T"& _ 
                "ran.printmissallignament) AS printmissallignament, SUM(tbl_PC_AMB_Hours_Tran.New"& _ 
                "Touching) AS NewTouching, SUM(tbl_PC_AMB_Hours_Tran.heavyprintdefects) AS heavyp"& _ 
                "rintdefects, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC_AMB_Hours_Tran.cuttingpanel) "& _ 
                "AS cuttingpanel, SUM(tbl_PC_AMB_Hours_Tran.zigzagedge) AS zigzagedge, SUM(tbl_PC"& _ 
                "_AMB_Hours_Tran.unshapecut) AS unshapecut, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(tbl_PC"& _ 
                "_AMB_Hours_Tran.unevenBallSurface) AS unevenBallSurface"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_PC_"& _ 
                "AMB_Hours_Tran, tbl_PC_AMB_Line, tbl_Inv_Tran_Date"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        tbl_PC_AMB_Hour"& _ 
                "s_Tran.LineID = tbl_PC_AMB_Line.LineID AND tbl_PC_AMB_Hours_Tran.DayID = tbl_Inv"& _ 
                "_Tran_Date.DayNo AND (tbl_PC_AMB_Hours_Tran.ProcessID = ?) AND (tbl_PC_AMB_Hours"& _ 
                "_Tran.LineID = ?) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (tbl_PC_AMB_Hours_Tran.ClientID"& _ 
                " = ?) AND (tbl_PC_AMB_Hours_Tran.ModelID = ?) AND (tbl_PC_AMB_Hours_Tran.ArtID ="& _ 
                " ?) AND (tbl_Inv_Tran_Date.DayNo = ?) AND (tbl_PC_AMB_Hours_Tran.Type = 1)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ProcessID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ProcessID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LineID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LineID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ClientID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ClientID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ModelID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ModelID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ArtID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ArtID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DayNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DayNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSAMB.View_AMb_Article_Wise_FreshDataTable, ByVal ProcessID As Integer, ByVal LineID As Integer, ByVal ClientID As Integer, ByVal ModelID As Integer, ByVal ArtID As Integer, ByVal DayNo As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ProcessID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(LineID,Integer)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(ClientID,Integer)
            Me.Adapter.SelectCommand.Parameters(3).Value = CType(ModelID,Integer)
            Me.Adapter.SelectCommand.Parameters(4).Value = CType(ArtID,Integer)
            Me.Adapter.SelectCommand.Parameters(5).Value = CType(DayNo,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal ProcessID As Integer, ByVal LineID As Integer, ByVal ClientID As Integer, ByVal ModelID As Integer, ByVal ArtID As Integer, ByVal DayNo As Integer) As DSAMB.View_AMb_Article_Wise_FreshDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ProcessID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(LineID,Integer)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(ClientID,Integer)
            Me.Adapter.SelectCommand.Parameters(3).Value = CType(ModelID,Integer)
            Me.Adapter.SelectCommand.Parameters(4).Value = CType(ArtID,Integer)
            Me.Adapter.SelectCommand.Parameters(5).Value = CType(DayNo,Integer)
            Dim dataTable As DSAMB.View_AMb_Article_Wise_FreshDataTable = New DSAMB.View_AMb_Article_Wise_FreshDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_PC_AMB_Line1TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_PC_AMB_Line1"
            tableMapping.ColumnMappings.Add("LineName", "LineName")
            tableMapping.ColumnMappings.Add("LineID", "LineID")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tbl_PC_AMB_Line] WHERE (([LineName] = ?) AND ([LineID] = ?))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LineName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LineName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LineID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LineID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tbl_PC_AMB_Line] SET [LineName] = ? WHERE (([LineName] = ?) AND ([LineID]"& _ 
                " = ?))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LineName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LineName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LineName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LineName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LineID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LineID", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.AMB_Froming.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        LineName, LineID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_PC_AMB_Line"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (Li"& _ 
                "neID = ?)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LineID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LineID", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSAMB.tbl_PC_AMB_Line1DataTable, ByVal LineID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LineID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal LineID As Integer) As DSAMB.tbl_PC_AMB_Line1DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LineID,Integer)
            Dim dataTable As DSAMB.tbl_PC_AMB_Line1DataTable = New DSAMB.tbl_PC_AMB_Line1DataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSAMB.tbl_PC_AMB_Line1DataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSAMB) As Integer
            Return Me.Adapter.Update(dataSet, "tbl_PC_AMB_Line1")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_LineName As String, ByVal Original_LineID As Integer) As Integer
            If (Original_LineName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LineName")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_LineName,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_LineID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal LineName As String, ByVal Original_LineName As String, ByVal Original_LineID As Integer) As Integer
            If (LineName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LineName")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(LineName,String)
            End If
            If (Original_LineName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LineName")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Original_LineName,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_LineID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_Pro_Amb_ArticleTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_Pro_Amb_Article"
            tableMapping.ColumnMappings.Add("ClientID", "ClientID")
            tableMapping.ColumnMappings.Add("ModelID", "ModelID")
            tableMapping.ColumnMappings.Add("ArtID", "ArtID")
            tableMapping.ColumnMappings.Add("ArtCode", "ArtCode")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tbl_Pro_Article] WHERE (([ClientID] = ?) AND ([ModelID] = ?) AND ([A"& _ 
                "rtID] = ?) AND ([ArtCode] = ?))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ClientID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ClientID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ModelID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ModelID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ArtID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ArtID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ArtCode", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ArtCode", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tbl_Pro_Article] ([ClientID], [ModelID], [ArtID], [ArtCode]) VALUES "& _ 
                "(?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ClientID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ClientID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ModelID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ModelID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ArtID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ArtID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ArtCode", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ArtCode", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tbl_Pro_Article] SET [ClientID] = ?, [ModelID] = ?, [ArtID] = ?, [ArtCode"& _ 
                "] = ? WHERE (([ClientID] = ?) AND ([ModelID] = ?) AND ([ArtID] = ?) AND ([ArtCod"& _ 
                "e] = ?))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ClientID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ClientID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ModelID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ModelID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ArtID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ArtID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ArtCode", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ArtCode", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ClientID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ClientID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ModelID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ModelID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ArtID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ArtID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ArtCode", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ArtCode", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.AMB_Froming.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ClientID, ModelID, ArtID, ArtCode"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_Pro_Article"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (ClientID = ?) AND (ModelID = ?) AND (ArtID = ?)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ClientID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ClientID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ModelID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ModelID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ArtID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ArtID", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSAMB.tbl_Pro_Amb_ArticleDataTable, ByVal ClientID As Integer, ByVal ModelID As Integer, ByVal ArtID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ClientID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(ModelID,Integer)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(ArtID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal ClientID As Integer, ByVal ModelID As Integer, ByVal ArtID As Integer) As DSAMB.tbl_Pro_Amb_ArticleDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ClientID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(ModelID,Integer)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(ArtID,Integer)
            Dim dataTable As DSAMB.tbl_Pro_Amb_ArticleDataTable = New DSAMB.tbl_Pro_Amb_ArticleDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSAMB.tbl_Pro_Amb_ArticleDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSAMB) As Integer
            Return Me.Adapter.Update(dataSet, "tbl_Pro_Amb_Article")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ClientID As Integer, ByVal Original_ModelID As Integer, ByVal Original_ArtID As Integer, ByVal Original_ArtCode As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ClientID,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ModelID,Integer)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_ArtID,Integer)
            If (Original_ArtCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ArtCode")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_ArtCode,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ClientID As Integer, ByVal ModelID As Integer, ByVal ArtID As Integer, ByVal ArtCode As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ClientID,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(ModelID,Integer)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(ArtID,Integer)
            If (ArtCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ArtCode")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ArtCode,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ClientID As Integer, ByVal ModelID As Integer, ByVal ArtID As Integer, ByVal ArtCode As String, ByVal Original_ClientID As Integer, ByVal Original_ModelID As Integer, ByVal Original_ArtID As Integer, ByVal Original_ArtCode As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ClientID,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ModelID,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(ArtID,Integer)
            If (ArtCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ArtCode")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ArtCode,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_ClientID,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_ModelID,Integer)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_ArtID,Integer)
            If (Original_ArtCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ArtCode")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_ArtCode,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ArtCode As String, ByVal Original_ClientID As Integer, ByVal Original_ModelID As Integer, ByVal Original_ArtID As Integer, ByVal Original_ArtCode As String) As Integer
            Return Me.Update(Original_ClientID, Original_ModelID, Original_ArtID, ArtCode, Original_ClientID, Original_ModelID, Original_ArtID, Original_ArtCode)
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _tbl_Inv_Tran_DateTableAdapter As tbl_Inv_Tran_DateTableAdapter
        
        Private _tbl_PC_AMB_Hours_TranTableAdapter As tbl_PC_AMB_Hours_TranTableAdapter
        
        Private _tbl_PC_AMB_LineTableAdapter As tbl_PC_AMB_LineTableAdapter
        
        Private _tbl_PC_AMB_Line1TableAdapter As tbl_PC_AMB_Line1TableAdapter
        
        Private _tbl_Pro_Amb_ArticleTableAdapter As tbl_Pro_Amb_ArticleTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tbl_Inv_Tran_DateTableAdapter() As tbl_Inv_Tran_DateTableAdapter
            Get
                Return Me._tbl_Inv_Tran_DateTableAdapter
            End Get
            Set
                Me._tbl_Inv_Tran_DateTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tbl_PC_AMB_Hours_TranTableAdapter() As tbl_PC_AMB_Hours_TranTableAdapter
            Get
                Return Me._tbl_PC_AMB_Hours_TranTableAdapter
            End Get
            Set
                Me._tbl_PC_AMB_Hours_TranTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tbl_PC_AMB_LineTableAdapter() As tbl_PC_AMB_LineTableAdapter
            Get
                Return Me._tbl_PC_AMB_LineTableAdapter
            End Get
            Set
                Me._tbl_PC_AMB_LineTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tbl_PC_AMB_Line1TableAdapter() As tbl_PC_AMB_Line1TableAdapter
            Get
                Return Me._tbl_PC_AMB_Line1TableAdapter
            End Get
            Set
                Me._tbl_PC_AMB_Line1TableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tbl_Pro_Amb_ArticleTableAdapter() As tbl_Pro_Amb_ArticleTableAdapter
            Get
                Return Me._tbl_Pro_Amb_ArticleTableAdapter
            End Get
            Set
                Me._tbl_Pro_Amb_ArticleTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._tbl_Inv_Tran_DateTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_Inv_Tran_DateTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_Inv_Tran_DateTableAdapter.Connection
                End If
                If ((Not (Me._tbl_PC_AMB_Hours_TranTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_PC_AMB_Hours_TranTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_PC_AMB_Hours_TranTableAdapter.Connection
                End If
                If ((Not (Me._tbl_PC_AMB_LineTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_PC_AMB_LineTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_PC_AMB_LineTableAdapter.Connection
                End If
                If ((Not (Me._tbl_PC_AMB_Line1TableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_PC_AMB_Line1TableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_PC_AMB_Line1TableAdapter.Connection
                End If
                If ((Not (Me._tbl_Pro_Amb_ArticleTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_Pro_Amb_ArticleTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_Pro_Amb_ArticleTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._tbl_Inv_Tran_DateTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_PC_AMB_Hours_TranTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_PC_AMB_LineTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_PC_AMB_Line1TableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_Pro_Amb_ArticleTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DSAMB, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tbl_PC_AMB_LineTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tbl_PC_AMB_Line.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_PC_AMB_LineTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_PC_AMB_Hours_TranTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tbl_PC_AMB_Hours_Tran.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_PC_AMB_Hours_TranTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_Inv_Tran_DateTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tbl_Inv_Tran_Date.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_Inv_Tran_DateTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_PC_AMB_Line1TableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tbl_PC_AMB_Line1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_PC_AMB_Line1TableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_Pro_Amb_ArticleTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tbl_Pro_Amb_Article.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_Pro_Amb_ArticleTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DSAMB, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tbl_PC_AMB_LineTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tbl_PC_AMB_Line.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_PC_AMB_LineTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_PC_AMB_Hours_TranTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tbl_PC_AMB_Hours_Tran.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_PC_AMB_Hours_TranTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_Inv_Tran_DateTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tbl_Inv_Tran_Date.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_Inv_Tran_DateTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_PC_AMB_Line1TableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tbl_PC_AMB_Line1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_PC_AMB_Line1TableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_Pro_Amb_ArticleTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tbl_Pro_Amb_Article.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_Pro_Amb_ArticleTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DSAMB, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tbl_Pro_Amb_ArticleTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tbl_Pro_Amb_Article.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_Pro_Amb_ArticleTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_PC_AMB_Line1TableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tbl_PC_AMB_Line1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_PC_AMB_Line1TableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_Inv_Tran_DateTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tbl_Inv_Tran_Date.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_Inv_Tran_DateTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_PC_AMB_Hours_TranTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tbl_PC_AMB_Hours_Tran.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_PC_AMB_Hours_TranTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_PC_AMB_LineTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tbl_PC_AMB_Line.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_PC_AMB_LineTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DSAMB) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._tbl_Inv_Tran_DateTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_Inv_Tran_DateTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tbl_PC_AMB_Hours_TranTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_PC_AMB_Hours_TranTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tbl_PC_AMB_LineTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_PC_AMB_LineTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tbl_PC_AMB_Line1TableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_PC_AMB_Line1TableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tbl_Pro_Amb_ArticleTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_Pro_Amb_ArticleTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._tbl_Inv_Tran_DateTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_Inv_Tran_DateTableAdapter, Me._tbl_Inv_Tran_DateTableAdapter.Connection)
                    Me._tbl_Inv_Tran_DateTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_Inv_Tran_DateTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._tbl_Inv_Tran_DateTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_Inv_Tran_DateTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_Inv_Tran_DateTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_PC_AMB_Hours_TranTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_PC_AMB_Hours_TranTableAdapter, Me._tbl_PC_AMB_Hours_TranTableAdapter.Connection)
                    Me._tbl_PC_AMB_Hours_TranTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_PC_AMB_Hours_TranTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._tbl_PC_AMB_Hours_TranTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_PC_AMB_Hours_TranTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_PC_AMB_Hours_TranTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_PC_AMB_LineTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_PC_AMB_LineTableAdapter, Me._tbl_PC_AMB_LineTableAdapter.Connection)
                    Me._tbl_PC_AMB_LineTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_PC_AMB_LineTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._tbl_PC_AMB_LineTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_PC_AMB_LineTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_PC_AMB_LineTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_PC_AMB_Line1TableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_PC_AMB_Line1TableAdapter, Me._tbl_PC_AMB_Line1TableAdapter.Connection)
                    Me._tbl_PC_AMB_Line1TableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_PC_AMB_Line1TableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._tbl_PC_AMB_Line1TableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_PC_AMB_Line1TableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_PC_AMB_Line1TableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_Pro_Amb_ArticleTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_Pro_Amb_ArticleTableAdapter, Me._tbl_Pro_Amb_ArticleTableAdapter.Connection)
                    Me._tbl_Pro_Amb_ArticleTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_Pro_Amb_ArticleTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._tbl_Pro_Amb_ArticleTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_Pro_Amb_ArticleTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_Pro_Amb_ArticleTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._tbl_Inv_Tran_DateTableAdapter) Is Nothing) Then
                    Me._tbl_Inv_Tran_DateTableAdapter.Connection = CType(revertConnections(Me._tbl_Inv_Tran_DateTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_Inv_Tran_DateTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_PC_AMB_Hours_TranTableAdapter) Is Nothing) Then
                    Me._tbl_PC_AMB_Hours_TranTableAdapter.Connection = CType(revertConnections(Me._tbl_PC_AMB_Hours_TranTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_PC_AMB_Hours_TranTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_PC_AMB_LineTableAdapter) Is Nothing) Then
                    Me._tbl_PC_AMB_LineTableAdapter.Connection = CType(revertConnections(Me._tbl_PC_AMB_LineTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_PC_AMB_LineTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_PC_AMB_Line1TableAdapter) Is Nothing) Then
                    Me._tbl_PC_AMB_Line1TableAdapter.Connection = CType(revertConnections(Me._tbl_PC_AMB_Line1TableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_PC_AMB_Line1TableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_Pro_Amb_ArticleTableAdapter) Is Nothing) Then
                    Me._tbl_Pro_Amb_ArticleTableAdapter.Connection = CType(revertConnections(Me._tbl_Pro_Amb_ArticleTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_Pro_Amb_ArticleTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
